using System.ComponentModel.DataAnnotations;
using Core.Helper;
using Data;
using DevExpress.Mvvm.DataAnnotations;

namespace KursDomain.Documents.CommonReferences.Kontragent;

/// <summary>
/// SD_148 Категория клиента </summary>
[MetadataType(typeof(DataAnnotationsKontragentCategory))]
public class KontragentClientCategory : CategoryClientTypeViewModel
{
    /// <summary>
    /// SD_148
    /// </summary>
    public KontragentClientCategory()
    {
    }

    public KontragentClientCategory(SD_148 entity) : base(entity)
    {
    }

    public override decimal DocCode
    {
        get => Entity.DOC_CODE;
        set
        {
            if (Entity.DOC_CODE == value) return;
            Entity.DOC_CODE = value;
            RaisePropertyChanged();
        }
    }

    public override string Name
    {
        get => Entity.CK_NAME;
        set
        {
            if (Entity.CK_NAME == value) return;
            Entity.CK_NAME = value;
            RaisePropertyChanged();
        }
    }

    public override string ToString()
    {
        return Name;
    }
}

public class DataAnnotationsKontragentCategory : DataAnnotationForFluentApiBase,
    IMetadataProvider<KontragentClientCategory>
{
    void IMetadataProvider<KontragentClientCategory>.BuildMetadata(MetadataBuilder<KontragentClientCategory> builder)
    {
        SetNotAutoGenerated(builder);
        builder.Property(_ => _.Name).AutoGenerated().DisplayName("Наименование");
        //builder.Property(_ => _.IsCanNegativeRest).AutoGenerated().DisplayName("Отрицат.остатки");
        //builder.Property(_ => _.).AutoGenerated().DisplayName("Наименование");
    }
}
