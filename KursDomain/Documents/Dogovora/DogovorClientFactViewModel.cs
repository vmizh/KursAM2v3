using System.ComponentModel.DataAnnotations;
using Core.Helper;
using Core.ViewModel.Base;
using DevExpress.Mvvm.DataAnnotations;
using KursDomain.Documents.NomenklManagement;
using KursDomain.References;

namespace KursDomain.Documents.Dogovora;

public class DogovorClientFactViewModel_FluentAPI : DataAnnotationForFluentApiBase,
    IMetadataProvider<DogovorClientFactViewModel>
{
    void IMetadataProvider<DogovorClientFactViewModel>.BuildMetadata(
        MetadataBuilder<DogovorClientFactViewModel> builder)
    {
        SetNotAutoGenerated(builder);
        builder.Property(_ => _.Summa).AutoGenerated().DisplayName("Сумма").DisplayFormatString("n2");
        builder.Property(_ => _.Quantity).AutoGenerated().DisplayName("Кол-во").DisplayFormatString("n4");
        builder.Property(_ => _.Nomenkl).AutoGenerated().DisplayName("Номенклатура").ReadOnly();
        builder.Property(_ => _.NomenklNumber).AutoGenerated().DisplayName("Ном.№").ReadOnly();
        builder.Property(_ => _.Unit).AutoGenerated().DisplayName("Ев.изм.").ReadOnly();
        builder.Property(_ => _.Price).AutoGenerated().DisplayName("Цена").DisplayFormatString("n2");
        builder.Property(_ => _.Note).AutoGenerated().DisplayName("Примечание");
        builder.Property(_ => _.SFactInfo).AutoGenerated().DisplayName("Счет-фактура");
        builder.Property(_ => _.SFactNote).AutoGenerated().DisplayName("Примечание(с-ф");
        builder.Property(_ => _.WayBillInfo).AutoGenerated().DisplayName("Накладная");
        builder.Property(_ => _.WayBillNote).AutoGenerated().DisplayName("Примечание(накл.)");
    }
}

[MetadataType(typeof(DogovorClientFactViewModel_FluentAPI))]
public class DogovorClientFactViewModel : RSViewModelBase
{
    #region Fields

    private decimal myQuantity;
    private decimal myPrice;
    private decimal mySumma;
    private string mySFactInfo;
    private string myWayBillInfo;
    private string mySFactNote;
    private string myWayBillNote;
    private decimal mySFactDC;
    private Nomenkl myNomenkl;
    private decimal myWayBillDC;

    #endregion

    #region Constructors

    #endregion

    #region Properties

    public Nomenkl Nomenkl
    {
        get => myNomenkl;
        set
        {
            if (myNomenkl == value) return;
            myNomenkl = value;
            RaisePropertyChanged();
        }
    }

    public string NomenklNumber => Nomenkl?.NomenklNumber;
    public Unit Unit => Nomenkl?.Unit as Unit;

    public decimal Quantity
    {
        get => myQuantity;
        set
        {
            if (myQuantity == value) return;
            myQuantity = value;
            RaisePropertyChanged();
        }
    }

    public decimal Price
    {
        get => myPrice;
        set
        {
            if (myPrice == value) return;
            myPrice = value;
            RaisePropertyChanged();
        }
    }

    public decimal Summa
    {
        get => mySumma;
        set
        {
            if (mySumma == value) return;
            mySumma = value;
            RaisePropertyChanged();
        }
    }

    public decimal SFactDC
    {
        get => mySFactDC;
        set
        {
            if (mySFactDC == value) return;
            mySFactDC = value;
            RaisePropertyChanged();
        }
    }

    public string SFactInfo
    {
        get => mySFactInfo;
        set
        {
            if (mySFactInfo == value) return;
            mySFactInfo = value;
            RaisePropertyChanged();
        }
    }

    public string SFactNote
    {
        get => mySFactNote;
        set
        {
            if (mySFactNote == value) return;
            mySFactNote = value;
            RaisePropertyChanged();
        }
    }

    public decimal WayBillDC
    {
        get => myWayBillDC;
        set
        {
            if (myWayBillDC == value) return;
            myWayBillDC = value;
            RaisePropertyChanged();
        }
    }

    public string WayBillInfo
    {
        get => myWayBillInfo;
        set
        {
            if (myWayBillInfo == value) return;
            myWayBillInfo = value;
            RaisePropertyChanged();
        }
    }

    public string WayBillNote
    {
        get => myWayBillNote;
        set
        {
            if (myWayBillNote == value) return;
            myWayBillNote = value;
            RaisePropertyChanged();
        }
    }

    #endregion

    #region Methods

    #endregion

    #region Commands

    #endregion
}
