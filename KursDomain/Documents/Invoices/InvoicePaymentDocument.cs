using System;
using System.ComponentModel.DataAnnotations;
using Core.Helper;
using Core.ViewModel.Base;
using DevExpress.Mvvm.DataAnnotations;
using KursDomain.Documents.CommonReferences;

namespace KursDomain.Documents.Invoices;

public interface IInvoicePaymentDocument
{
    public decimal DocCode { set; get; }
    public int Code { set; get; }
    public Guid Id { set; get; }
    public DocumentType DocumentType { set; get; }
    public string DocumentName { set; get; }
    public decimal Summa { set; get; }
    public References.Currency Currency { set; get; }
}

[MetadataType(typeof(DataAnnotationsInvoicePaymentDocument))]
public class InvoicePaymentDocument : RSViewModelBase, IInvoicePaymentDocument
{
    #region Fields

    #endregion

    #region Constructors

    #endregion

    #region Properties

    public override decimal DocCode { set; get; }
    public override int Code { set; get; }
    public override Guid Id { set; get; }
    public DocumentType DocumentType { set; get; }
    public string DocumentName { set; get; }
    public decimal Summa { set; get; }
    public References.Currency Currency { set; get; }

    public decimal FromDC { set; get; }

    public string FromName { set; get; }
    public decimal Rate { set; get; } = 0;

    #endregion

    #region Commands

    #endregion
}

public class DataAnnotationsInvoicePaymentDocument : DataAnnotationForFluentApiBase,
    IMetadataProvider<InvoicePaymentDocument>
{
    void IMetadataProvider<InvoicePaymentDocument>.BuildMetadata(MetadataBuilder<InvoicePaymentDocument> builder)
    {
        SetNotAutoGenerated(builder);
        builder.Property(_ => _.DocumentType).AutoGenerated().DisplayName("Тип документа");
        builder.Property(_ => _.FromName).AutoGenerated().DisplayName("Касса/Банк");
        builder.Property(_ => _.DocumentName).AutoGenerated().DisplayName("Документ");
        builder.Property(_ => _.Summa).AutoGenerated().DisplayName("Сумма");
        builder.Property(_ => _.Currency).AutoGenerated().DisplayName("Валюта");
        builder.Property(_ => _.Rate).AutoGenerated().DisplayName("Курс");
        builder.Property(_ => _.Note).AutoGenerated().DisplayName("Примечание");
    }
}
