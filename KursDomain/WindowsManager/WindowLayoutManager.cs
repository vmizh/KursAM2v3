using System;
using System.IO;
using System.Linq;
using System.Text;
using Data;
using DevExpress.Xpf.Core;

namespace KursDomain.WindowsManager.WindowsManager;

public abstract class WindowLayoutManager
{
    public MemoryStream StartLayout { set; get; }
    public Guid UserId { set; get; }
    public bool IsFilterCanSave { set; get; }
    public bool IsAutoGeneratedSummary { set; get; }
    public bool IsAutoSetFormat { set; get; }
    public string Name { set; get; }
    protected KursSystemEntities DBContext { set; get; }
    protected ThemedWindow Window { set; get; }

    public virtual void Save()
    {
        var ms = new MemoryStream();
        Window.SaveLayoutToStream(ms);
        ms.Position = 0;
        using (var reader = new StreamReader(ms))
        {
            var saveLayout = reader.ReadToEnd();
            using (var transaction = DBContext.Database.BeginTransaction())
            {
                try
                {
                    var oldLayout = DBContext.FormLayout.FirstOrDefault(_ => _.UserId == UserId
                                                                             && _.FormName == Name &&
                                                                             _.ControlName == Name);
                    if (oldLayout == null)
                    {
                        DBContext.FormLayout.Add(new FormLayout
                        {
                            Id = Guid.NewGuid(),
                            UpdateDate = DateTime.Now,
                            UserId = UserId,
                            FormName = Name,
                            ControlName = Name,
                            Layout = saveLayout
                        });
                    }
                    else
                    {
                        oldLayout.UpdateDate = DateTime.Now;
                        oldLayout.Layout = saveLayout;
                    }

                    DBContext.SaveChanges();
                    transaction.Commit();
                }
#pragma warning disable CS0168
                catch (Exception ex)
#pragma warning restore CS0168
                {
                    transaction.Rollback();
                }
            }
        }
    }

    public virtual void Load()
    {
        var oldLayout = DBContext.FormLayout.FirstOrDefault(_ => _.UserId == UserId
                                                                 && _.FormName == Name && _.ControlName == Name);

        if (oldLayout == null) return;
        Window.RestoreLayoutFromStream(new MemoryStream(Encoding.ASCII.GetBytes(oldLayout.Layout)));
    }

    public bool CheckLayoutExists()
    {
        var oldLayout = DBContext.FormLayout.FirstOrDefault(_ => _.UserId == UserId
                                                                 && _.FormName == Name && _.ControlName == Name);
        return oldLayout != null;
    }

    public virtual void Restore()
    {
        Window.RestoreLayoutFromStream(StartLayout);
    }
}
