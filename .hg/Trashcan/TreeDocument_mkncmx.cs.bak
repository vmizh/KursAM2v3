using System.ComponentModel.DataAnnotations;
using Core.EntityViewModel;
using Core.Helper;
using Core.ViewModel.Base;
using DevExpress.Mvvm.DataAnnotations;

namespace KursAM2.ViewModel.Reference
{
    [MetadataType(typeof(DataAnnotations_TreeDocument))]
    public class TreeDocument : RSViewModelBase
    {
        private int myColorState;
        private bool myIsCheked;
        public int BaseId { set; get; }
        public int? BaseParentId { set; get; }

        public bool IsCheked
        {
            set
            {
                if (myIsCheked == value) return;
                myIsCheked = value;
                RaisePropertiesChanged();
            }
            get => myIsCheked;
        }

        public int ColorState
        {
            get => myColorState;
            set
            {
                if (myColorState == value) return;
                myColorState = value;
                RaisePropertyChanged();
            }
        }
    }

    public class DataAnnotations_TreeDocument : DataAnnotationForFluentApiBase, IMetadataProvider<TreeDocument>
    {
        void IMetadataProvider<TreeDocument>.BuildMetadata(MetadataBuilder<TreeDocument> builder)
        {
            SetNotAutoGenerated(builder);
            //builder.Property(_ => _.).DisplayName("").Description("").ReadOnly();
            builder.Property(_ => _.Name).AutoGenerated().DisplayName("Наименование");
            builder.Property(_ => _.BaseId).NotAutoGenerated();
            builder.Property(_ => _.BaseParentId).NotAutoGenerated();
            builder.Property(_ => _.ColorState).NotAutoGenerated();
            builder.Property(_ => _.Parent).NotAutoGenerated();
            builder.Property(_ => _.Note).NotAutoGenerated();
            builder.Property(_ => _.ParentDC).NotAutoGenerated();
            builder.Property(_ => _.StringId).NotAutoGenerated();
            builder.Property(_ => _.State).NotAutoGenerated();
            builder.Property(_ => _.ParentDocCode).NotAutoGenerated();
            builder.Property(_ => _.IsCheked).AutoGenerated().DisplayName("Выбрано");
        }
    }

}