using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Core.Helper;
using Data;
using DevExpress.Mvvm.DataAnnotations;

namespace Core.EntityViewModel
{
    [MetadataType(typeof(DataAnnotationsPeriodGroupsExludeViewModel))]
    public class PeriodGroupsExludeViewModel : PERIOD_CLOSED_EXCLUDEViewModel
    {
        public PeriodGroupsExludeViewModel()
        {
            Entity = DefaultValue();
        }

        public PeriodGroupsExludeViewModel(PERIOD_CLOSED_EXCLUDE entity)
        {
            Entity = entity ?? DefaultValue();
        }

        private string myGroupName;

        public string GroupName
        {
            set
            {
                if (myGroupName == value) return;
                myGroupName = value;
                RaisePropertyChanged();
            }
            get => myGroupName;
        }
    }
    public class DataAnnotationsPeriodGroupsExludeViewModel : DataAnnotationForFluentApiBase, IMetadataProvider<PeriodGroupsExludeViewModel>
    {
        void IMetadataProvider<PeriodGroupsExludeViewModel>.BuildMetadata(MetadataBuilder<PeriodGroupsExludeViewModel> builder)
        {
            SetNotAutoGenerated(builder);
            builder.Property(_ => _.GroupName).AutoGenerated().ReadOnly().DisplayName("Группа");
            builder.Property(_ => _.DateExclude).AutoGenerated().DisplayName("Дата закрытия");
            builder.Property(_ => _.DateFrom).AutoGenerated().DisplayName("Действует до");
        }
    }

}
