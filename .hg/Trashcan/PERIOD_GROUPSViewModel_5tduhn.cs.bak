using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Core.Helper;
using Core.ViewModel.Base;
using Data;
using DevExpress.Mvvm.DataAnnotations;

namespace Core.EntityViewModel
{
    [MetadataType(typeof(DataAnnotationsPERIOD_GROUPSViewModel))]
    public class PERIOD_GROUPSViewModel : RSViewModelBase, IEntity<PERIOD_GROUPS>
    {
        private PERIOD_GROUPS myEntity;

        public PERIOD_GROUPSViewModel()
        {
            Entity = new PERIOD_GROUPS();
        }

        public PERIOD_GROUPSViewModel(PERIOD_GROUPS entity)
        {
            Entity = entity ?? new PERIOD_GROUPS();
        }

        public override Guid Id
        {
            get => Entity.ID;
            set
            {
                if (Entity.ID == value) return;
                Entity.ID = value;
                RaisePropertyChanged();
            }
        }

        public override string Name
        {
            get => Entity.NAME;
            set
            {
                if (Entity.NAME == value) return;
                Entity.NAME = value;
                RaisePropertyChanged();
            }
        }

        public PERIOD_GROUPS Entity
        {
            get => myEntity;
            set
            {
                if (myEntity == value) return;
                myEntity = value;
                RaisePropertyChanged();
            }
        }

        public virtual PERIOD_GROUPS Load(decimal dc)
        {
            throw new NotImplementedException();
        }

        public virtual PERIOD_GROUPS Load(Guid id)
        {
            throw new NotImplementedException();
        }

        public virtual void Save(PERIOD_GROUPS doc)
        {
            throw new NotImplementedException();
        }

        public void Save()
        {
            throw new NotImplementedException();
        }

        public void Delete()
        {
            throw new NotImplementedException();
        }

        public void Delete(Guid id)
        {
            throw new NotImplementedException();
        }

        public void Delete(decimal dc)
        {
            throw new NotImplementedException();
        }

        public void UpdateFrom(PERIOD_GROUPS ent)
        {
            Id = ent.ID;
            Name = ent.NAME;
            // PERIOD_CLOSED_EXCLUDE = ent.PERIOD_CLOSED_EXCLUDE;
            // PERIOD_GROUPS_USERS = ent.PERIOD_GROUPS_USERS;
        }

        public void UpdateTo(PERIOD_GROUPS ent)
        {
            ent.ID = Id;
            ent.NAME = Name;
            // ent.PERIOD_CLOSED_EXCLUDE = PERIOD_CLOSED_EXCLUDE;
            //ent.PERIOD_GROUPS_USERS = PERIOD_GROUPS_USERS;
        }

        public PERIOD_GROUPS DefaultValue()
        {
            throw new NotImplementedException();
        }

        public List<PERIOD_GROUPS> LoadList()
        {
            throw new NotImplementedException();
        }

        public EntityLoadCodition LoadCondition { get; set; }
    }
    public class DataAnnotationsPERIOD_GROUPSViewModel : DataAnnotationForFluentApiBase, IMetadataProvider<PERIOD_GROUPSViewModel>
    {
        void IMetadataProvider<PERIOD_GROUPSViewModel>.BuildMetadata(MetadataBuilder<PERIOD_GROUPSViewModel> builder)
        {
            SetNotAutoGenerated(builder);
            builder.Property(_ => _.Name).AutoGenerated().DisplayName("Группа");
        }
    }

}