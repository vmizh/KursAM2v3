diff --git a/Core/EntityViewModel/SFClientRowViewModel.cs b/Core/EntityViewModel/SFClientRowViewModel.cs
new file mode 100644
--- /dev/null
+++ b/Core/EntityViewModel/SFClientRowViewModel.cs
@@ -0,0 +1,736 @@
+ï»¿using System;
+using System.Collections.Generic;
+using System.ComponentModel.DataAnnotations;
+using System.Globalization;
+using System.Linq;
+using Core.Helper;
+using Core.ViewModel.Base;
+using Core.ViewModel.Common;
+using Data;
+using DevExpress.Mvvm.DataAnnotations;
+using JetBrains.Annotations;
+
+// ReSharper disable InconsistentNaming
+
+namespace Core.EntityViewModel
+{
+    [MetadataType(typeof(DataAnnotationsSFClientRowViewModel))]
+
+    public class SFClientRowViewModel : RSViewModelBase, IEntity<TD_84>
+    {
+        //public Country Country
+        //{
+        //    get
+        //    {
+        //        if (Entity.SFT_COUNTRY_CODE == null) return null;
+        //        return MainReferences.Countries.Values.FirstOrDefault(_ => _.Sign3 == Entity.SFT_COUNTRY_CODE);
+        //    }
+        //    set
+        //    {
+        //        if (value == null)
+        //        {
+        //            Entity.SFT_COUNTRY_CODE = null;
+        //        }
+        //        else
+        //        {
+        //            Entity.SFT_COUNTRY_CODE = value.Sign3;
+        //        }
+        //        RaisePropertyChanged();
+        //    }
+        //}
+        private TD_84 myEntity;
+
+        public SFClientRowViewModel()
+        {
+            Entity = DefaultValue();
+        }
+        public SFClientRowViewModel(TD_84 entity)
+        {
+            Entity = entity ?? DefaultValue();
+        }
+
+        public string NomNomenkl => NomenklViewModel?.NOM_NOMENKL;
+
+        public Guid DocId
+        {
+            get => Entity.DocId;
+            set
+            {
+                if (Entity.DocId == value) return;
+                Entity.DocId = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal DOC_CODE
+        {
+            get => Entity.DOC_CODE;
+            set
+            {
+                if (Entity.DOC_CODE == value) return;
+                Entity.DOC_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public int CODE
+        {
+            get => Entity.CODE;
+            set
+            {
+                if (Entity.CODE == value) return;
+                Entity.CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SFT_TEXT
+        {
+            get => Entity.SFT_TEXT;
+            set
+            {
+                if (Entity.SFT_TEXT == value) return;
+                Entity.SFT_TEXT = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal SFT_NEMENKL_DC
+        {
+            get => Entity.SFT_NEMENKL_DC;
+            set
+            {
+                if (Entity.SFT_NEMENKL_DC == value) return;
+                Entity.SFT_NEMENKL_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double SFT_KOL
+        {
+            get => Entity.SFT_KOL;
+            set
+            {
+                if (Entity.SFT_KOL == value) return;
+                Entity.SFT_KOL = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_ED_CENA
+        {
+            get => Entity.SFT_ED_CENA;
+            set
+            {
+                if (Entity.SFT_ED_CENA == value) return;
+                Entity.SFT_ED_CENA = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_ACCIZ
+        {
+            get => Entity.SFT_ACCIZ;
+            set
+            {
+                if (Entity.SFT_ACCIZ == value) return;
+                Entity.SFT_ACCIZ = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double SFT_NDS_PERCENT
+        {
+            get => Entity.SFT_NDS_PERCENT;
+            set
+            {
+                if (Entity.SFT_NDS_PERCENT == value) return;
+                Entity.SFT_NDS_PERCENT = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_SUMMA_NDS
+        {
+            get => Entity.SFT_SUMMA_NDS;
+            set
+            {
+                if (Entity.SFT_SUMMA_NDS == value) return;
+                Entity.SFT_SUMMA_NDS = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_SUMMA_K_OPLATE
+        {
+            get => Entity.SFT_SUMMA_K_OPLATE;
+            set
+            {
+                if (Entity.SFT_SUMMA_K_OPLATE == value) return;
+                Entity.SFT_SUMMA_K_OPLATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_STDP_DC
+        {
+            get => Entity.SFT_STDP_DC;
+            set
+            {
+                if (Entity.SFT_STDP_DC == value) return;
+                Entity.SFT_STDP_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_UCHET_ED_IZM_DC
+        {
+            get => Entity.SFT_UCHET_ED_IZM_DC;
+            set
+            {
+                if (Entity.SFT_UCHET_ED_IZM_DC == value) return;
+                Entity.SFT_UCHET_ED_IZM_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SFT_KOMPLEKT
+        {
+            get => Entity.SFT_KOMPLEKT;
+            set
+            {
+                if (Entity.SFT_KOMPLEKT == value) return;
+                Entity.SFT_KOMPLEKT = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_NALOG_NA_PROD
+        {
+            get => Entity.SFT_NALOG_NA_PROD;
+            set
+            {
+                if (Entity.SFT_NALOG_NA_PROD == value) return;
+                Entity.SFT_NALOG_NA_PROD = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_DOG_OTGR_DC
+        {
+            get => Entity.SFT_DOG_OTGR_DC;
+            set
+            {
+                if (Entity.SFT_DOG_OTGR_DC == value) return;
+                Entity.SFT_DOG_OTGR_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public int? SFT_DOG_OTGR_PLAN_CODE
+        {
+            get => Entity.SFT_DOG_OTGR_PLAN_CODE;
+            set
+            {
+                if (Entity.SFT_DOG_OTGR_PLAN_CODE == value) return;
+                Entity.SFT_DOG_OTGR_PLAN_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_NACENKA_DILERA
+        {
+            get => Entity.SFT_NACENKA_DILERA;
+            set
+            {
+                if (Entity.SFT_NACENKA_DILERA == value) return;
+                Entity.SFT_NACENKA_DILERA = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double? SFT_PROCENT_ZS_RASHODOV
+        {
+            get => Entity.SFT_PROCENT_ZS_RASHODOV;
+            set
+            {
+                if (Entity.SFT_PROCENT_ZS_RASHODOV == value) return;
+                Entity.SFT_PROCENT_ZS_RASHODOV = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_SUMMA_K_OPLATE_KONTR_CRS
+        {
+            get => Entity.SFT_SUMMA_K_OPLATE_KONTR_CRS;
+            set
+            {
+                if (Entity.SFT_SUMMA_K_OPLATE_KONTR_CRS == value) return;
+                Entity.SFT_SUMMA_K_OPLATE_KONTR_CRS = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_SHPZ_DC
+        {
+            get => Entity.SFT_SHPZ_DC;
+            set
+            {
+                if (Entity.SFT_SHPZ_DC == value) return;
+                Entity.SFT_SHPZ_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SFT_STRANA_PROIS
+        {
+            get => Entity.SFT_STRANA_PROIS;
+            set
+            {
+                if (Entity.SFT_STRANA_PROIS == value) return;
+                Entity.SFT_STRANA_PROIS = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SFT_N_GRUZ_DECLAR
+        {
+            get => Entity.SFT_N_GRUZ_DECLAR;
+            set
+            {
+                if (Entity.SFT_N_GRUZ_DECLAR == value) return;
+                Entity.SFT_N_GRUZ_DECLAR = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double? SFT_TARA_MEST
+        {
+            get => Entity.SFT_TARA_MEST;
+            set
+            {
+                if (Entity.SFT_TARA_MEST == value) return;
+                Entity.SFT_TARA_MEST = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_TARA_DC
+        {
+            get => Entity.SFT_TARA_DC;
+            set
+            {
+                if (Entity.SFT_TARA_DC == value) return;
+                Entity.SFT_TARA_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SFT_TARA_FLAG
+        {
+            get => Entity.SFT_TARA_FLAG;
+            set
+            {
+                if (Entity.SFT_TARA_FLAG == value) return;
+                Entity.SFT_TARA_FLAG = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public byte[] TSTAMP
+        {
+            get => Entity.TSTAMP;
+            set
+            {
+                if (Entity.TSTAMP == value) return;
+                Entity.TSTAMP = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SFT_COUNTRY_CODE
+        {
+            get => Entity.SFT_COUNTRY_CODE;
+            set
+            {
+                if (Entity.SFT_COUNTRY_CODE == value) return;
+                Entity.SFT_COUNTRY_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string OLD_NOM_NOMENKL
+        {
+            get => Entity.OLD_NOM_NOMENKL;
+            set
+            {
+                if (Entity.OLD_NOM_NOMENKL == value) return;
+                Entity.OLD_NOM_NOMENKL = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string OLD_NOM_NAME
+        {
+            get => Entity.OLD_NOM_NAME;
+            set
+            {
+                if (Entity.OLD_NOM_NAME == value) return;
+                Entity.OLD_NOM_NAME = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string OLD_OVERHEAD_NAME
+        {
+            get => Entity.OLD_OVERHEAD_NAME;
+            set
+            {
+                if (Entity.OLD_OVERHEAD_NAME == value) return;
+                Entity.OLD_OVERHEAD_NAME = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string OLD_OVERHEAD_CRS_NAME
+        {
+            get => Entity.OLD_OVERHEAD_CRS_NAME;
+            set
+            {
+                if (Entity.OLD_OVERHEAD_CRS_NAME == value) return;
+                Entity.OLD_OVERHEAD_CRS_NAME = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string OLD_UNIT_NAME
+        {
+            get => Entity.OLD_UNIT_NAME;
+            set
+            {
+                if (Entity.OLD_UNIT_NAME == value) return;
+                Entity.OLD_UNIT_NAME = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_165 SD_165
+        {
+            get => Entity.SD_165;
+            set
+            {
+                if (Entity.SD_165 == value) return;
+                Entity.SD_165 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_175 SD_175
+        {
+            get => Entity.SD_175;
+            set
+            {
+                if (Entity.SD_175 == value) return;
+                Entity.SD_175 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_303 SD_303
+        {
+            get => Entity.SD_303;
+            set
+            {
+                if (Entity.SD_303 == value) return;
+                Entity.SD_303 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_83 SD_83
+        {
+            get => Entity.SD_83;
+            set
+            {
+                if (Entity.SD_83 == value) return;
+                Entity.SD_83 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_83 SD_831
+        {
+            get => Entity.SD_831;
+            set
+            {
+                if (Entity.SD_831 == value) return;
+                Entity.SD_831 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_84 SD_84
+        {
+            get => Entity.SD_84;
+            set
+            {
+                if (Entity.SD_84 == value) return;
+                Entity.SD_84 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public VD_9 VD_9
+        {
+            get => Entity.VD_9;
+            set
+            {
+                if (Entity.VD_9 == value) return;
+                Entity.VD_9 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public COUNTRY COUNTRY
+        {
+            get => Entity.COUNTRY;
+            set
+            {
+                if (Entity.COUNTRY == value) return;
+                Entity.COUNTRY = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public TD_84 Entity
+        {
+            get => myEntity;
+            set
+            {
+                if (myEntity == value) return;
+                myEntity = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public NomenklViewModel NomenklViewModel
+        {
+            get
+            {
+                return MainReferences.GetNomenkl(Entity.SFT_NEMENKL_DC);
+            }
+            set
+            {
+                if (Entity.SFT_NEMENKL_DC == value.DOC_CODE) return;
+                Entity.SFT_NEMENKL_DC = value.DOC_CODE;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string NomenklNumber => NomenklViewModel?.NomenklNumber;
+        public bool IsUsluga => NomenklViewModel?.NOM_0MATER_1USLUGA == 1;
+        private decimal myShipped;
+        private decimal myRest;
+        /// <summary>
+        ///     ÐÑÐ³ÑÑÐ¶ÐµÐ½Ð¾
+        /// </summary>
+        public decimal Shipped
+        {
+            get => myShipped;
+            set
+            {
+                if (myShipped == value) return;
+                myShipped = value;
+                myRest = (decimal)(SFT_KOL - (double)myShipped);
+                RaisePropertyChanged();
+                RaisePropertyChanged(nameof(Rest));
+            }
+        }
+        /// <summary>
+        ///     Ð¾ÑÑÐ°ÑÐ¾Ðº Ð´Ð»Ñ Ð¾ÑÐ³ÑÑÐ·ÐºÐ¸ Ð¿Ð¾ ÑÑÐµÑÑ
+        /// </summary>
+        public decimal Rest
+        {
+            get => myRest;
+            set
+            {
+                if (myRest == value) return;
+                myRest = value;
+                RaisePropertyChanged();            }
+        }
+        /// <summary>
+        ///     ÑÐµÐºÑÑÐ¸Ðµ Ð¾ÑÑÐ°ÑÐºÐ¸ Ð½Ð° ÑÐºÐ»Ð°Ð´Ð°Ñ
+        /// </summary>
+        private decimal myCurrentRemains;
+        public decimal CurrentRemains
+        {
+            get => myCurrentRemains;
+            set
+            {
+                if (myCurrentRemains == value) return;
+                myCurrentRemains = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public virtual void Save(TD_84 doc)
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Save()
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Delete()
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Delete(Guid id)
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Delete(decimal dc)
+        {
+            throw new NotImplementedException();
+        }
+
+        public void UpdateFrom(TD_84 ent)
+        {
+            CODE = ent.CODE;
+            SFT_TEXT = ent.SFT_TEXT;
+            SFT_NEMENKL_DC = ent.SFT_NEMENKL_DC;
+            SFT_KOL = ent.SFT_KOL;
+            SFT_ED_CENA = ent.SFT_ED_CENA;
+            SFT_ACCIZ = ent.SFT_ACCIZ;
+            SFT_NDS_PERCENT = ent.SFT_NDS_PERCENT;
+            SFT_SUMMA_NDS = ent.SFT_SUMMA_NDS;
+            SFT_SUMMA_K_OPLATE = ent.SFT_SUMMA_K_OPLATE;
+            SFT_STDP_DC = ent.SFT_STDP_DC;
+            SFT_UCHET_ED_IZM_DC = ent.SFT_UCHET_ED_IZM_DC;
+            SFT_KOMPLEKT = ent.SFT_KOMPLEKT;
+            SFT_NALOG_NA_PROD = ent.SFT_NALOG_NA_PROD;
+            SFT_DOG_OTGR_DC = ent.SFT_DOG_OTGR_DC;
+            SFT_DOG_OTGR_PLAN_CODE = ent.SFT_DOG_OTGR_PLAN_CODE;
+            SFT_NACENKA_DILERA = ent.SFT_NACENKA_DILERA;
+            SFT_PROCENT_ZS_RASHODOV = ent.SFT_PROCENT_ZS_RASHODOV;
+            SFT_SUMMA_K_OPLATE_KONTR_CRS = ent.SFT_SUMMA_K_OPLATE_KONTR_CRS;
+            SFT_SHPZ_DC = ent.SFT_SHPZ_DC;
+            SFT_STRANA_PROIS = ent.SFT_STRANA_PROIS;
+            SFT_N_GRUZ_DECLAR = ent.SFT_N_GRUZ_DECLAR;
+            SFT_TARA_MEST = ent.SFT_TARA_MEST;
+            SFT_TARA_DC = ent.SFT_TARA_DC;
+            SFT_TARA_FLAG = ent.SFT_TARA_FLAG;
+            TSTAMP = ent.TSTAMP;
+            SFT_COUNTRY_CODE = ent.SFT_COUNTRY_CODE;
+            OLD_NOM_NOMENKL = ent.OLD_NOM_NOMENKL;
+            OLD_NOM_NAME = ent.OLD_NOM_NAME;
+            OLD_OVERHEAD_NAME = ent.OLD_OVERHEAD_NAME;
+            OLD_OVERHEAD_CRS_NAME = ent.OLD_OVERHEAD_CRS_NAME;
+            OLD_UNIT_NAME = ent.OLD_UNIT_NAME;
+            SD_165 = ent.SD_165;
+            SD_175 = ent.SD_175;
+            SD_303 = ent.SD_303;
+            SD_83 = ent.SD_83;
+            SD_831 = ent.SD_831;
+            SD_84 = ent.SD_84;
+            VD_9 = ent.VD_9;
+            COUNTRY = ent.COUNTRY;
+            Id = ent.Id;
+            DocId = ent.DocId;
+        }
+
+        public void UpdateTo(TD_84 ent)
+        {
+            ent.CODE = CODE;
+            ent.SFT_TEXT = SFT_TEXT;
+            ent.SFT_NEMENKL_DC = SFT_NEMENKL_DC;
+            ent.SFT_KOL = SFT_KOL;
+            ent.SFT_ED_CENA = SFT_ED_CENA;
+            ent.SFT_ACCIZ = SFT_ACCIZ;
+            ent.SFT_NDS_PERCENT = SFT_NDS_PERCENT;
+            ent.SFT_SUMMA_NDS = SFT_SUMMA_NDS;
+            ent.SFT_SUMMA_K_OPLATE = SFT_SUMMA_K_OPLATE;
+            ent.SFT_STDP_DC = SFT_STDP_DC;
+            ent.SFT_UCHET_ED_IZM_DC = SFT_UCHET_ED_IZM_DC;
+            ent.SFT_KOMPLEKT = SFT_KOMPLEKT;
+            ent.SFT_NALOG_NA_PROD = SFT_NALOG_NA_PROD;
+            ent.SFT_DOG_OTGR_DC = SFT_DOG_OTGR_DC;
+            ent.SFT_DOG_OTGR_PLAN_CODE = SFT_DOG_OTGR_PLAN_CODE;
+            ent.SFT_NACENKA_DILERA = SFT_NACENKA_DILERA;
+            ent.SFT_PROCENT_ZS_RASHODOV = SFT_PROCENT_ZS_RASHODOV;
+            ent.SFT_SUMMA_K_OPLATE_KONTR_CRS = SFT_SUMMA_K_OPLATE_KONTR_CRS;
+            ent.SFT_SHPZ_DC = SFT_SHPZ_DC;
+            ent.SFT_STRANA_PROIS = SFT_STRANA_PROIS;
+            ent.SFT_N_GRUZ_DECLAR = SFT_N_GRUZ_DECLAR;
+            ent.SFT_TARA_MEST = SFT_TARA_MEST;
+            ent.SFT_TARA_DC = SFT_TARA_DC;
+            ent.SFT_TARA_FLAG = SFT_TARA_FLAG;
+            ent.TSTAMP = TSTAMP;
+            ent.SFT_COUNTRY_CODE = SFT_COUNTRY_CODE;
+            ent.OLD_NOM_NOMENKL = OLD_NOM_NOMENKL;
+            ent.OLD_NOM_NAME = OLD_NOM_NAME;
+            ent.OLD_OVERHEAD_NAME = OLD_OVERHEAD_NAME;
+            ent.OLD_OVERHEAD_CRS_NAME = OLD_OVERHEAD_CRS_NAME;
+            ent.OLD_UNIT_NAME = OLD_UNIT_NAME;
+            ent.SD_165 = SD_165;
+            ent.SD_175 = SD_175;
+            ent.SD_303 = SD_303;
+            ent.SD_83 = SD_83;
+            ent.SD_831 = SD_831;
+            ent.SD_84 = SD_84;
+            ent.VD_9 = VD_9;
+            ent.COUNTRY = COUNTRY;
+            ent.Id = Id;
+            ent.DocId = DocId;
+        }
+
+        public TD_84 DefaultValue()
+        {
+            return new TD_84
+            {
+                Id = Guid.NewGuid(),
+                DOC_CODE = -1,
+                CODE = -1
+            };
+        }
+
+        public List<TD_84> LoadList()
+        {
+            throw new NotImplementedException();
+        }
+
+        public EntityLoadCodition LoadCondition { get; set; }
+        public virtual TD_84 Load(decimal dc)
+        {
+            throw new NotImplementedException();
+        }
+
+        public virtual TD_84 Load(Guid id)
+        {
+            throw new NotImplementedException();
+        }
+    }
+    public class DataAnnotationsSFClientRowViewModel : DataAnnotationForFluentApiBase, IMetadataProvider<SFClientRowViewModel>
+    {
+        void IMetadataProvider<SFClientRowViewModel>.BuildMetadata(MetadataBuilder<SFClientRowViewModel> builder)
+        {
+            SetNotAutoGenerated(builder);
+            builder.Property(_ => _.NomenklViewModel).AutoGenerated().DisplayName("ÐÐ°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ");
+            builder.Property(_ => _.NomNomenkl).AutoGenerated().DisplayName("ÐÐ¾Ð¼.â");
+            builder.Property(_ => _.IsUsluga).AutoGenerated().DisplayName("Ð£ÑÐ»ÑÐ³Ð°");
+            builder.Property(_ => _.SFT_KOL).AutoGenerated().DisplayName("ÐÐ¾Ð»-Ð²Ð¾");
+            builder.Property(_ => _.SFT_ED_CENA).AutoGenerated().DisplayName("Ð¦ÐµÐ½Ð°");
+            builder.Property(_ => _.SFT_SUMMA_K_OPLATE).AutoGenerated().DisplayName("Ð¡ÑÐ¼Ð¼Ð°");
+            builder.Property(_ => _.Shipped).AutoGenerated().DisplayName("ÐÑÐ³ÑÑÐ¶ÐµÐ½Ð¾");
+            builder.Property(_ => _.Rest).AutoGenerated().DisplayName("ÐÑÑÐ°ÑÐ¾Ðº");
+            builder.Property(_ => _.CurrentRemains).AutoGenerated().DisplayName("Ð¢ÐµÐºÑÑÐ¸Ðµ Ð¾ÑÑÐ°ÑÐºÐ¸");
+            builder.Property(_ => _.Note).AutoGenerated().DisplayName("ÐÑÐ¸Ð¼ÐµÑÐ°Ð½Ð¸Ðµ");
+            builder.Property(_ => _.SFT_NDS_PERCENT).AutoGenerated().DisplayName("ÐÐÐ¡");
+            //builder.Property(_ => _.Country).AutoGenerated().DisplayName("Ð¡ÑÑÐ°Ð½Ð°");
+        }
+    }
+}
\ No newline at end of file
diff --git a/Core/EntityViewModel/SFClientViewModel.cs b/Core/EntityViewModel/SFClientViewModel.cs
new file mode 100644
--- /dev/null
+++ b/Core/EntityViewModel/SFClientViewModel.cs
@@ -0,0 +1,1316 @@
+ï»¿using System;
+using System.Collections.Generic;
+using System.Collections.ObjectModel;
+using System.ComponentModel.DataAnnotations;
+using Core.Helper;
+using Core.ViewModel.Base;
+using Core.ViewModel.Common;
+using Data;
+using DevExpress.Mvvm.DataAnnotations;
+
+namespace Core.EntityViewModel
+{
+    [MetadataType(typeof(DataAnnotationsSFClientViewModel))]
+
+    public class SFClientViewModel : RSViewModelBase, IEntity<SD_84>
+    {
+        public decimal Summa => SF_CRS_SUMMA_K_OPLATE ?? 0;
+        public string COName => CO?.Name;
+        public bool IsAccepted
+        {
+            get => SF_ACCEPTED == 1;
+            set
+            {
+                if (SF_ACCEPTED == 1 == value) return;
+                SF_ACCEPTED = (short)(value ? 1 : 0);
+                RaisePropertyChanged();
+            }
+        }
+        public Kontragent Diler
+        {
+            get
+            {
+                if (Entity.SF_DILER_DC == null) return null;
+                return MainReferences.AllKontragents.ContainsKey(Entity.SF_DILER_DC.Value)
+                    ? MainReferences.AllKontragents[Entity.SF_DILER_DC.Value]
+                    : null;
+            }
+            set
+            {
+                if (value == null)
+                {
+                    Entity.SF_DILER_DC = null;
+                }
+                else
+                {
+                    if (Entity.SF_DILER_DC == value.DOC_CODE) return;
+                    Entity.SF_DILER_DC = value.DOC_CODE;
+                }
+                RaisePropertyChanged();
+            }
+        }
+        public List<SFClientRowViewModel> DeletedRows { set; get; }
+        public ObservableCollection<SFClientRowViewModel> Rows { set; get; }
+        private SD_84 myEntity;
+        private decimal mySummaOtgruz;
+        public SFClientViewModel()
+        {
+            Entity = DefaultValue();
+            DeletedRows = new List<SFClientRowViewModel>();
+            Rows = new ObservableCollection<SFClientRowViewModel>();
+        }
+
+        public SFClientViewModel(SD_84 entity)
+        {
+            Entity = entity ?? DefaultValue();
+            Rows = new ObservableCollection<SFClientRowViewModel>();
+            if (entity.TD_84 == null || entity.TD_84.Count <= 0) return;
+            foreach (var row in entity.TD_84)
+            {
+                var newRow = new SFClientRowViewModel(row);
+                Rows.Add(newRow);
+            }
+        }
+        public Kontragent Receiver
+        {
+            //SF_RECEIVER_KONTR_DC
+
+            get
+            {
+                if (Entity.SF_RECEIVER_KONTR_DC == null) return null;
+                return MainReferences.AllKontragents.ContainsKey(Entity.SF_RECEIVER_KONTR_DC.Value)
+                    ? MainReferences.AllKontragents[Entity.SF_RECEIVER_KONTR_DC.Value]
+                    : null;
+            }
+            set
+            {
+                if (value == null)
+                {
+                    Entity.SF_RECEIVER_KONTR_DC = null;
+                }
+                else
+                {
+                    if (Entity.SF_RECEIVER_KONTR_DC == value.DOC_CODE) return;
+                    Entity.SF_RECEIVER_KONTR_DC = value.DOC_CODE;
+                }
+                RaisePropertyChanged();
+            }
+        }
+
+        public Kontragent Client
+        {
+            get => Entity.SF_CLIENT_DC == null ? null : MainReferences.GetKontragent(Entity.SF_CLIENT_DC.Value);
+            set
+            {
+                if (value == null)
+                {
+                    Entity.SF_CLIENT_DC = null;
+                }
+                else
+                {
+                    if (Entity.SF_CLIENT_DC == value.DOC_CODE) return;
+                    Entity.SF_CLIENT_DC = value.DOC_CODE;
+                    Entity.SF_CLIENT_NAME = value.Name;
+                }
+                RaisePropertyChanged();
+            }
+        }
+        public CentrOfResponsibility CO
+        {
+            get
+            {
+                if (Entity.SF_CENTR_OTV_DC == null) return null;
+                if (MainReferences.COList.ContainsKey(Entity.SF_CENTR_OTV_DC.Value))
+                    return MainReferences.COList[Entity.SF_CENTR_OTV_DC.Value];
+                return null;
+            }
+            set
+            {
+                if (value == null)
+                {
+                    Entity.SF_CENTR_OTV_DC = null;
+                }
+                else
+                {
+                    if (Entity.SF_CENTR_OTV_DC == value.DOC_CODE) return;
+                    Entity.SF_CENTR_OTV_DC = value.DOC_CODE;
+                }
+                RaisePropertyChanged();
+            }
+        }
+        public VzaimoraschetType VzaimoraschetType
+        {
+            get
+            {
+                if (Entity.SF_VZAIMOR_TYPE_DC == null) return null;
+                if (MainReferences.VzaimoraschetTypes.ContainsKey(Entity.SF_VZAIMOR_TYPE_DC.Value))
+                    return MainReferences.VzaimoraschetTypes[Entity.SF_VZAIMOR_TYPE_DC.Value];
+                return null;
+            }
+            set
+            {
+                if (value == null)
+                {
+                    Entity.SF_VZAIMOR_TYPE_DC = null;
+                }
+                else
+                {
+                    if (Entity.SF_VZAIMOR_TYPE_DC == value.DOC_CODE) return;
+                    Entity.SF_VZAIMOR_TYPE_DC = value.DOC_CODE;
+                }
+                RaisePropertyChanged();
+            }
+        }
+        public SD_189ViewModel FormRaschet
+        {
+            get
+            {
+                if (Entity.SF_FORM_RASCH_DC == null) return null;
+                if (MainReferences.FormRaschets.ContainsKey(Entity.SF_FORM_RASCH_DC.Value))
+                    return MainReferences.FormRaschets[Entity.SF_FORM_RASCH_DC.Value];
+                return null;
+            }
+            set
+            {
+                if (value == null)
+                {
+                    Entity.SF_FORM_RASCH_DC = null;
+                }
+                else
+                {
+                    if (Entity.SF_FORM_RASCH_DC == value.DOC_CODE) return;
+                    Entity.SF_FORM_RASCH_DC = value.DOC_CODE;
+                }
+                RaisePropertyChanged();
+            }
+        }
+        public PayCondition PayCondition
+        {
+            get
+            {
+                if (MainReferences.PayConditions.ContainsKey(Entity.SF_PAY_COND_DC))
+                    return MainReferences.PayConditions[Entity.SF_PAY_COND_DC];
+                return null;
+            }
+            set
+            {
+                if (Entity.SF_PAY_COND_DC == value?.DOC_CODE) return;
+                if (value != null) Entity.SF_PAY_COND_DC = value.DOC_CODE;
+                RaisePropertyChanged();
+            }
+        }
+        public decimal SummaOtgruz
+        {
+            get => mySummaOtgruz;
+            set
+            {
+                if (mySummaOtgruz == value) return;
+                mySummaOtgruz = value;
+                RaisePropertyChanged();
+            }
+        }
+        public Currency Currency
+        {
+            get => !MainReferences.Currencies.ContainsKey(Entity.SF_CRS_DC)
+                ? null
+                : MainReferences.Currencies[Entity.SF_CRS_DC];
+            set
+            {
+                if (Entity.SF_CRS_DC == value.DOC_CODE) return;
+                Entity.SF_CRS_DC = value.DOC_CODE;
+                RaisePropertyChanged();
+            }
+        }
+        public override decimal DocCode
+        {
+            get => Entity.DOC_CODE;
+            set
+            {
+                if (Entity.DOC_CODE == value) return;
+                Entity.DOC_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+        public override string Name
+            => $"Ð¡/Ñ â{Entity.SF_IN_NUM}/{Entity.SF_OUT_NUM} Ð¾Ñ {Entity.SF_DATE.ToShortDateString()}";
+
+        public int SF_IN_NUM
+        {
+            get => Entity.SF_IN_NUM;
+            set
+            {
+                if (Entity.SF_IN_NUM == value) return;
+                Entity.SF_IN_NUM = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SF_OUT_NUM
+        {
+            get => Entity.SF_OUT_NUM;
+            set
+            {
+                if (Entity.SF_OUT_NUM == value) return;
+                Entity.SF_OUT_NUM = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public DateTime SF_DATE
+        {
+            get => Entity.SF_DATE;
+            set
+            {
+                if (Entity.SF_DATE == value) return;
+                Entity.SF_DATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_CLIENT_DC
+        {
+            get => Entity.SF_CLIENT_DC;
+            set
+            {
+                if (Entity.SF_CLIENT_DC == value) return;
+                Entity.SF_CLIENT_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SF_CLIENT_NAME
+        {
+            get => Entity.SF_CLIENT_NAME;
+            set
+            {
+                if (Entity.SF_CLIENT_NAME == value) return;
+                Entity.SF_CLIENT_NAME = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public int? SF_CLIENT_RS_CODE
+        {
+            get => Entity.SF_CLIENT_RS_CODE;
+            set
+            {
+                if (Entity.SF_CLIENT_RS_CODE == value) return;
+                Entity.SF_CLIENT_RS_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal SF_CRS_DC
+        {
+            get => Entity.SF_CRS_DC;
+            set
+            {
+                if (Entity.SF_CRS_DC == value) return;
+                Entity.SF_CRS_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_CRS_SUMMA_K_OPLATE
+        {
+            get => Entity.SF_CRS_SUMMA_K_OPLATE;
+            set
+            {
+                if (Entity.SF_CRS_SUMMA_K_OPLATE == value) return;
+                Entity.SF_CRS_SUMMA_K_OPLATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double SF_CRS_RATE
+        {
+            get => Entity.SF_CRS_RATE;
+            set
+            {
+                if (Math.Abs(Entity.SF_CRS_RATE - value) < 0) return;
+                Entity.SF_CRS_RATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_RUB_SUMMA_K_OPLATE
+        {
+            get => Entity.SF_RUB_SUMMA_K_OPLATE;
+            set
+            {
+                if (Entity.SF_RUB_SUMMA_K_OPLATE == value) return;
+                Entity.SF_RUB_SUMMA_K_OPLATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal SF_PAY_COND_DC
+        {
+            get => Entity.SF_PAY_COND_DC;
+            set
+            {
+                if (Entity.SF_PAY_COND_DC == value) return;
+                Entity.SF_PAY_COND_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string CREATOR
+        {
+            get => Entity.CREATOR;
+            set
+            {
+                if (Entity.CREATOR == value) return;
+                Entity.CREATOR = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short SF_ACCEPTED
+        {
+            get => Entity.SF_ACCEPTED;
+            set
+            {
+                if (Entity.SF_ACCEPTED == value) return;
+                Entity.SF_ACCEPTED = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SF_GROZOOTPRAVITEL
+        {
+            get => Entity.SF_GROZOOTPRAVITEL;
+            set
+            {
+                if (Entity.SF_GROZOOTPRAVITEL == value) return;
+                Entity.SF_GROZOOTPRAVITEL = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SF_GRUZOPOLUCHATEL
+        {
+            get => Entity.SF_GRUZOPOLUCHATEL;
+            set
+            {
+                if (Entity.SF_GRUZOPOLUCHATEL == value) return;
+                Entity.SF_GRUZOPOLUCHATEL = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SF_PAYDOC_TEXT
+        {
+            get => Entity.SF_PAYDOC_TEXT;
+            set
+            {
+                if (Entity.SF_PAYDOC_TEXT == value) return;
+                Entity.SF_PAYDOC_TEXT = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_BASE_DC
+        {
+            get => Entity.SF_BASE_DC;
+            set
+            {
+                if (Entity.SF_BASE_DC == value) return;
+                Entity.SF_BASE_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SF_DOPOLN
+        {
+            get => Entity.SF_DOPOLN;
+            set
+            {
+                if (Entity.SF_DOPOLN == value) return;
+                Entity.SF_DOPOLN = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SF_SCHET_FLAG
+        {
+            get => Entity.SF_SCHET_FLAG;
+            set
+            {
+                if (Entity.SF_SCHET_FLAG == value) return;
+                Entity.SF_SCHET_FLAG = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SF_SCHET_FACT_FLAG
+        {
+            get => Entity.SF_SCHET_FACT_FLAG;
+            set
+            {
+                if (Entity.SF_SCHET_FACT_FLAG == value) return;
+                Entity.SF_SCHET_FACT_FLAG = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_VZAIMOR_TYPE_DC
+        {
+            get => Entity.SF_VZAIMOR_TYPE_DC;
+            set
+            {
+                if (Entity.SF_VZAIMOR_TYPE_DC == value) return;
+                Entity.SF_VZAIMOR_TYPE_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_FACT_SUMMA
+        {
+            get => Entity.SF_FACT_SUMMA;
+            set
+            {
+                if (Entity.SF_FACT_SUMMA == value) return;
+                Entity.SF_FACT_SUMMA = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SF_PAY_FLAG
+        {
+            get => Entity.SF_PAY_FLAG;
+            set
+            {
+                if (Entity.SF_PAY_FLAG == value) return;
+                Entity.SF_PAY_FLAG = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_CENTR_OTV_DC
+        {
+            get => Entity.SF_CENTR_OTV_DC;
+            set
+            {
+                if (Entity.SF_CENTR_OTV_DC == value) return;
+                Entity.SF_CENTR_OTV_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_RECEIVER_KONTR_DC
+        {
+            get => Entity.SF_RECEIVER_KONTR_DC;
+            set
+            {
+                if (Entity.SF_RECEIVER_KONTR_DC == value) return;
+                Entity.SF_RECEIVER_KONTR_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public int? SF_RECEIVER_RS_CODE
+        {
+            get => Entity.SF_RECEIVER_RS_CODE;
+            set
+            {
+                if (Entity.SF_RECEIVER_RS_CODE == value) return;
+                Entity.SF_RECEIVER_RS_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SF_TRANZIT
+        {
+            get => Entity.SF_TRANZIT;
+            set
+            {
+                if (Entity.SF_TRANZIT == value) return;
+                Entity.SF_TRANZIT = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_TRANZIT_SPOST_DC
+        {
+            get => Entity.SF_TRANZIT_SPOST_DC;
+            set
+            {
+                if (Entity.SF_TRANZIT_SPOST_DC == value) return;
+                Entity.SF_TRANZIT_SPOST_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double? SF_TRANZIT_NACEN_PERC
+        {
+            get => Entity.SF_TRANZIT_NACEN_PERC;
+            set
+            {
+                if (Entity.SF_TRANZIT_NACEN_PERC == value) return;
+                Entity.SF_TRANZIT_NACEN_PERC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_KONTR_CRS_DC
+        {
+            get => Entity.SF_KONTR_CRS_DC;
+            set
+            {
+                if (Entity.SF_KONTR_CRS_DC == value) return;
+                Entity.SF_KONTR_CRS_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_KONTR_CRS_SUMMA
+        {
+            get => Entity.SF_KONTR_CRS_SUMMA;
+            set
+            {
+                if (Entity.SF_KONTR_CRS_SUMMA == value) return;
+                Entity.SF_KONTR_CRS_SUMMA = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double? SF_KONTR_CRS_RATE
+        {
+            get => Entity.SF_KONTR_CRS_RATE;
+            set
+            {
+                if (Entity.SF_KONTR_CRS_RATE == value) return;
+                Entity.SF_KONTR_CRS_RATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_UCHET_VALUTA_DC
+        {
+            get => Entity.SF_UCHET_VALUTA_DC;
+            set
+            {
+                if (Entity.SF_UCHET_VALUTA_DC == value) return;
+                Entity.SF_UCHET_VALUTA_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double? SF_UCHET_VALUTA_RATE
+        {
+            get => Entity.SF_UCHET_VALUTA_RATE;
+            set
+            {
+                if (Entity.SF_UCHET_VALUTA_RATE == value) return;
+                Entity.SF_UCHET_VALUTA_RATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_SUMMA_V_UCHET_VALUTE
+        {
+            get => Entity.SF_SUMMA_V_UCHET_VALUTE;
+            set
+            {
+                if (Entity.SF_SUMMA_V_UCHET_VALUTE == value) return;
+                Entity.SF_SUMMA_V_UCHET_VALUTE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SF_NDS_1INCLUD_0NO
+        {
+            get => Entity.SF_NDS_1INCLUD_0NO;
+            set
+            {
+                if (Entity.SF_NDS_1INCLUD_0NO == value) return;
+                Entity.SF_NDS_1INCLUD_0NO = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_FORM_RASCH_DC
+        {
+            get => Entity.SF_FORM_RASCH_DC;
+            set
+            {
+                if (Entity.SF_FORM_RASCH_DC == value) return;
+                Entity.SF_FORM_RASCH_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double? SF_NALOG_NA_PROD_PROC
+        {
+            get => Entity.SF_NALOG_NA_PROD_PROC;
+            set
+            {
+                if (Entity.SF_NALOG_NA_PROD_PROC == value) return;
+                Entity.SF_NALOG_NA_PROD_PROC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_DILER_DC
+        {
+            get => Entity.SF_DILER_DC;
+            set
+            {
+                if (Entity.SF_DILER_DC == value) return;
+                Entity.SF_DILER_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_DILER_SUMMA
+        {
+            get => Entity.SF_DILER_SUMMA;
+            set
+            {
+                if (Entity.SF_DILER_SUMMA == value) return;
+                Entity.SF_DILER_SUMMA = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_DILER_CRS_DC
+        {
+            get => Entity.SF_DILER_CRS_DC;
+            set
+            {
+                if (Entity.SF_DILER_CRS_DC == value) return;
+                Entity.SF_DILER_CRS_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double? SF_DILER_RATE
+        {
+            get => Entity.SF_DILER_RATE;
+            set
+            {
+                if (Entity.SF_DILER_RATE == value) return;
+                Entity.SF_DILER_RATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SF_1INCLUD_NAL_S_PROD_0NO
+        {
+            get => Entity.SF_1INCLUD_NAL_S_PROD_0NO;
+            set
+            {
+                if (Entity.SF_1INCLUD_NAL_S_PROD_0NO == value) return;
+                Entity.SF_1INCLUD_NAL_S_PROD_0NO = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SF_DOP_USL_DC
+        {
+            get => Entity.SF_DOP_USL_DC;
+            set
+            {
+                if (Entity.SF_DOP_USL_DC == value) return;
+                Entity.SF_DOP_USL_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SF_AUTOMAT_CREATE
+        {
+            get => Entity.SF_AUTOMAT_CREATE;
+            set
+            {
+                if (Entity.SF_AUTOMAT_CREATE == value) return;
+                Entity.SF_AUTOMAT_CREATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SF_NOTE
+        {
+            get => Entity.SF_NOTE;
+            set
+            {
+                if (Entity.SF_NOTE == value) return;
+                Entity.SF_NOTE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public int? SF_SOTRUDNIK_TN
+        {
+            get => Entity.SF_SOTRUDNIK_TN;
+            set
+            {
+                if (Entity.SF_SOTRUDNIK_TN == value) return;
+                Entity.SF_SOTRUDNIK_TN = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public byte[] TSTAMP
+        {
+            get => Entity.TSTAMP;
+            set
+            {
+                if (Entity.TSTAMP == value) return;
+                Entity.TSTAMP = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SF_CORRECT_NUM
+        {
+            get => Entity.SF_CORRECT_NUM;
+            set
+            {
+                if (Entity.SF_CORRECT_NUM == value) return;
+                Entity.SF_CORRECT_NUM = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public DateTime? SF_CORRECT_DATE
+        {
+            get => Entity.SF_CORRECT_DATE;
+            set
+            {
+                if (Entity.SF_CORRECT_DATE == value) return;
+                Entity.SF_CORRECT_DATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SF_CRS_CODE
+        {
+            get => Entity.SF_CRS_CODE;
+            set
+            {
+                if (Entity.SF_CRS_CODE == value) return;
+                Entity.SF_CRS_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string CORRECTION_NUM
+        {
+            get => Entity.CORRECTION_NUM;
+            set
+            {
+                if (Entity.CORRECTION_NUM == value) return;
+                Entity.CORRECTION_NUM = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string CORRECTION_DATE
+        {
+            get => Entity.CORRECTION_DATE;
+            set
+            {
+                if (Entity.CORRECTION_DATE == value) return;
+                Entity.CORRECTION_DATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string COUNTRY_NAME
+        {
+            get => Entity.COUNTRY_NAME;
+            set
+            {
+                if (Entity.COUNTRY_NAME == value) return;
+                Entity.COUNTRY_NAME = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string COUNTRY_CODE
+        {
+            get => Entity.COUNTRY_CODE;
+            set
+            {
+                if (Entity.COUNTRY_CODE == value) return;
+                Entity.COUNTRY_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string KPP
+        {
+            get => Entity.KPP;
+            set
+            {
+                if (Entity.KPP == value) return;
+                Entity.KPP = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public Guid? GUID_ID
+        {
+            get => Entity.GUID_ID;
+            set
+            {
+                if (Entity.GUID_ID == value) return;
+                Entity.GUID_ID = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public Guid? GRUZO_INFO_ID
+        {
+            get => Entity.GRUZO_INFO_ID;
+            set
+            {
+                if (Entity.GRUZO_INFO_ID == value) return;
+                Entity.GRUZO_INFO_ID = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public DateTime? REGISTER_DATE
+        {
+            get => Entity.REGISTER_DATE;
+            set
+            {
+                if (Entity.REGISTER_DATE == value) return;
+                Entity.REGISTER_DATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? BUH_CLIENT_DC
+        {
+            get => Entity.BUH_CLIENT_DC;
+            set
+            {
+                if (Entity.BUH_CLIENT_DC == value) return;
+                Entity.BUH_CLIENT_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? BUH_RECEIVER_DC
+        {
+            get => Entity.BUH_RECEIVER_DC;
+            set
+            {
+                if (Entity.BUH_RECEIVER_DC == value) return;
+                Entity.BUH_RECEIVER_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string NAKL_GRUZOOTPRAV
+        {
+            get => Entity.NAKL_GRUZOOTPRAV;
+            set
+            {
+                if (Entity.NAKL_GRUZOOTPRAV == value) return;
+                Entity.NAKL_GRUZOOTPRAV = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string NAKL_GRUZOPOLUCH
+        {
+            get => Entity.NAKL_GRUZOPOLUCH;
+            set
+            {
+                if (Entity.NAKL_GRUZOPOLUCH == value) return;
+                Entity.NAKL_GRUZOPOLUCH = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public GROZO_REQUISITE GROZO_REQUISITE
+        {
+            get => Entity.GROZO_REQUISITE;
+            set
+            {
+                if (Entity.GROZO_REQUISITE == value) return;
+                Entity.GROZO_REQUISITE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_179 SD_179
+        {
+            get => Entity.SD_179;
+            set
+            {
+                if (Entity.SD_179 == value) return;
+                Entity.SD_179 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_189 SD_189
+        {
+            get => Entity.SD_189;
+            set
+            {
+                if (Entity.SD_189 == value) return;
+                Entity.SD_189 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_301 SD_301
+        {
+            get => Entity.SD_301;
+            set
+            {
+                if (Entity.SD_301 == value) return;
+                Entity.SD_301 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_301 SD_3011
+        {
+            get => Entity.SD_3011;
+            set
+            {
+                if (Entity.SD_3011 == value) return;
+                Entity.SD_3011 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_40 SD_40
+        {
+            get => Entity.SD_40;
+            set
+            {
+                if (Entity.SD_40 == value) return;
+                Entity.SD_40 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_43 SD_43
+        {
+            get => Entity.SD_43;
+            set
+            {
+                if (Entity.SD_43 == value) return;
+                Entity.SD_43 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_43 SD_431
+        {
+            get => Entity.SD_431;
+            set
+            {
+                if (Entity.SD_431 == value) return;
+                Entity.SD_431 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_43 SD_432
+        {
+            get => Entity.SD_432;
+            set
+            {
+                if (Entity.SD_432 == value) return;
+                Entity.SD_432 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_43 SD_433
+        {
+            get => Entity.SD_433;
+            set
+            {
+                if (Entity.SD_433 == value) return;
+                Entity.SD_433 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_43 SD_434
+        {
+            get => Entity.SD_434;
+            set
+            {
+                if (Entity.SD_434 == value) return;
+                Entity.SD_434 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_77 SD_77
+        {
+            get => Entity.SD_77;
+            set
+            {
+                if (Entity.SD_77 == value) return;
+                Entity.SD_77 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_84 Entity
+        {
+            get => myEntity;
+            set
+            {
+                if (myEntity == value) return;
+                myEntity = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public virtual void Save(SD_84 doc)
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Save()
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Delete()
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Delete(Guid id)
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Delete(decimal dc)
+        {
+            throw new NotImplementedException();
+        }
+
+        public void UpdateFrom(SD_84 ent)
+        {
+            SF_IN_NUM = ent.SF_IN_NUM;
+            SF_OUT_NUM = ent.SF_OUT_NUM;
+            SF_DATE = ent.SF_DATE;
+            SF_CLIENT_DC = ent.SF_CLIENT_DC;
+            SF_CLIENT_NAME = ent.SF_CLIENT_NAME;
+            SF_CLIENT_RS_CODE = ent.SF_CLIENT_RS_CODE;
+            SF_CRS_DC = ent.SF_CRS_DC;
+            SF_CRS_SUMMA_K_OPLATE = ent.SF_CRS_SUMMA_K_OPLATE;
+            SF_CRS_RATE = ent.SF_CRS_RATE;
+            SF_RUB_SUMMA_K_OPLATE = ent.SF_RUB_SUMMA_K_OPLATE;
+            SF_PAY_COND_DC = ent.SF_PAY_COND_DC;
+            CREATOR = ent.CREATOR;
+            SF_ACCEPTED = ent.SF_ACCEPTED;
+            SF_GROZOOTPRAVITEL = ent.SF_GROZOOTPRAVITEL;
+            SF_GRUZOPOLUCHATEL = ent.SF_GRUZOPOLUCHATEL;
+            SF_PAYDOC_TEXT = ent.SF_PAYDOC_TEXT;
+            SF_BASE_DC = ent.SF_BASE_DC;
+            SF_DOPOLN = ent.SF_DOPOLN;
+            SF_SCHET_FLAG = ent.SF_SCHET_FLAG;
+            SF_SCHET_FACT_FLAG = ent.SF_SCHET_FACT_FLAG;
+            SF_VZAIMOR_TYPE_DC = ent.SF_VZAIMOR_TYPE_DC;
+            SF_FACT_SUMMA = ent.SF_FACT_SUMMA;
+            SF_PAY_FLAG = ent.SF_PAY_FLAG;
+            SF_CENTR_OTV_DC = ent.SF_CENTR_OTV_DC;
+            SF_RECEIVER_KONTR_DC = ent.SF_RECEIVER_KONTR_DC;
+            SF_RECEIVER_RS_CODE = ent.SF_RECEIVER_RS_CODE;
+            SF_TRANZIT = ent.SF_TRANZIT;
+            SF_TRANZIT_SPOST_DC = ent.SF_TRANZIT_SPOST_DC;
+            SF_TRANZIT_NACEN_PERC = ent.SF_TRANZIT_NACEN_PERC;
+            SF_KONTR_CRS_DC = ent.SF_KONTR_CRS_DC;
+            SF_KONTR_CRS_SUMMA = ent.SF_KONTR_CRS_SUMMA;
+            SF_KONTR_CRS_RATE = ent.SF_KONTR_CRS_RATE;
+            SF_UCHET_VALUTA_DC = ent.SF_UCHET_VALUTA_DC;
+            SF_UCHET_VALUTA_RATE = ent.SF_UCHET_VALUTA_RATE;
+            SF_SUMMA_V_UCHET_VALUTE = ent.SF_SUMMA_V_UCHET_VALUTE;
+            SF_NDS_1INCLUD_0NO = ent.SF_NDS_1INCLUD_0NO;
+            SF_FORM_RASCH_DC = ent.SF_FORM_RASCH_DC;
+            SF_NALOG_NA_PROD_PROC = ent.SF_NALOG_NA_PROD_PROC;
+            SF_DILER_DC = ent.SF_DILER_DC;
+            SF_DILER_SUMMA = ent.SF_DILER_SUMMA;
+            SF_DILER_CRS_DC = ent.SF_DILER_CRS_DC;
+            SF_DILER_RATE = ent.SF_DILER_RATE;
+            SF_1INCLUD_NAL_S_PROD_0NO = ent.SF_1INCLUD_NAL_S_PROD_0NO;
+            SF_DOP_USL_DC = ent.SF_DOP_USL_DC;
+            SF_AUTOMAT_CREATE = ent.SF_AUTOMAT_CREATE;
+            SF_NOTE = ent.SF_NOTE;
+            SF_SOTRUDNIK_TN = ent.SF_SOTRUDNIK_TN;
+            TSTAMP = ent.TSTAMP;
+            SF_CORRECT_NUM = ent.SF_CORRECT_NUM;
+            SF_CORRECT_DATE = ent.SF_CORRECT_DATE;
+            SF_CRS_CODE = ent.SF_CRS_CODE;
+            CORRECTION_NUM = ent.CORRECTION_NUM;
+            CORRECTION_DATE = ent.CORRECTION_DATE;
+            COUNTRY_NAME = ent.COUNTRY_NAME;
+            COUNTRY_CODE = ent.COUNTRY_CODE;
+            KPP = ent.KPP;
+            GUID_ID = ent.GUID_ID;
+            GRUZO_INFO_ID = ent.GRUZO_INFO_ID;
+            REGISTER_DATE = ent.REGISTER_DATE;
+            BUH_CLIENT_DC = ent.BUH_CLIENT_DC;
+            BUH_RECEIVER_DC = ent.BUH_RECEIVER_DC;
+            NAKL_GRUZOOTPRAV = ent.NAKL_GRUZOOTPRAV;
+            NAKL_GRUZOPOLUCH = ent.NAKL_GRUZOPOLUCH;
+            GROZO_REQUISITE = ent.GROZO_REQUISITE;
+            SD_179 = ent.SD_179;
+            SD_189 = ent.SD_189;
+            SD_301 = ent.SD_301;
+            SD_3011 = ent.SD_3011;
+            SD_40 = ent.SD_40;
+            SD_43 = ent.SD_43;
+            SD_431 = ent.SD_431;
+            SD_432 = ent.SD_432;
+            SD_433 = ent.SD_433;
+            SD_434 = ent.SD_434;
+            SD_77 = ent.SD_77;
+        }
+
+        public void UpdateTo(SD_84 ent)
+        {
+            ent.SF_IN_NUM = SF_IN_NUM;
+            ent.SF_OUT_NUM = SF_OUT_NUM;
+            ent.SF_DATE = SF_DATE;
+            ent.SF_CLIENT_DC = SF_CLIENT_DC;
+            ent.SF_CLIENT_NAME = SF_CLIENT_NAME;
+            ent.SF_CLIENT_RS_CODE = SF_CLIENT_RS_CODE;
+            ent.SF_CRS_DC = SF_CRS_DC;
+            ent.SF_CRS_SUMMA_K_OPLATE = SF_CRS_SUMMA_K_OPLATE;
+            ent.SF_CRS_RATE = SF_CRS_RATE;
+            ent.SF_RUB_SUMMA_K_OPLATE = SF_RUB_SUMMA_K_OPLATE;
+            ent.SF_PAY_COND_DC = SF_PAY_COND_DC;
+            ent.CREATOR = CREATOR;
+            ent.SF_ACCEPTED = SF_ACCEPTED;
+            ent.SF_GROZOOTPRAVITEL = SF_GROZOOTPRAVITEL;
+            ent.SF_GRUZOPOLUCHATEL = SF_GRUZOPOLUCHATEL;
+            ent.SF_PAYDOC_TEXT = SF_PAYDOC_TEXT;
+            ent.SF_BASE_DC = SF_BASE_DC;
+            ent.SF_DOPOLN = SF_DOPOLN;
+            ent.SF_SCHET_FLAG = SF_SCHET_FLAG;
+            ent.SF_SCHET_FACT_FLAG = SF_SCHET_FACT_FLAG;
+            ent.SF_VZAIMOR_TYPE_DC = SF_VZAIMOR_TYPE_DC;
+            ent.SF_FACT_SUMMA = SF_FACT_SUMMA;
+            ent.SF_PAY_FLAG = SF_PAY_FLAG;
+            ent.SF_CENTR_OTV_DC = SF_CENTR_OTV_DC;
+            ent.SF_RECEIVER_KONTR_DC = SF_RECEIVER_KONTR_DC;
+            ent.SF_RECEIVER_RS_CODE = SF_RECEIVER_RS_CODE;
+            ent.SF_TRANZIT = SF_TRANZIT;
+            ent.SF_TRANZIT_SPOST_DC = SF_TRANZIT_SPOST_DC;
+            ent.SF_TRANZIT_NACEN_PERC = SF_TRANZIT_NACEN_PERC;
+            ent.SF_KONTR_CRS_DC = SF_KONTR_CRS_DC;
+            ent.SF_KONTR_CRS_SUMMA = SF_KONTR_CRS_SUMMA;
+            ent.SF_KONTR_CRS_RATE = SF_KONTR_CRS_RATE;
+            ent.SF_UCHET_VALUTA_DC = SF_UCHET_VALUTA_DC;
+            ent.SF_UCHET_VALUTA_RATE = SF_UCHET_VALUTA_RATE;
+            ent.SF_SUMMA_V_UCHET_VALUTE = SF_SUMMA_V_UCHET_VALUTE;
+            ent.SF_NDS_1INCLUD_0NO = SF_NDS_1INCLUD_0NO;
+            ent.SF_FORM_RASCH_DC = SF_FORM_RASCH_DC;
+            ent.SF_NALOG_NA_PROD_PROC = SF_NALOG_NA_PROD_PROC;
+            ent.SF_DILER_DC = SF_DILER_DC;
+            ent.SF_DILER_SUMMA = SF_DILER_SUMMA;
+            ent.SF_DILER_CRS_DC = SF_DILER_CRS_DC;
+            ent.SF_DILER_RATE = SF_DILER_RATE;
+            ent.SF_1INCLUD_NAL_S_PROD_0NO = SF_1INCLUD_NAL_S_PROD_0NO;
+            ent.SF_DOP_USL_DC = SF_DOP_USL_DC;
+            ent.SF_AUTOMAT_CREATE = SF_AUTOMAT_CREATE;
+            ent.SF_NOTE = SF_NOTE;
+            ent.SF_SOTRUDNIK_TN = SF_SOTRUDNIK_TN;
+            ent.TSTAMP = TSTAMP;
+            ent.SF_CORRECT_NUM = SF_CORRECT_NUM;
+            ent.SF_CORRECT_DATE = SF_CORRECT_DATE;
+            ent.SF_CRS_CODE = SF_CRS_CODE;
+            ent.CORRECTION_NUM = CORRECTION_NUM;
+            ent.CORRECTION_DATE = CORRECTION_DATE;
+            ent.COUNTRY_NAME = COUNTRY_NAME;
+            ent.COUNTRY_CODE = COUNTRY_CODE;
+            ent.KPP = KPP;
+            ent.GUID_ID = GUID_ID;
+            ent.GRUZO_INFO_ID = GRUZO_INFO_ID;
+            ent.REGISTER_DATE = REGISTER_DATE;
+            ent.BUH_CLIENT_DC = BUH_CLIENT_DC;
+            ent.BUH_RECEIVER_DC = BUH_RECEIVER_DC;
+            ent.NAKL_GRUZOOTPRAV = NAKL_GRUZOOTPRAV;
+            ent.NAKL_GRUZOPOLUCH = NAKL_GRUZOPOLUCH;
+            ent.GROZO_REQUISITE = GROZO_REQUISITE;
+            ent.SD_179 = SD_179;
+            ent.SD_189 = SD_189;
+            ent.SD_301 = SD_301;
+            ent.SD_3011 = SD_3011;
+            ent.SD_40 = SD_40;
+            ent.SD_43 = SD_43;
+            ent.SD_431 = SD_431;
+            ent.SD_432 = SD_432;
+            ent.SD_433 = SD_433;
+            ent.SD_434 = SD_434;
+            ent.SD_77 = SD_77;
+        }
+
+        public SD_84 DefaultValue()
+        {
+            return new SD_84
+            {
+                DOC_CODE = -1,
+                Id = Guid.NewGuid()
+            };
+        }
+
+        public List<SD_84> LoadList()
+        {
+            throw new NotImplementedException();
+        }
+
+        public EntityLoadCodition LoadCondition { get; set; }
+
+        public SD_84 Load(decimal dc, bool isShort = true)
+        {
+            throw new NotImplementedException();
+        }
+
+        public SD_84 Load(Guid id, bool isShort = true)
+        {
+            throw new NotImplementedException();
+        }
+
+        public virtual SD_84 Load(decimal dc)
+        {
+            throw new NotImplementedException();
+        }
+
+        public virtual SD_84 Load(Guid id)
+        {
+            throw new NotImplementedException();
+        }
+    }
+    public class DataAnnotationsSFClientViewModel : DataAnnotationForFluentApiBase, IMetadataProvider<SFClientViewModel>
+    {
+        void IMetadataProvider<SFClientViewModel>.BuildMetadata(MetadataBuilder<SFClientViewModel> builder)
+        {
+            SetNotAutoGenerated(builder);
+            builder.Property(_ => _.Receiver).NotAutoGenerated();
+            builder.Property(_ => _.CO).NotAutoGenerated();
+            builder.Property(_ => _.VzaimoraschetType).NotAutoGenerated();
+            builder.Property(_ => _.FormRaschet).NotAutoGenerated();
+            builder.Property(_ => _.PayCondition).NotAutoGenerated();
+            builder.Property(_ => _.SF_DATE).AutoGenerated().DisplayName("ÐÐ°ÑÐ°");
+            builder.Property(_ => _.SF_IN_NUM).AutoGenerated().DisplayName("â");
+            builder.Property(_ => _.SF_OUT_NUM).AutoGenerated().DisplayName("Ðâ");
+            builder.Property(_ => _.Client).AutoGenerated().DisplayName("ÐÐ¾Ð½ÑÑÐ°Ð³ÐµÐ½Ñ");
+            builder.Property(_ => _.Currency).AutoGenerated().DisplayName("ÐÐ°Ð»ÑÑÐ°");
+            builder.Property(_ => _.SummaOtgruz).AutoGenerated().DisplayName("ÐÑÐ³ÑÑÐ¶ÐµÐ½Ð¾");
+            builder.Property(_ => _.SF_DILER_SUMMA).AutoGenerated().DisplayName("Ð¡ÑÐ¼Ð¼Ð° Ð´Ð¸Ð»ÐµÑÐ°");
+            builder.Property(_ => _.Note).AutoGenerated().DisplayName("Ð¿ÑÐ¸Ð¼ÐµÑÐ°Ð½Ð¸Ðµ");
+            builder.Property(_ => _.Diler).AutoGenerated().DisplayName("ÐÐ¸Ð»ÐµÑ");
+            builder.Property(_ => _.IsAccepted).AutoGenerated().DisplayName("ÐÐºÑÐµÐ¿ÑÐ¾Ð²Ð°Ð½");
+            builder.Property(_ => _.COName).AutoGenerated().DisplayName("Ð¦Ð");
+            builder.Property(_ => _.Summa).AutoGenerated().DisplayName("Ð¡ÑÐ¼Ð¼Ð°");
+        }
+    }
+}
\ No newline at end of file
diff --git a/Data/SD_26.cs b/Data/SD_26.cs
--- a/Data/SD_26.cs
+++ b/Data/SD_26.cs
@@ -62,7 +62,7 @@
         public Nullable<decimal> SF_VZAIMOR_TYPE_DC { get; set; }
         public Nullable<decimal> SF_DOGOVOR_POKUPKI_DC { get; set; }
         public Nullable<decimal> SF_PREDOPL_DOC_DC { get; set; }
-        public Nullable<int> SF_IN_NUM { get; set; }
+        public int SF_IN_NUM { get; set; }
         public Nullable<decimal> SF_FORM_RASCH_DC { get; set; }
         public Nullable<System.DateTime> SF_VIPOL_RABOT_DATE { get; set; }
         public Nullable<short> SF_TRANZIT { get; set; }
diff --git a/GenerateDataContract/GenerateDataContract.csproj b/GenerateDataContract/GenerateDataContract.csproj
--- a/GenerateDataContract/GenerateDataContract.csproj
+++ b/GenerateDataContract/GenerateDataContract.csproj
@@ -89,8 +89,8 @@
   </ItemGroup>
   <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
   <PropertyGroup>
-    <PostBuildEvent>if $(ConfigurationName) == Debug (
-   xcopy /Y "$(TargetDir)*.*" "c:\Users\Vadim\WorkProject\KursTestProject\Utils\GenerateDto")</PostBuildEvent>
+    <PostBuildEvent>
+    </PostBuildEvent>
   </PropertyGroup>
   <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
        Other similar extension points exist, see Microsoft.Common.targets.
diff --git a/KursAM2v3/Managers/SFClientManager.cs b/KursAM2v3/Managers/SFClientManager.cs
new file mode 100644
--- /dev/null
+++ b/KursAM2v3/Managers/SFClientManager.cs
@@ -0,0 +1,325 @@
+ï»¿using System;
+using System.Collections.Generic;
+using System.Data.Entity;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using System.Transactions;
+using Core;
+using Core.EntityViewModel;
+using Core.WindowsManager;
+using Data;
+using Helper;
+
+namespace KursAM2.Managers
+{
+    public class SFClientManager
+    {
+        private decimal dc;
+        public decimal SaveData(SFClientViewModel doc)
+        {
+            
+            try
+            {
+                using (var ctx = GlobalOptions.GetEntities())
+                {
+                    
+                    if (doc.DocCode == -1)
+                    {
+                        var GuidId = Guid.NewGuid();
+                        var inNum = ctx.SD_84.Max(_ => _.SF_IN_NUM) + 1;
+                        dc = ctx.SD_84.Max(_ => _.DOC_CODE) + 1;
+                        ctx.SD_84.Add(new SD_84
+                        {
+                            Id = GuidId,
+                            DOC_CODE = dc,
+                            SF_IN_NUM = inNum,
+                            SF_OUT_NUM = doc.SF_OUT_NUM,
+                            SF_DATE = doc.SF_DATE,
+                            REGISTER_DATE = doc.REGISTER_DATE,
+                            SF_PAY_COND_DC = doc.SF_PAY_COND_DC,
+                            SF_CRS_SUMMA_K_OPLATE = doc.SF_CRS_SUMMA_K_OPLATE,
+                            SF_CRS_DC = doc.SF_CRS_DC,
+                            SF_CRS_RATE = doc.SF_CRS_RATE,
+                            SF_CLIENT_DC = doc.SF_CLIENT_DC,
+                            SF_CLIENT_NAME = doc.SF_CLIENT_NAME,
+                            SF_DILER_SUMMA = doc.SF_DILER_SUMMA,
+                            SF_DILER_DC = doc.SF_DILER_DC,
+                            SF_ACCEPTED = doc.SF_ACCEPTED,
+                            SF_CENTR_OTV_DC = doc.SF_CENTR_OTV_DC,
+                            CREATOR = "sysadm", //todo ÑÐ·Ð½Ð°ÑÑ ÐºÐ°Ðº Ð²ÑÐ²ÐµÑÑÐ¸
+                            SF_VZAIMOR_TYPE_DC = doc.SF_VZAIMOR_TYPE_DC,
+                            SF_FORM_RASCH_DC = doc.SF_FORM_RASCH_DC,
+                            SF_NOTE = doc.Note,
+                            SF_RECEIVER_KONTR_DC = doc.SF_RECEIVER_KONTR_DC
+                    });
+                        var myCode = doc.Rows.Max(_ => _.CODE) + 1;
+                        foreach (var items in doc.Rows)
+                        {
+                            var data = ctx.TD_84.FirstOrDefault(_ => _.DOC_CODE == items.DOC_CODE && _.CODE == items.CODE);
+                            if (items.DOC_CODE == -1)
+                            {
+                                ctx.TD_84.Add(new TD_84
+                                {
+                                    DOC_CODE = doc.DocCode,
+                                    CODE = myCode,
+                                    DocId = GuidId,
+                                    SFT_TEXT = " ", //todo SFT_TEXT Ð§Ð¢Ð Ð­Ð¢Ð?
+                                    SFT_NEMENKL_DC = items.SFT_NEMENKL_DC,
+                                    SFT_KOL = items.SFT_KOL,
+                                    SFT_NDS_PERCENT = items.SFT_NDS_PERCENT,
+
+                                    OLD_NOM_NAME = items.OLD_NOM_NAME,
+                                    OLD_NOM_NOMENKL = items.OLD_NOM_NOMENKL,
+                                    OLD_OVERHEAD_CRS_NAME = items.OLD_OVERHEAD_CRS_NAME,
+                                    OLD_OVERHEAD_NAME = items.OLD_OVERHEAD_NAME,
+                                    OLD_UNIT_NAME = items.OLD_UNIT_NAME,
+                                    SFT_ACCIZ = items.SFT_ACCIZ,
+                                    SFT_COUNTRY_CODE = items.SFT_COUNTRY_CODE,
+                                    SFT_DOG_OTGR_DC = items.SFT_DOG_OTGR_DC,
+                                    SFT_DOG_OTGR_PLAN_CODE = items.SFT_DOG_OTGR_PLAN_CODE,
+                                    SFT_ED_CENA = items.SFT_ED_CENA,
+                                    SFT_KOMPLEKT = items.SFT_KOMPLEKT,
+                                    SFT_UCHET_ED_IZM_DC = items.SFT_UCHET_ED_IZM_DC,
+                                    SFT_NACENKA_DILERA = items.SFT_NACENKA_DILERA,
+                                    SFT_NALOG_NA_PROD = items.SFT_NALOG_NA_PROD,
+                                    SFT_N_GRUZ_DECLAR = items.SFT_N_GRUZ_DECLAR,
+                                    SFT_PROCENT_ZS_RASHODOV = items.SFT_PROCENT_ZS_RASHODOV,
+                                    SFT_SHPZ_DC = items.SFT_SHPZ_DC,
+                                    SFT_STDP_DC = items.SFT_STDP_DC,
+                                    SFT_STRANA_PROIS = items.SFT_STRANA_PROIS,
+                                    SFT_SUMMA_K_OPLATE = items.SFT_SUMMA_K_OPLATE,
+                                    SFT_SUMMA_K_OPLATE_KONTR_CRS = items.SFT_SUMMA_K_OPLATE_KONTR_CRS,
+                                    SFT_SUMMA_NDS = items.SFT_SUMMA_NDS,
+                                    SFT_TARA_DC = items.SFT_TARA_DC,
+                                    SFT_TARA_FLAG = items.SFT_TARA_FLAG,
+                                    SFT_TARA_MEST = items.SFT_TARA_MEST,
+                                });
+                                myCode += 1;
+                            }
+                            else
+                            {
+                                data.SFT_TEXT = " "; //todo SFT_TEXT Ð§Ð¢Ð Ð­Ð¢Ð?
+                                data.SFT_NEMENKL_DC = items.SFT_NEMENKL_DC;
+                                data.SFT_KOL = items.SFT_KOL;
+                                data.SFT_NDS_PERCENT = items.SFT_NDS_PERCENT;
+
+                                data.OLD_NOM_NAME = items.OLD_NOM_NAME;
+                                data.OLD_NOM_NOMENKL = items.OLD_NOM_NOMENKL;
+                                data.OLD_OVERHEAD_CRS_NAME = items.OLD_OVERHEAD_CRS_NAME;
+                                data.OLD_OVERHEAD_NAME = items.OLD_OVERHEAD_NAME;
+                                data.OLD_UNIT_NAME = items.OLD_UNIT_NAME;
+                                data.SFT_ACCIZ = items.SFT_ACCIZ;
+                                data.SFT_COUNTRY_CODE = items.SFT_COUNTRY_CODE;
+                                data.SFT_DOG_OTGR_DC = items.SFT_DOG_OTGR_DC;
+                                data.SFT_DOG_OTGR_PLAN_CODE = items.SFT_DOG_OTGR_PLAN_CODE;
+                                data.SFT_ED_CENA = items.SFT_ED_CENA;
+                                data.SFT_KOMPLEKT = items.SFT_KOMPLEKT;
+                                data.SFT_UCHET_ED_IZM_DC = items.SFT_UCHET_ED_IZM_DC;
+                                data.SFT_NACENKA_DILERA = items.SFT_NACENKA_DILERA;
+                                data.SFT_NALOG_NA_PROD = items.SFT_NALOG_NA_PROD;
+                                data.SFT_N_GRUZ_DECLAR = items.SFT_N_GRUZ_DECLAR;
+                                data.SFT_PROCENT_ZS_RASHODOV = items.SFT_PROCENT_ZS_RASHODOV;
+                                data.SFT_SHPZ_DC = items.SFT_SHPZ_DC;
+                                data.SFT_STDP_DC = items.SFT_STDP_DC;
+                                data.SFT_STRANA_PROIS = items.SFT_STRANA_PROIS;
+                                data.SFT_SUMMA_K_OPLATE = items.SFT_SUMMA_K_OPLATE;
+                                data.SFT_SUMMA_K_OPLATE_KONTR_CRS = items.SFT_SUMMA_K_OPLATE_KONTR_CRS;
+                                data.SFT_SUMMA_NDS = items.SFT_SUMMA_NDS;
+                                data.SFT_TARA_DC = items.SFT_TARA_DC;
+                                data.SFT_TARA_FLAG = items.SFT_TARA_FLAG;
+                                data.SFT_TARA_MEST = items.SFT_TARA_MEST;
+                            }
+
+                        }
+                        if (doc.DeletedRows.Count > 0)
+                        {
+                            foreach (var item in doc.DeletedRows)
+                            {
+                                var DeletedItem = ctx.TD_84.FirstOrDefault(_ => _.Id == item.Id);
+                                ctx.TD_84.Remove(DeletedItem);
+                            }
+                        }
+                    }
+                    else
+                    {
+                        dc = doc.DocCode;
+                        var item = ctx.SD_84.FirstOrDefault(_ => _.DOC_CODE == doc.DocCode);
+                        item.SF_OUT_NUM = doc.SF_OUT_NUM;
+                        item.SF_DATE = doc.SF_DATE;
+                        item.REGISTER_DATE = doc.REGISTER_DATE;
+                        item.SF_PAY_COND_DC = doc.SF_PAY_COND_DC;
+                        item.SF_CRS_SUMMA_K_OPLATE = doc.SF_CRS_SUMMA_K_OPLATE;
+                        item.SF_CRS_DC = doc.SF_CRS_DC;
+                        item.SF_CRS_RATE = doc.SF_CRS_RATE;
+                        item.SF_CLIENT_DC = doc.SF_CLIENT_DC;
+                        item.SF_CLIENT_NAME = doc.SF_CLIENT_NAME;
+                        item.SF_DILER_SUMMA = doc.SF_DILER_SUMMA;
+                        item.SF_DILER_DC = doc.SF_DILER_DC;
+                        item.SF_ACCEPTED = doc.SF_ACCEPTED;
+                        item.SF_CENTR_OTV_DC = doc.SF_CENTR_OTV_DC;
+                        item.CREATOR = "sysadm"; //todo ÑÐ·Ð½Ð°ÑÑ ÐºÐ°Ðº Ð²ÑÐ²ÐµÑÑÐ¸
+                        item.SF_VZAIMOR_TYPE_DC = doc.SF_VZAIMOR_TYPE_DC;
+                        item.SF_FORM_RASCH_DC = doc.SF_FORM_RASCH_DC;
+                        item.SF_NOTE = doc.Note;
+                        item.SF_RECEIVER_KONTR_DC = doc.SF_RECEIVER_KONTR_DC;
+
+                        var myCode = doc.Rows.Max(_ => _.CODE) + 1;
+                        foreach (var items in doc.Rows)
+                        {
+                            var docGuid = ctx.SD_84.FirstOrDefault(_ => _.DOC_CODE == doc.DocCode).Id;
+                            var data = ctx.TD_84.FirstOrDefault(_ => _.DOC_CODE == items.DOC_CODE && _.CODE == items.CODE);
+                            if (items.DOC_CODE == -1)
+                            {
+                                ctx.TD_84.Add(new TD_84
+                                {
+                                    DOC_CODE = doc.DocCode,
+                                    CODE = myCode,
+                                    DocId = docGuid,
+                                    SFT_TEXT = " ", //todo SFT_TEXT Ð§Ð¢Ð Ð­Ð¢Ð?
+                                    SFT_NEMENKL_DC = items.SFT_NEMENKL_DC,
+                                    SFT_KOL = items.SFT_KOL,
+                                    SFT_NDS_PERCENT = items.SFT_NDS_PERCENT,
+                                    Id = Guid.NewGuid(),
+
+                                    OLD_NOM_NAME = items.OLD_NOM_NAME,
+                                    OLD_NOM_NOMENKL = items.OLD_NOM_NOMENKL,
+                                    OLD_OVERHEAD_CRS_NAME = items.OLD_OVERHEAD_CRS_NAME,
+                                    OLD_OVERHEAD_NAME = items.OLD_OVERHEAD_NAME,
+                                    OLD_UNIT_NAME = items.OLD_UNIT_NAME,
+                                    SFT_ACCIZ = items.SFT_ACCIZ,
+                                    SFT_COUNTRY_CODE = items.SFT_COUNTRY_CODE,
+                                    SFT_DOG_OTGR_DC = items.SFT_DOG_OTGR_DC,
+                                    SFT_DOG_OTGR_PLAN_CODE = items.SFT_DOG_OTGR_PLAN_CODE,
+                                    SFT_ED_CENA = items.SFT_ED_CENA,
+                                    SFT_KOMPLEKT = items.SFT_KOMPLEKT,
+                                    SFT_UCHET_ED_IZM_DC = items.SFT_UCHET_ED_IZM_DC,
+                                    SFT_NACENKA_DILERA = items.SFT_NACENKA_DILERA,
+                                    SFT_NALOG_NA_PROD = items.SFT_NALOG_NA_PROD,
+                                    SFT_N_GRUZ_DECLAR = items.SFT_N_GRUZ_DECLAR,
+                                    SFT_PROCENT_ZS_RASHODOV = items.SFT_PROCENT_ZS_RASHODOV,
+                                    SFT_SHPZ_DC = items.SFT_SHPZ_DC,
+                                    SFT_STDP_DC = items.SFT_STDP_DC,
+                                    SFT_STRANA_PROIS = items.SFT_STRANA_PROIS,
+                                    SFT_SUMMA_K_OPLATE = items.SFT_SUMMA_K_OPLATE,
+                                    SFT_SUMMA_K_OPLATE_KONTR_CRS = items.SFT_SUMMA_K_OPLATE_KONTR_CRS,
+                                    SFT_SUMMA_NDS = items.SFT_SUMMA_NDS,
+                                    SFT_TARA_DC = items.SFT_TARA_DC,
+                                    SFT_TARA_FLAG = items.SFT_TARA_FLAG,
+                                    SFT_TARA_MEST = items.SFT_TARA_MEST,
+                                });
+                                myCode += 1;
+                            }
+                            else
+                            {
+                                data.SFT_TEXT = " "; //todo SFT_TEXT Ð§Ð¢Ð Ð­Ð¢Ð?
+                                data.SFT_NEMENKL_DC = items.SFT_NEMENKL_DC;
+                                data.SFT_KOL = items.SFT_KOL;
+                                data.SFT_NDS_PERCENT = items.SFT_NDS_PERCENT;
+
+                                data.OLD_NOM_NAME = items.OLD_NOM_NAME;
+                                data.OLD_NOM_NOMENKL = items.OLD_NOM_NOMENKL;
+                                data.OLD_OVERHEAD_CRS_NAME = items.OLD_OVERHEAD_CRS_NAME;
+                                data.OLD_OVERHEAD_NAME = items.OLD_OVERHEAD_NAME;
+                                data.OLD_UNIT_NAME = items.OLD_UNIT_NAME;
+                                data.SFT_ACCIZ = items.SFT_ACCIZ;
+                                data.SFT_COUNTRY_CODE = items.SFT_COUNTRY_CODE;
+                                data.SFT_DOG_OTGR_DC = items.SFT_DOG_OTGR_DC;
+                                data.SFT_DOG_OTGR_PLAN_CODE = items.SFT_DOG_OTGR_PLAN_CODE;
+                                data.SFT_ED_CENA = items.SFT_ED_CENA;
+                                data.SFT_KOMPLEKT = items.SFT_KOMPLEKT;
+                                data.SFT_UCHET_ED_IZM_DC = items.SFT_UCHET_ED_IZM_DC;
+                                data.SFT_NACENKA_DILERA = items.SFT_NACENKA_DILERA;
+                                data.SFT_NALOG_NA_PROD = items.SFT_NALOG_NA_PROD;
+                                data.SFT_N_GRUZ_DECLAR = items.SFT_N_GRUZ_DECLAR;
+                                data.SFT_PROCENT_ZS_RASHODOV = items.SFT_PROCENT_ZS_RASHODOV;
+                                data.SFT_SHPZ_DC = items.SFT_SHPZ_DC;
+                                data.SFT_STDP_DC = items.SFT_STDP_DC;
+                                data.SFT_STRANA_PROIS = items.SFT_STRANA_PROIS;
+                                data.SFT_SUMMA_K_OPLATE = items.SFT_SUMMA_K_OPLATE;
+                                data.SFT_SUMMA_K_OPLATE_KONTR_CRS = items.SFT_SUMMA_K_OPLATE_KONTR_CRS;
+                                data.SFT_SUMMA_NDS = items.SFT_SUMMA_NDS;
+                                data.SFT_TARA_DC = items.SFT_TARA_DC;
+                                data.SFT_TARA_FLAG = items.SFT_TARA_FLAG;
+                                data.SFT_TARA_MEST = items.SFT_TARA_MEST;
+                            }
+                            
+                        }
+                        if (doc.DeletedRows.Count > 0)
+                        {
+                            foreach (var i in doc.DeletedRows)
+                            {
+                                var DeletedItem = ctx.TD_84.FirstOrDefault(_ => _.CODE == i.CODE && _.DOC_CODE == i.DOC_CODE);
+                                ctx.TD_84.Remove(DeletedItem);
+                            }
+                        }
+                    }
+                    ctx.SaveChanges();
+                }
+            }
+            catch (Exception e)
+            {
+                WindowManager.ShowError(e);
+            }
+            #region Old
+
+            //using (var tnx = new TransactionScope())
+            //{
+            //    try
+            //    {
+            //        using (var ctx = GlobalOptions.GetEntities())
+            //        {
+            //            var d = ctx.SD_84.Include(_ => _.TD_84).SingleOrDefault(_ => _.DOC_CODE == doc.DocCode);
+            //            WrapperUtility.AutoWrapper(doc.Entity, d, new List<string>
+            //            {
+            //                "DOC_CODE",
+            //                "Id"
+            //            });
+            //            foreach (var row in d.TD_84)
+            //            {
+            //                var r = doc.Rows.SingleOrDefault(_ => _.CODE == row.CODE);
+            //                if (r != null)
+            //                    WrapperUtility.AutoWrapper(r.Entity, row, new List<string>
+            //                    {
+            //                        "DOC_CODE",
+            //                        "CODE",
+            //                        "Id",
+            //                        "DocId"
+            //                    });
+            //            }
+            //            ctx.SaveChanges();
+            //        }
+            //        tnx.Complete();
+            //    }
+            //    catch (Exception ex)
+            //    {
+            //        WindowManager.ShowError(ex);
+            //    }
+            //}
+            #endregion
+            return dc;
+        }
+
+        public void Deleted(SFClientViewModel currentSf)
+        {
+            try
+            {
+                using (var ctx = GlobalOptions.GetEntities())
+                {
+                    var deleteSD_84 = ctx.SD_84.FirstOrDefault(_ => _.DOC_CODE == currentSf.DocCode);
+                    ctx.SD_84.Remove(deleteSD_84);
+                    var deleteTD_84 = ctx.TD_84.Where(_ => _.DOC_CODE == currentSf.DocCode);
+                    foreach (var i in deleteTD_84)
+                    {
+                        ctx.TD_84.Remove(i);
+                    }
+                    ctx.SaveChanges();
+                }
+            }
+            catch (Exception e)
+            {
+                WindowManager.ShowError(e);
+            }
+        }
+    }
+}
diff --git a/KursAM2v3/View/Finance/MutualAccountingSearchView.xaml.cs b/KursAM2v3/View/Finance/MutualAccountingSearchView.xaml.cs
--- a/KursAM2v3/View/Finance/MutualAccountingSearchView.xaml.cs
+++ b/KursAM2v3/View/Finance/MutualAccountingSearchView.xaml.cs
@@ -55,9 +55,6 @@
             //LayoutManager.Load(true);
         }
 
-        private void ButtonEdit_KeyDown(object sender, System.Windows.Input.KeyEventArgs e)
-        {
-
-        }
+        
     }
 }
\ No newline at end of file
diff --git a/KursAM2v3/View/KursReferences/AccessRightsView.xaml b/KursAM2v3/View/KursReferences/AccessRightsView.xaml
--- a/KursAM2v3/View/KursReferences/AccessRightsView.xaml
+++ b/KursAM2v3/View/KursReferences/AccessRightsView.xaml
@@ -17,7 +17,6 @@
                Content="{Binding DatabaseName, NotifyOnSourceUpdated=True}" Foreground="{Binding DatabaseColor}" />
         <dxlc:LayoutControl x:Name="MainLayoutControl">
             <dxlc:LayoutGroup Name="LayoutGroup1" dxlc:LayoutControl.AllowHorizontalSizing="True">
-
                 <DockPanel>
                     <dxe:CheckEdit DockPanel.Dock="Top"
                                    x:Name="CheckEdit" EditValue="{Binding Path=IsShowAll}">
diff --git a/KursAM2v3/View/Logistiks/UC/AddNomenklUC.xaml b/KursAM2v3/View/Logistiks/UC/AddNomenklUC.xaml
new file mode 100644
--- /dev/null
+++ b/KursAM2v3/View/Logistiks/UC/AddNomenklUC.xaml
@@ -0,0 +1,121 @@
+ï»¿<UserControl x:Class="KursAM2.View.Logistiks.UC.AddNomenklUC"
+             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
+             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
+             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
+             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
+             xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
+             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
+             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
+             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
+             xmlns:local="clr-namespace:KursAM2.View.Logistiks.UC"
+             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
+             mc:Ignorable="d"
+             d:DesignHeight="300" d:DesignWidth="600">
+    <dxlc:LayoutControl x:Name="mainControl">
+        <dxlc:LayoutGroup Orientation="Vertical">
+            <dxlc:LayoutItem Label="Ð¡ÑÑÐ¾ÐºÐ° Ð¿Ð¾Ð¸ÑÐºÐ°"
+                             Margin="0 0 0 5"
+                             ToolTip="Ð§Ð°ÑÑÑ Ð½Ð°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ñ ÐºÐ¾Ð½ÑÑÐ°Ð³ÐµÐ½ÑÐ°, Ð¿ÑÐ¸Ð¼ÐµÑÐ°Ð½Ð¸Ñ"
+                             Height="26"
+                             Name="itemLayoutSearch">
+                <dxe:ButtonEdit Margin="5 0 0 0"
+                    AllowDefaultButton="False"
+                                Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
+                    <dxe:ButtonEdit.Buttons>
+                        <dxe:ButtonInfo GlyphKind="Search" Command="{Binding SearchCommand}" />
+                        <dxe:ButtonInfo GlyphKind="Cancel" Command="{Binding SearchClearCommand}" />
+                    </dxe:ButtonEdit.Buttons>
+                </dxe:ButtonEdit>
+            </dxlc:LayoutItem>
+            <dxlc:LayoutGroup Orientation="Horizontal">
+                <dxlc:LayoutGroup x:Name="Group1" dxlc:LayoutControl.AllowHorizontalSizing="True">
+                    <dxg:TreeListControl
+                        Name="treeListPermissionStruct"
+                        AutoGenerateColumns="AddNew"
+                        EnableSmartColumnsGeneration="True"
+                        HorizontalAlignment="Stretch"
+                        MaxHeight="10000"
+                        MaxWidth="10000"
+                        VerticalAlignment="Stretch"
+                        dx:DXSerializer.SerializationID="treeListPermissionStruct"
+                        dx:DXSerializer.StoreLayoutMode="All"
+                        dxg:DataControlSerializationOptions.AddNewColumns="False"
+                        dxg:DataControlSerializationOptions.RemoveOldColumns="False"
+                        CurrentItem="{Binding CurrentGroup}"
+                        ItemsSource="{Binding NomenklGroup}">
+                        <dxg:TreeListControl.View>
+                            <dxg:TreeListView ShowTotalSummary="False"
+                                              Name="treeListPermissionStructView"
+                                              ParentFieldName="CAT_PARENT_DC"
+                                              KeyFieldName="DocCode"
+                                              ShowAutoFilterRow="False"
+                                              EnableImmediatePosting="True" />
+                        </dxg:TreeListControl.View>
+                    </dxg:TreeListControl>
+                </dxlc:LayoutGroup>
+                <dxlc:LayoutGroup x:Name="Group2" dxlc:LayoutControl.AllowHorizontalSizing="True">
+                    <dxg:GridControl x:Name="NomenklItemGrid"
+                                     AutoGenerateColumns="AddNew"
+                                     EnableSmartColumnsGeneration="True"
+                                     dx:DXSerializer.SerializationID="gridControl"
+                                     dx:DXSerializer.StoreLayoutMode="All"
+                                     dxg:DataControlSerializationOptions.AddNewColumns="True"
+                                     dxg:DataControlSerializationOptions.RemoveOldColumns="True"
+                                     VerticalAlignment="Stretch"
+                                     HorizontalAlignment="Stretch"
+                                     ItemsSource="{Binding NomenklItem}"
+                                     CurrentItem="{Binding CurrentNomenkl}">
+                        <dxg:GridControl.View>
+                            <dxg:TableView x:Name="tableView2"
+                                           EnableImmediatePosting="True"
+                                           AllowPerPixelScrolling="True"
+                                           ShowTotalSummary="False">
+                                <dxg:TableView.ContextMenu>
+                                    <ContextMenu>
+                                        <MenuItem Header="ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ" Command="{Binding AddNomenklToSelectCommand}" />
+                                    </ContextMenu>
+                                </dxg:TableView.ContextMenu>
+                                <dxmvvm:Interaction.Behaviors>
+                                    <dxmvvm:EventToCommand EventName="MouseDoubleClick"
+                                                           Command="{Binding AddNomenklToSelectCommand}" />
+                                </dxmvvm:Interaction.Behaviors>
+                            </dxg:TableView>
+                        </dxg:GridControl.View>
+                    </dxg:GridControl>
+                </dxlc:LayoutGroup>
+            </dxlc:LayoutGroup>
+            <dxlc:LayoutGroup>
+                <dxg:GridControl
+                    Height="200"
+                    x:Name="SelectedNomenklGrid"
+                    AutoGenerateColumns="AddNew"
+                    EnableSmartColumnsGeneration="True"
+                    dx:DXSerializer.SerializationID="gridControl"
+                    dx:DXSerializer.StoreLayoutMode="All"
+                    dxg:DataControlSerializationOptions.AddNewColumns="True"
+                    dxg:DataControlSerializationOptions.RemoveOldColumns="True"
+                    VerticalAlignment="Stretch"
+                    HorizontalAlignment="Stretch"
+                    ItemsSource="{Binding SelectedNomenkl}"
+                    CurrentItem="{Binding CurrentSelectNomenkl}">
+                    <dxg:GridControl.View>
+                        <dxg:TableView x:Name="tableView3"
+                                       EnableImmediatePosting="True"
+                                       AllowPerPixelScrolling="True"
+                                       ShowTotalSummary="False">
+                            <dxg:TableView.ContextMenu>
+                                <ContextMenu>
+                                    <MenuItem Header="Ð£Ð´Ð°Ð»Ð¸ÑÑ" Command="{Binding DeletedNomenklInSelecktCommand}" />
+                                </ContextMenu>
+                            </dxg:TableView.ContextMenu>
+                            <dxmvvm:Interaction.Behaviors>
+                                <dxmvvm:EventToCommand EventName="MouseDoubleClick"
+                                                       Command="{Binding DeletedNomenklInSelecktCommand}" />
+                            </dxmvvm:Interaction.Behaviors>
+                        </dxg:TableView>
+                    </dxg:GridControl.View>
+                </dxg:GridControl>
+            </dxlc:LayoutGroup>
+        </dxlc:LayoutGroup>
+    </dxlc:LayoutControl>
+</UserControl>
\ No newline at end of file
diff --git a/KursAM2v3/View/Logistiks/UC/AddNomenklUC.xaml.cs b/KursAM2v3/View/Logistiks/UC/AddNomenklUC.xaml.cs
new file mode 100644
--- /dev/null
+++ b/KursAM2v3/View/Logistiks/UC/AddNomenklUC.xaml.cs
@@ -0,0 +1,43 @@
+ï»¿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using System.Windows;
+using System.Windows.Controls;
+using System.Windows.Data;
+using System.Windows.Documents;
+using System.Windows.Input;
+using System.Windows.Media;
+using System.Windows.Media.Imaging;
+using System.Windows.Navigation;
+using System.Windows.Shapes;
+using Core.ViewModel.Base;
+using LayoutManager;
+
+namespace KursAM2.View.Logistiks.UC
+{
+    /// <summary>
+    /// Interaction logic for AddNomenklUC.xaml
+    /// </summary>
+    public partial class AddNomenklUC : ILayout
+    {
+        public AddNomenklUC()
+        {
+            InitializeComponent();
+            LayoutManager = new LayoutManager.LayoutManager(GetType().Name, mainControl);
+            Loaded += UserControl_Loaded;
+            Unloaded += UserControl_Unloaded;
+        }
+        public LayoutManagerBase LayoutManager { get; set; }
+        private void UserControl_Loaded(object sender, RoutedEventArgs e)
+        {
+            LayoutManager.Load();
+        }
+
+        private void UserControl_Unloaded(object sender, RoutedEventArgs e)
+        {
+            LayoutManager.Save();
+        }
+    }
+}
diff --git a/KursAM2v3/ViewModel/Reference/TreeDocument.cs b/KursAM2v3/ViewModel/Reference/TreeDocument.cs
--- a/KursAM2v3/ViewModel/Reference/TreeDocument.cs
+++ b/KursAM2v3/ViewModel/Reference/TreeDocument.cs
@@ -40,6 +40,7 @@
             //builder.Property(_ => _.).DisplayName("").Description("").ReadOnly();
             builder.Property(_ => _.DocCode).NotAutoGenerated();
             builder.Property(_ => _.Id).NotAutoGenerated();
+            builder.Property(_ => _.ColorState).NotAutoGenerated();
             builder.Property(_ => _.State).NotAutoGenerated();
             builder.Property(_ => _.Note).NotAutoGenerated();
             builder.Property(_ => _.ParentDC).NotAutoGenerated();
diff --git a/VersionGenerate.exe b/VersionGenerate.exe
index c764c086907938db2a27d3c83697ecedd9211c31..8b034493a9f3cc2b0e596ec7ed817fda3dcf6fed
GIT binary patch
literal 5632
zc%1E6TWlOx8UAP1w``J4cJ17p+jyNQP8_e-w>C-b#Me06_*U=6X~0!7JA1sIW_D&X
zGwXP{wo(g?L`5rANTm;mr>5f4B9JJcD%`~7p$J|;h!6#MKtf0rynrG^_|BQxi`Ryv
z4<La!<N4<Nm-C<h{O8O+|9biZFHwMq>Tut`PxLl<ZI~Y1p1~bD_{|V~ZPUALZ%b3}
zwxyPJN6Fh()>d<hrkbYZDru(J1yj*YWqdZN<g5&fZQU9?<lC5=Aexc_^w$GFxm2=y
zm!h;;iW6-C(d6-FIsr<_v0<+-dw%oQQ0<iLbpv$ed7|y&uktKEMElz@qFLYM?fMNC
zdBt<%`$viPJw!~(O)0xBS`+AVRdmc{t1h0Y&HlQ!RQ#?oaV2Iuwnn~h@KG!@v{n!7
z;h4<~OY_WdpM|ZKb$X+<ZpJ&k=Q%N?o`&0qo@?T<lS!%y>%+Fa@c`Yz6Jx_2+lYce
z8{K?E2ZA2lY`2yBTjZUewTD1<gh3tuh!eqM>!wDl8P82t3uj*Op7u1<tR3iCI|0pg
zokzlT)-H72-I(dH1q^oV;iCF*{jMiFTDj_80MxK)!LFa)*%7WQz_Qfb5N<f$7;dok
zgMS;-9l-NWvvrW0K){1djU8>AMaM|m$76Dd`d_3S-s%p}i(jB-_#_>WJEBlKHky2V
zRN|}kw{WFD7LWDC`+81tPCXgGSFjiDA0r-Ax{13z>Ds!Pb-2b&L^zLU`-LR!ZuHJ(
z`{aehIG!D#7h$@6)UeWid|^tO+#%B@PTZ6FXs3v^IGeJ6b2{oD6Uo25qxCz<^R$7I
z((7^qeOurssUUBoAIhBnCY=Q55sBk2fv*d61b#~34}{KZ^a8Lb@SfoOhW;WokQC^W
zgLEX&3eE-j_rTNC1w1cv{B$6KS(;_8(*&I$;>>YU=${F2omrv(I7Ni7Vx=UBYdam5
zbs7=<Ife5-L;dnKP$$|r^@-gUMtU*$t-OgWS)wp;-X36(jsmw+kHC`xM+7DWJ|Xau
zKoz)ybkV;iuqf~idOmQ3zC!opPT;G79=ajy-=M?r?gljn9;NTl&*ee-F{$z>y-a<9
zNpSSQdHNZ=ngxdC6gbxd+aXN`F43!)ja#@QZKuyuFP*1f(nWd-@mvg~=~-bvMw{t6
zuo($1MtkXVz;?O`?4);qeF7g7I41b#>3hJW;CxV^M!y1HrFtnw4n?F^s(Xg~vs-F9
zRdOnC%YN2d%WJJ<s+5&5-M(HLoVGFrgPo>i(Q#QWmYAiSqgl40r)kPkGxTK6m_hQV
zEOReUGsjW0j1uFzleZi-Z7@2k1I8@VvGBZT>n@wpO-7yuqXlL=x@Ar>li8}vXtJPZ
zMqIo|=>n*6mM&zo+)jlzX5|)iM_<DmaU7OQ8^x6FZpgOP49ltZ)ru&k+VJ=+K4|Q^
zRV^ru;ePwhtrucFOM12dk2e&LGe@)a{8}OW&g+I4G0zNjRrH+ogXe5STyr;?G+(s!
z?DB@9TwXPc6~TPLboCq)d{<BFhVE8Llj_R4$j8_!D{ZnrI_9e&so^|$*{!64ZKpY}
zBJf!>t?Fjk0$Vbe##cxas~Qubpu~h($nnW6n<klCMa49Z{@8I{&6<|u>Y7vQ5Y8mC
zt$dQ%E4s$kiM<dryDaz458TEn=IV?)H6!}i|MK`T%kaH*=&WVuRF`JcPlLlx_k_W6
z%yh*8AGfpuCrUhsODrKDE7&&g<9w_z+bz8uQ@Z2Qw6(%!cy%CNf)T?=ae|LZnAieA
zIcq4y$Tv8y+l+?@$tr(&;#xuF`zhYjgCC|ieUuhyff(6%|B>6sL_S!h9REt~Ey=mm
zh77?b7gAIy+vdSFaH|-{h}ybqtklw|C4cdw`DcIq%;al--X9Nq{1un#6iI3dC?wUR
z6Ap7S#6jND*cb|hA`_8BQ)C)n$51`Vq0l}c9(4*up2CO-6Ws(1?86<ZBdLi)h?|tr
zk@zqv6l(hVhZYz1^xwTv58nPzljK)n2lyu=CGWgwtN9trET6U1vTa>=B<Oi5two}3
zwW$UPlZ$pq6e+)2%6H#Tl-_vH0MSv24r%dB-y=%{nXcY`HPhAK6F<?V_VvcQ2KqDo
zy^pd1ZE2tf1%gD4J*W?G5hWyQjm=D?%BkhJKkpD~hygeoYAK6&5;WA}49Ex{qm(5I
zbh&e-`kAj{AKbl*di5@9%lYJZa`j8aFTeHXH^yGRwfd*cPmF$*uV(DjBI<O0bQiA{
zY)8%YuJkR|EPT;QKfQ<)#8ijX%3}FUn*Ph%q0UPGbm{lS1})xMO<f+d?1@z-l9>3y
zF&4`hhLGJqOv>=T$Jzf#lSTch;8zq%YMS$YO;t6o(mk;OpSK!jS%3MT=-<ZM{?agh
z{{<?NsX#w)0d>n|-~`R1mq67t13Cdb>-}1zck15zd!@Rq*gWG?byQo~5RD7o0<xG5
zJG#hd31q7!<SgC}iBTy?Rd5~1Rb;<XM&s?Rx-aqq96q_w(!tMeVCe;+6E9!=lm-&D
zig=7cCx?qcABo(z9IcY&#r#FARuy`sb`HBEmFFAB?VzUPe&pBqxi%M1ikX;Ll`E{p
zkrOL+YBM*XK8``Bbn|&zpq~)_a$OUaj4JQ`^?Whht3vM_Dtd{g(9a4Be6@M3ldm9)
zQ^J1_ujeVKxfNW!@TG@%vO6YXRk7pkSO#=X?CsTZRQVZh5mmQmPxpN<t=)XzYZw-L
zFeko{87d(D?wWmiQ0)6f?AMO3-GSQppAch4py7x$rr~=L5qZ$KKaLUoq3R`g?_0M9
z&#dMQWySx{MDa0-D$LZZ3`(D&=!MkTt`kwkaaA*;8kWh1qDAIJ&z#;G+!`EI{Tfn%
z3DX&h7HspBqb;LecDi!9W?PQ6<aTLR?v(1}Vk<pSC8wJD5_8;z>iJ+yQOd>=8B{H(
zQP%jxuc%_;6E_r{E{^2$hOUV!IHu<F(QeOzYZn|hVJ=w@=})gWGe$a0E1<M0`ZPE;
zyH<doEHh{8D<}-J%y~$webKU&YCHHqXa(-^6kB12VsIRas!qaOv92;Zsuc7Q4TUEr
xSW*p#`HK=px;OBq<a+lS-v_(PK>$72T?*=HdibVz|F@WX?0t;+fBT<l{{Y>V!z};+

diff --git a/VersionGenerate.pdb b/VersionGenerate.pdb
index b5440f71574e083e75a8c127420819eb971cb7e2..9c6a8a3c49ca8d4d483ad14e6325b530b0f405a3
GIT binary patch
literal 11776
zc%1E7U2Icj7=BMz$GZNo<Jg2@mJT7x2L0Ivb`8m3?KBOmV=fvemC+qeXWiP8(}J5J
z=BN>`G?;kf1s6cLP$C-93zSJO42i~g;f&sRWg>~ju*_iOYW01;@9WytGBX_1ZRcs<
zJm2~L|K9KC{lalYOQln>j5FX4w6!_IgO52Mb$LAY+NR(jAWZBJ51^a?jz%!BT9C~d
zSj+H%Ug;_rs35FgdnF$&1a(3X4#?%q$hllq<rXFb_XOp}f4wpOYX<MQywa`aZ-*pw
zPkb<W@uLqf2j0FqF>4*@xs;D12`R=;10AJa238=-=|AlY#rjX*<=DW=hcW(Z8@EOV
zy05L9mQM{rw*Q>z%$L3U-~ILack-!j{%t*d@>w}HEl;&#+?vqT?~NOChu*IXzwuWp
zq`cO7c!S92CH4Hp>kqkJ?&<pTo7X=+*D{r@@2_aX3@iy(OW45Lz}(E-3?1Y~=p*2d
z9Mw`Us7fX>c1%l06Ya-4B2TMYI-W{Ct|nD2no%PMwA82;O}LaafKo2Oah_l_pWtXA
z0qrVYly*@%m2BKGDv8ZMdn6rs_n{wuv2{&LOFh(6d=o6ZBhctRBJ#GS8*WBKSbpTy
zWvRJ=<p61<3tDAzPly35-UHC9S};I38czb*|Epw5w^u5}rSMwVDnB(ina-#Qa1`9G
zP(LjAekL&vP2iM8IyqmKa!d=xHGpOelS;y3xC}iJO|Yp$;ilV!_i7reUnlzQk@%a%
zPEkK9v#KQBL}EOcQh1xb$8R47ZblvzX&N!jeI;pdfx|gpJumHGHh<Oq+qFwWKZLGq
zvzR`=@X2A;T@YmR-7N8brsFl$yNYo&{DJJ0^8F{x_a(irY!Lod0G$TFhI~J=9l4q3
zrBl1mPwzmkNA^=X<Q|@f{v`57<RRo6GjsYu@l9>RHtHGV2a#VD{%?wSX9S-`ZbAR|
zkhdaVKz<ncQ(*e7UqRlE`~@-|4|O~Ev3@?3F6^vUXn;<XHWVLhf?@0nKWoz#oN+C%
zAEgi6Y*pZ(xOSW=GWyCaF9%p~R^7y~8YrwU<aVNTf`R`Ey2~|L+_N+{Z6-F}te<zm
zKW#pD3g;qWh7oCHz*gxB7`Q8F21kA$#%(6hA8s4&O=h&o;RC67GDG{zHWqGXargnC
z5w;ikd3JjU-rJY4f>BfH3K%eOH{mpKJuZj**?^Rw##H_tXq98t>;Gc!f6t+xyDy#`
z3ngPIa3}G4l?HcOQ{2z1(IcuhGM-Y#xJN8LuBP30Vh*Cq4HfPe6{4MG9nfV`+&mF<
z0owwF(J&q#mkp%jFIv3J?qdb(TQ)eW;2jf=06(|yK-p6ipYEocnCnKikVhe};%|;x
zI3Wg$?$#2Vf2BCI#JcDb)<x*px6jkF%M+wHJ3n*HN|0gk3$}^myvu|?J1aw)uLH%S
zHEUtLayhAJ6<eygGjA&uMJ?<^4oi`Hv2Oq0zyW-mFQd>q;6aHq;UtQVLiRhd=Vh@!
zccAP==>u-Zs0Xg5^bV9)TPtu?wE(|2*hM+(f!QmVir3wPwi)<$G*r3*1}cib0mBWE
AhyVZp

