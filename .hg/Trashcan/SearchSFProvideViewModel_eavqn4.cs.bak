using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using Core;
using Core.EntityViewModel;
using Core.Menu;
using Core.ViewModel.Base;
using Core.WindowsManager;

namespace KursAM2.ViewModel.Finance
{
    class SearchSFProvideViewModel : RSWindowSearchViewModelBase
    {
        public SearchSFProvideViewModel(Window form) : base(form)
        {
            LeftMenuBar = MenuGenerator.BaseLeftBar(this);
            RightMenuBar = MenuGenerator.StandartSearchRightBar(this);
            Result = new ObservableCollection<SD_26ViewModel>();
        }
        public ObservableCollection<SD_26ViewModel> Result { set; get; }
        public override void RefreshData(object data)
        {
            IsDocumentOpenAllow = false;
            IsDocNewCopyAllow = false;
            IsDocNewCopyRequisiteAllow = false;
            IsPrintAllow = false;
            while (!MainReferences.IsReferenceLoadComplete)
            {
            }
            try
            {
                Result.Clear();
                using (var ctx = GlobalOptions.GetEntities())
                {
                    var COLLECTION = ctx.SD_26
                        .Include("TD_26.SD_26")
                        .Where(_ => _.SF_POSTAV_DATE >= StartDate && _.SF_POSTAV_DATE <= EndDate);
                    foreach (var item in COLLECTION)
                    {
                        var newItem = new SD_26ViewModel(item);
                        Result.Add(newItem);
                        //var s = (from row in item.TD_84
                        //    let sum = row.TD_24.Sum(unknown => unknown.DDT_KOL_RASHOD)
                        //    // ReSharper disable once PossibleInvalidOperationException
                        //    select sum * (decimal)row.SFT_ED_CENA).Sum();
                    }
                }
            }
            catch (Exception ex)
            {
                WindowManager.ShowError(ex);
            }
            RaisePropertyChanged(nameof(Result));
        }

    }
}
