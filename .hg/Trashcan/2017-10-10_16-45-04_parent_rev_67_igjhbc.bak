diff --git a/Core/EntityViewModel/SFClientRowViewModel.cs b/Core/EntityViewModel/SFClientRowViewModel.cs
new file mode 100644
--- /dev/null
+++ b/Core/EntityViewModel/SFClientRowViewModel.cs
@@ -0,0 +1,736 @@
+ï»¿using System;
+using System.Collections.Generic;
+using System.ComponentModel.DataAnnotations;
+using System.Globalization;
+using System.Linq;
+using Core.Helper;
+using Core.ViewModel.Base;
+using Core.ViewModel.Common;
+using Data;
+using DevExpress.Mvvm.DataAnnotations;
+using JetBrains.Annotations;
+
+// ReSharper disable InconsistentNaming
+
+namespace Core.EntityViewModel
+{
+    [MetadataType(typeof(DataAnnotationsSFClientRowViewModel))]
+
+    public class SFClientRowViewModel : RSViewModelBase, IEntity<TD_84>
+    {
+        //public Country Country
+        //{
+        //    get
+        //    {
+        //        if (Entity.SFT_COUNTRY_CODE == null) return null;
+        //        return MainReferences.Countries.Values.FirstOrDefault(_ => _.Sign3 == Entity.SFT_COUNTRY_CODE);
+        //    }
+        //    set
+        //    {
+        //        if (value == null)
+        //        {
+        //            Entity.SFT_COUNTRY_CODE = null;
+        //        }
+        //        else
+        //        {
+        //            Entity.SFT_COUNTRY_CODE = value.Sign3;
+        //        }
+        //        RaisePropertyChanged();
+        //    }
+        //}
+        private TD_84 myEntity;
+
+        public SFClientRowViewModel()
+        {
+            Entity = DefaultValue();
+        }
+        public SFClientRowViewModel(TD_84 entity)
+        {
+            Entity = entity ?? DefaultValue();
+        }
+
+        public string NomNomenkl => NomenklViewModel?.NOM_NOMENKL;
+
+        public Guid DocId
+        {
+            get => Entity.DocId;
+            set
+            {
+                if (Entity.DocId == value) return;
+                Entity.DocId = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal DOC_CODE
+        {
+            get => Entity.DOC_CODE;
+            set
+            {
+                if (Entity.DOC_CODE == value) return;
+                Entity.DOC_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public int CODE
+        {
+            get => Entity.CODE;
+            set
+            {
+                if (Entity.CODE == value) return;
+                Entity.CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SFT_TEXT
+        {
+            get => Entity.SFT_TEXT;
+            set
+            {
+                if (Entity.SFT_TEXT == value) return;
+                Entity.SFT_TEXT = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal SFT_NEMENKL_DC
+        {
+            get => Entity.SFT_NEMENKL_DC;
+            set
+            {
+                if (Entity.SFT_NEMENKL_DC == value) return;
+                Entity.SFT_NEMENKL_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double SFT_KOL
+        {
+            get => Entity.SFT_KOL;
+            set
+            {
+                if (Entity.SFT_KOL == value) return;
+                Entity.SFT_KOL = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_ED_CENA
+        {
+            get => Entity.SFT_ED_CENA;
+            set
+            {
+                if (Entity.SFT_ED_CENA == value) return;
+                Entity.SFT_ED_CENA = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_ACCIZ
+        {
+            get => Entity.SFT_ACCIZ;
+            set
+            {
+                if (Entity.SFT_ACCIZ == value) return;
+                Entity.SFT_ACCIZ = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double SFT_NDS_PERCENT
+        {
+            get => Entity.SFT_NDS_PERCENT;
+            set
+            {
+                if (Entity.SFT_NDS_PERCENT == value) return;
+                Entity.SFT_NDS_PERCENT = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_SUMMA_NDS
+        {
+            get => Entity.SFT_SUMMA_NDS;
+            set
+            {
+                if (Entity.SFT_SUMMA_NDS == value) return;
+                Entity.SFT_SUMMA_NDS = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_SUMMA_K_OPLATE
+        {
+            get => Entity.SFT_SUMMA_K_OPLATE;
+            set
+            {
+                if (Entity.SFT_SUMMA_K_OPLATE == value) return;
+                Entity.SFT_SUMMA_K_OPLATE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_STDP_DC
+        {
+            get => Entity.SFT_STDP_DC;
+            set
+            {
+                if (Entity.SFT_STDP_DC == value) return;
+                Entity.SFT_STDP_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_UCHET_ED_IZM_DC
+        {
+            get => Entity.SFT_UCHET_ED_IZM_DC;
+            set
+            {
+                if (Entity.SFT_UCHET_ED_IZM_DC == value) return;
+                Entity.SFT_UCHET_ED_IZM_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SFT_KOMPLEKT
+        {
+            get => Entity.SFT_KOMPLEKT;
+            set
+            {
+                if (Entity.SFT_KOMPLEKT == value) return;
+                Entity.SFT_KOMPLEKT = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_NALOG_NA_PROD
+        {
+            get => Entity.SFT_NALOG_NA_PROD;
+            set
+            {
+                if (Entity.SFT_NALOG_NA_PROD == value) return;
+                Entity.SFT_NALOG_NA_PROD = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_DOG_OTGR_DC
+        {
+            get => Entity.SFT_DOG_OTGR_DC;
+            set
+            {
+                if (Entity.SFT_DOG_OTGR_DC == value) return;
+                Entity.SFT_DOG_OTGR_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public int? SFT_DOG_OTGR_PLAN_CODE
+        {
+            get => Entity.SFT_DOG_OTGR_PLAN_CODE;
+            set
+            {
+                if (Entity.SFT_DOG_OTGR_PLAN_CODE == value) return;
+                Entity.SFT_DOG_OTGR_PLAN_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_NACENKA_DILERA
+        {
+            get => Entity.SFT_NACENKA_DILERA;
+            set
+            {
+                if (Entity.SFT_NACENKA_DILERA == value) return;
+                Entity.SFT_NACENKA_DILERA = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double? SFT_PROCENT_ZS_RASHODOV
+        {
+            get => Entity.SFT_PROCENT_ZS_RASHODOV;
+            set
+            {
+                if (Entity.SFT_PROCENT_ZS_RASHODOV == value) return;
+                Entity.SFT_PROCENT_ZS_RASHODOV = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_SUMMA_K_OPLATE_KONTR_CRS
+        {
+            get => Entity.SFT_SUMMA_K_OPLATE_KONTR_CRS;
+            set
+            {
+                if (Entity.SFT_SUMMA_K_OPLATE_KONTR_CRS == value) return;
+                Entity.SFT_SUMMA_K_OPLATE_KONTR_CRS = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_SHPZ_DC
+        {
+            get => Entity.SFT_SHPZ_DC;
+            set
+            {
+                if (Entity.SFT_SHPZ_DC == value) return;
+                Entity.SFT_SHPZ_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SFT_STRANA_PROIS
+        {
+            get => Entity.SFT_STRANA_PROIS;
+            set
+            {
+                if (Entity.SFT_STRANA_PROIS == value) return;
+                Entity.SFT_STRANA_PROIS = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SFT_N_GRUZ_DECLAR
+        {
+            get => Entity.SFT_N_GRUZ_DECLAR;
+            set
+            {
+                if (Entity.SFT_N_GRUZ_DECLAR == value) return;
+                Entity.SFT_N_GRUZ_DECLAR = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public double? SFT_TARA_MEST
+        {
+            get => Entity.SFT_TARA_MEST;
+            set
+            {
+                if (Entity.SFT_TARA_MEST == value) return;
+                Entity.SFT_TARA_MEST = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public decimal? SFT_TARA_DC
+        {
+            get => Entity.SFT_TARA_DC;
+            set
+            {
+                if (Entity.SFT_TARA_DC == value) return;
+                Entity.SFT_TARA_DC = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public short? SFT_TARA_FLAG
+        {
+            get => Entity.SFT_TARA_FLAG;
+            set
+            {
+                if (Entity.SFT_TARA_FLAG == value) return;
+                Entity.SFT_TARA_FLAG = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public byte[] TSTAMP
+        {
+            get => Entity.TSTAMP;
+            set
+            {
+                if (Entity.TSTAMP == value) return;
+                Entity.TSTAMP = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string SFT_COUNTRY_CODE
+        {
+            get => Entity.SFT_COUNTRY_CODE;
+            set
+            {
+                if (Entity.SFT_COUNTRY_CODE == value) return;
+                Entity.SFT_COUNTRY_CODE = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string OLD_NOM_NOMENKL
+        {
+            get => Entity.OLD_NOM_NOMENKL;
+            set
+            {
+                if (Entity.OLD_NOM_NOMENKL == value) return;
+                Entity.OLD_NOM_NOMENKL = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string OLD_NOM_NAME
+        {
+            get => Entity.OLD_NOM_NAME;
+            set
+            {
+                if (Entity.OLD_NOM_NAME == value) return;
+                Entity.OLD_NOM_NAME = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string OLD_OVERHEAD_NAME
+        {
+            get => Entity.OLD_OVERHEAD_NAME;
+            set
+            {
+                if (Entity.OLD_OVERHEAD_NAME == value) return;
+                Entity.OLD_OVERHEAD_NAME = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string OLD_OVERHEAD_CRS_NAME
+        {
+            get => Entity.OLD_OVERHEAD_CRS_NAME;
+            set
+            {
+                if (Entity.OLD_OVERHEAD_CRS_NAME == value) return;
+                Entity.OLD_OVERHEAD_CRS_NAME = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string OLD_UNIT_NAME
+        {
+            get => Entity.OLD_UNIT_NAME;
+            set
+            {
+                if (Entity.OLD_UNIT_NAME == value) return;
+                Entity.OLD_UNIT_NAME = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_165 SD_165
+        {
+            get => Entity.SD_165;
+            set
+            {
+                if (Entity.SD_165 == value) return;
+                Entity.SD_165 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_175 SD_175
+        {
+            get => Entity.SD_175;
+            set
+            {
+                if (Entity.SD_175 == value) return;
+                Entity.SD_175 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_303 SD_303
+        {
+            get => Entity.SD_303;
+            set
+            {
+                if (Entity.SD_303 == value) return;
+                Entity.SD_303 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_83 SD_83
+        {
+            get => Entity.SD_83;
+            set
+            {
+                if (Entity.SD_83 == value) return;
+                Entity.SD_83 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_83 SD_831
+        {
+            get => Entity.SD_831;
+            set
+            {
+                if (Entity.SD_831 == value) return;
+                Entity.SD_831 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public SD_84 SD_84
+        {
+            get => Entity.SD_84;
+            set
+            {
+                if (Entity.SD_84 == value) return;
+                Entity.SD_84 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public VD_9 VD_9
+        {
+            get => Entity.VD_9;
+            set
+            {
+                if (Entity.VD_9 == value) return;
+                Entity.VD_9 = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public COUNTRY COUNTRY
+        {
+            get => Entity.COUNTRY;
+            set
+            {
+                if (Entity.COUNTRY == value) return;
+                Entity.COUNTRY = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public TD_84 Entity
+        {
+            get => myEntity;
+            set
+            {
+                if (myEntity == value) return;
+                myEntity = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public NomenklViewModel NomenklViewModel
+        {
+            get
+            {
+                return MainReferences.GetNomenkl(Entity.SFT_NEMENKL_DC);
+            }
+            set
+            {
+                if (Entity.SFT_NEMENKL_DC == value.DOC_CODE) return;
+                Entity.SFT_NEMENKL_DC = value.DOC_CODE;
+                RaisePropertyChanged();
+            }
+        }
+
+        public string NomenklNumber => NomenklViewModel?.NomenklNumber;
+        public bool IsUsluga => NomenklViewModel?.NOM_0MATER_1USLUGA == 1;
+        private decimal myShipped;
+        private decimal myRest;
+        /// <summary>
+        ///     ÐÑÐ³ÑÑÐ¶ÐµÐ½Ð¾
+        /// </summary>
+        public decimal Shipped
+        {
+            get => myShipped;
+            set
+            {
+                if (myShipped == value) return;
+                myShipped = value;
+                myRest = (decimal)(SFT_KOL - (double)myShipped);
+                RaisePropertyChanged();
+                RaisePropertyChanged(nameof(Rest));
+            }
+        }
+        /// <summary>
+        ///     Ð¾ÑÑÐ°ÑÐ¾Ðº Ð´Ð»Ñ Ð¾ÑÐ³ÑÑÐ·ÐºÐ¸ Ð¿Ð¾ ÑÑÐµÑÑ
+        /// </summary>
+        public decimal Rest
+        {
+            get => myRest;
+            set
+            {
+                if (myRest == value) return;
+                myRest = value;
+                RaisePropertyChanged();            }
+        }
+        /// <summary>
+        ///     ÑÐµÐºÑÑÐ¸Ðµ Ð¾ÑÑÐ°ÑÐºÐ¸ Ð½Ð° ÑÐºÐ»Ð°Ð´Ð°Ñ
+        /// </summary>
+        private decimal myCurrentRemains;
+        public decimal CurrentRemains
+        {
+            get => myCurrentRemains;
+            set
+            {
+                if (myCurrentRemains == value) return;
+                myCurrentRemains = value;
+                RaisePropertyChanged();
+            }
+        }
+
+        public virtual void Save(TD_84 doc)
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Save()
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Delete()
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Delete(Guid id)
+        {
+            throw new NotImplementedException();
+        }
+
+        public void Delete(decimal dc)
+        {
+            throw new NotImplementedException();
+        }
+
+        public void UpdateFrom(TD_84 ent)
+        {
+            CODE = ent.CODE;
+            SFT_TEXT = ent.SFT_TEXT;
+            SFT_NEMENKL_DC = ent.SFT_NEMENKL_DC;
+            SFT_KOL = ent.SFT_KOL;
+            SFT_ED_CENA = ent.SFT_ED_CENA;
+            SFT_ACCIZ = ent.SFT_ACCIZ;
+            SFT_NDS_PERCENT = ent.SFT_NDS_PERCENT;
+            SFT_SUMMA_NDS = ent.SFT_SUMMA_NDS;
+            SFT_SUMMA_K_OPLATE = ent.SFT_SUMMA_K_OPLATE;
+            SFT_STDP_DC = ent.SFT_STDP_DC;
+            SFT_UCHET_ED_IZM_DC = ent.SFT_UCHET_ED_IZM_DC;
+            SFT_KOMPLEKT = ent.SFT_KOMPLEKT;
+            SFT_NALOG_NA_PROD = ent.SFT_NALOG_NA_PROD;
+            SFT_DOG_OTGR_DC = ent.SFT_DOG_OTGR_DC;
+            SFT_DOG_OTGR_PLAN_CODE = ent.SFT_DOG_OTGR_PLAN_CODE;
+            SFT_NACENKA_DILERA = ent.SFT_NACENKA_DILERA;
+            SFT_PROCENT_ZS_RASHODOV = ent.SFT_PROCENT_ZS_RASHODOV;
+            SFT_SUMMA_K_OPLATE_KONTR_CRS = ent.SFT_SUMMA_K_OPLATE_KONTR_CRS;
+            SFT_SHPZ_DC = ent.SFT_SHPZ_DC;
+            SFT_STRANA_PROIS = ent.SFT_STRANA_PROIS;
+            SFT_N_GRUZ_DECLAR = ent.SFT_N_GRUZ_DECLAR;
+            SFT_TARA_MEST = ent.SFT_TARA_MEST;
+            SFT_TARA_DC = ent.SFT_TARA_DC;
+            SFT_TARA_FLAG = ent.SFT_TARA_FLAG;
+            TSTAMP = ent.TSTAMP;
+            SFT_COUNTRY_CODE = ent.SFT_COUNTRY_CODE;
+            OLD_NOM_NOMENKL = ent.OLD_NOM_NOMENKL;
+            OLD_NOM_NAME = ent.OLD_NOM_NAME;
+            OLD_OVERHEAD_NAME = ent.OLD_OVERHEAD_NAME;
+            OLD_OVERHEAD_CRS_NAME = ent.OLD_OVERHEAD_CRS_NAME;
+            OLD_UNIT_NAME = ent.OLD_UNIT_NAME;
+            SD_165 = ent.SD_165;
+            SD_175 = ent.SD_175;
+            SD_303 = ent.SD_303;
+            SD_83 = ent.SD_83;
+            SD_831 = ent.SD_831;
+            SD_84 = ent.SD_84;
+            VD_9 = ent.VD_9;
+            COUNTRY = ent.COUNTRY;
+            Id = ent.Id;
+            DocId = ent.DocId;
+        }
+
+        public void UpdateTo(TD_84 ent)
+        {
+            ent.CODE = CODE;
+            ent.SFT_TEXT = SFT_TEXT;
+            ent.SFT_NEMENKL_DC = SFT_NEMENKL_DC;
+            ent.SFT_KOL = SFT_KOL;
+            ent.SFT_ED_CENA = SFT_ED_CENA;
+            ent.SFT_ACCIZ = SFT_ACCIZ;
+            ent.SFT_NDS_PERCENT = SFT_NDS_PERCENT;
+            ent.SFT_SUMMA_NDS = SFT_SUMMA_NDS;
+            ent.SFT_SUMMA_K_OPLATE = SFT_SUMMA_K_OPLATE;
+            ent.SFT_STDP_DC = SFT_STDP_DC;
+            ent.SFT_UCHET_ED_IZM_DC = SFT_UCHET_ED_IZM_DC;
+            ent.SFT_KOMPLEKT = SFT_KOMPLEKT;
+            ent.SFT_NALOG_NA_PROD = SFT_NALOG_NA_PROD;
+            ent.SFT_DOG_OTGR_DC = SFT_DOG_OTGR_DC;
+            ent.SFT_DOG_OTGR_PLAN_CODE = SFT_DOG_OTGR_PLAN_CODE;
+            ent.SFT_NACENKA_DILERA = SFT_NACENKA_DILERA;
+            ent.SFT_PROCENT_ZS_RASHODOV = SFT_PROCENT_ZS_RASHODOV;
+            ent.SFT_SUMMA_K_OPLATE_KONTR_CRS = SFT_SUMMA_K_OPLATE_KONTR_CRS;
+            ent.SFT_SHPZ_DC = SFT_SHPZ_DC;
+            ent.SFT_STRANA_PROIS = SFT_STRANA_PROIS;
+            ent.SFT_N_GRUZ_DECLAR = SFT_N_GRUZ_DECLAR;
+            ent.SFT_TARA_MEST = SFT_TARA_MEST;
+            ent.SFT_TARA_DC = SFT_TARA_DC;
+            ent.SFT_TARA_FLAG = SFT_TARA_FLAG;
+            ent.TSTAMP = TSTAMP;
+            ent.SFT_COUNTRY_CODE = SFT_COUNTRY_CODE;
+            ent.OLD_NOM_NOMENKL = OLD_NOM_NOMENKL;
+            ent.OLD_NOM_NAME = OLD_NOM_NAME;
+            ent.OLD_OVERHEAD_NAME = OLD_OVERHEAD_NAME;
+            ent.OLD_OVERHEAD_CRS_NAME = OLD_OVERHEAD_CRS_NAME;
+            ent.OLD_UNIT_NAME = OLD_UNIT_NAME;
+            ent.SD_165 = SD_165;
+            ent.SD_175 = SD_175;
+            ent.SD_303 = SD_303;
+            ent.SD_83 = SD_83;
+            ent.SD_831 = SD_831;
+            ent.SD_84 = SD_84;
+            ent.VD_9 = VD_9;
+            ent.COUNTRY = COUNTRY;
+            ent.Id = Id;
+            ent.DocId = DocId;
+        }
+
+        public TD_84 DefaultValue()
+        {
+            return new TD_84
+            {
+                Id = Guid.NewGuid(),
+                DOC_CODE = -1,
+                CODE = -1
+            };
+        }
+
+        public List<TD_84> LoadList()
+        {
+            throw new NotImplementedException();
+        }
+
+        public EntityLoadCodition LoadCondition { get; set; }
+        public virtual TD_84 Load(decimal dc)
+        {
+            throw new NotImplementedException();
+        }
+
+        public virtual TD_84 Load(Guid id)
+        {
+            throw new NotImplementedException();
+        }
+    }
+    public class DataAnnotationsSFClientRowViewModel : DataAnnotationForFluentApiBase, IMetadataProvider<SFClientRowViewModel>
+    {
+        void IMetadataProvider<SFClientRowViewModel>.BuildMetadata(MetadataBuilder<SFClientRowViewModel> builder)
+        {
+            SetNotAutoGenerated(builder);
+            builder.Property(_ => _.NomenklViewModel).AutoGenerated().DisplayName("ÐÐ°Ð¸Ð¼ÐµÐ½Ð¾Ð²Ð°Ð½Ð¸Ðµ");
+            builder.Property(_ => _.NomNomenkl).AutoGenerated().DisplayName("ÐÐ¾Ð¼.â");
+            builder.Property(_ => _.IsUsluga).AutoGenerated().DisplayName("Ð£ÑÐ»ÑÐ³Ð°");
+            builder.Property(_ => _.SFT_KOL).AutoGenerated().DisplayName("ÐÐ¾Ð»-Ð²Ð¾");
+            builder.Property(_ => _.SFT_ED_CENA).AutoGenerated().DisplayName("Ð¦ÐµÐ½Ð°");
+            builder.Property(_ => _.SFT_SUMMA_K_OPLATE).AutoGenerated().DisplayName("Ð¡ÑÐ¼Ð¼Ð°");
+            builder.Property(_ => _.Shipped).AutoGenerated().DisplayName("ÐÑÐ³ÑÑÐ¶ÐµÐ½Ð¾");
+            builder.Property(_ => _.Rest).AutoGenerated().DisplayName("ÐÑÑÐ°ÑÐ¾Ðº");
+            builder.Property(_ => _.CurrentRemains).AutoGenerated().DisplayName("Ð¢ÐµÐºÑÑÐ¸Ðµ Ð¾ÑÑÐ°ÑÐºÐ¸");
+            builder.Property(_ => _.Note).AutoGenerated().DisplayName("ÐÑÐ¸Ð¼ÐµÑÐ°Ð½Ð¸Ðµ");
+            builder.Property(_ => _.SFT_NDS_PERCENT).AutoGenerated().DisplayName("ÐÐÐ¡");
+            //builder.Property(_ => _.Country).AutoGenerated().DisplayName("Ð¡ÑÑÐ°Ð½Ð°");
+        }
+    }
+}
\ No newline at end of file
diff --git a/GenerateDataContract/GenerateDataContract.csproj b/GenerateDataContract/GenerateDataContract.csproj
--- a/GenerateDataContract/GenerateDataContract.csproj
+++ b/GenerateDataContract/GenerateDataContract.csproj
@@ -89,8 +89,8 @@
   </ItemGroup>
   <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
   <PropertyGroup>
-    <PostBuildEvent>if $(ConfigurationName) == Debug (
-   xcopy /Y "$(TargetDir)*.*" "c:\Users\Vadim\WorkProject\KursTestProject\Utils\GenerateDto")</PostBuildEvent>
+    <PostBuildEvent>
+    </PostBuildEvent>
   </PropertyGroup>
   <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
        Other similar extension points exist, see Microsoft.Common.targets.
diff --git a/KursAM2v3/View/Finance/MutualAccountingSearchView.xaml.cs b/KursAM2v3/View/Finance/MutualAccountingSearchView.xaml.cs
--- a/KursAM2v3/View/Finance/MutualAccountingSearchView.xaml.cs
+++ b/KursAM2v3/View/Finance/MutualAccountingSearchView.xaml.cs
@@ -55,9 +55,6 @@
             //LayoutManager.Load(true);
         }
 
-        private void ButtonEdit_KeyDown(object sender, System.Windows.Input.KeyEventArgs e)
-        {
-
-        }
+        
     }
 }
\ No newline at end of file
diff --git a/KursAM2v3/View/KursReferences/AccessRightsView.xaml b/KursAM2v3/View/KursReferences/AccessRightsView.xaml
--- a/KursAM2v3/View/KursReferences/AccessRightsView.xaml
+++ b/KursAM2v3/View/KursReferences/AccessRightsView.xaml
@@ -17,7 +17,6 @@
                Content="{Binding DatabaseName, NotifyOnSourceUpdated=True}" Foreground="{Binding DatabaseColor}" />
         <dxlc:LayoutControl x:Name="MainLayoutControl">
             <dxlc:LayoutGroup Name="LayoutGroup1" dxlc:LayoutControl.AllowHorizontalSizing="True">
-
                 <DockPanel>
                     <dxe:CheckEdit DockPanel.Dock="Top"
                                    x:Name="CheckEdit" EditValue="{Binding Path=IsShowAll}">
diff --git a/KursAM2v3/View/Logistiks/UC/AddNomenklUC.xaml.cs b/KursAM2v3/View/Logistiks/UC/AddNomenklUC.xaml.cs
new file mode 100644
--- /dev/null
+++ b/KursAM2v3/View/Logistiks/UC/AddNomenklUC.xaml.cs
@@ -0,0 +1,43 @@
+ï»¿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using System.Windows;
+using System.Windows.Controls;
+using System.Windows.Data;
+using System.Windows.Documents;
+using System.Windows.Input;
+using System.Windows.Media;
+using System.Windows.Media.Imaging;
+using System.Windows.Navigation;
+using System.Windows.Shapes;
+using Core.ViewModel.Base;
+using LayoutManager;
+
+namespace KursAM2.View.Logistiks.UC
+{
+    /// <summary>
+    /// Interaction logic for AddNomenklUC.xaml
+    /// </summary>
+    public partial class AddNomenklUC : ILayout
+    {
+        public AddNomenklUC()
+        {
+            InitializeComponent();
+            LayoutManager = new LayoutManager.LayoutManager(GetType().Name, mainControl);
+            Loaded += UserControl_Loaded;
+            Unloaded += UserControl_Unloaded;
+        }
+        public LayoutManagerBase LayoutManager { get; set; }
+        private void UserControl_Loaded(object sender, RoutedEventArgs e)
+        {
+            LayoutManager.Load();
+        }
+
+        private void UserControl_Unloaded(object sender, RoutedEventArgs e)
+        {
+            LayoutManager.Save();
+        }
+    }
+}
diff --git a/VersionGenerate.pdb b/VersionGenerate.pdb
index b5440f71574e083e75a8c127420819eb971cb7e2..9c6a8a3c49ca8d4d483ad14e6325b530b0f405a3
GIT binary patch
literal 11776
zc%1E7U2Icj7=BMz$GZNo<Jg2@mJT7x2L0Ivb`8m3?KBOmV=fvemC+qeXWiP8(}J5J
z=BN>`G?;kf1s6cLP$C-93zSJO42i~g;f&sRWg>~ju*_iOYW01;@9WytGBX_1ZRcs<
zJm2~L|K9KC{lalYOQln>j5FX4w6!_IgO52Mb$LAY+NR(jAWZBJ51^a?jz%!BT9C~d
zSj+H%Ug;_rs35FgdnF$&1a(3X4#?%q$hllq<rXFb_XOp}f4wpOYX<MQywa`aZ-*pw
zPkb<W@uLqf2j0FqF>4*@xs;D12`R=;10AJa238=-=|AlY#rjX*<=DW=hcW(Z8@EOV
zy05L9mQM{rw*Q>z%$L3U-~ILack-!j{%t*d@>w}HEl;&#+?vqT?~NOChu*IXzwuWp
zq`cO7c!S92CH4Hp>kqkJ?&<pTo7X=+*D{r@@2_aX3@iy(OW45Lz}(E-3?1Y~=p*2d
z9Mw`Us7fX>c1%l06Ya-4B2TMYI-W{Ct|nD2no%PMwA82;O}LaafKo2Oah_l_pWtXA
z0qrVYly*@%m2BKGDv8ZMdn6rs_n{wuv2{&LOFh(6d=o6ZBhctRBJ#GS8*WBKSbpTy
zWvRJ=<p61<3tDAzPly35-UHC9S};I38czb*|Epw5w^u5}rSMwVDnB(ina-#Qa1`9G
zP(LjAekL&vP2iM8IyqmKa!d=xHGpOelS;y3xC}iJO|Yp$;ilV!_i7reUnlzQk@%a%
zPEkK9v#KQBL}EOcQh1xb$8R47ZblvzX&N!jeI;pdfx|gpJumHGHh<Oq+qFwWKZLGq
zvzR`=@X2A;T@YmR-7N8brsFl$yNYo&{DJJ0^8F{x_a(irY!Lod0G$TFhI~J=9l4q3
zrBl1mPwzmkNA^=X<Q|@f{v`57<RRo6GjsYu@l9>RHtHGV2a#VD{%?wSX9S-`ZbAR|
zkhdaVKz<ncQ(*e7UqRlE`~@-|4|O~Ev3@?3F6^vUXn;<XHWVLhf?@0nKWoz#oN+C%
zAEgi6Y*pZ(xOSW=GWyCaF9%p~R^7y~8YrwU<aVNTf`R`Ey2~|L+_N+{Z6-F}te<zm
zKW#pD3g;qWh7oCHz*gxB7`Q8F21kA$#%(6hA8s4&O=h&o;RC67GDG{zHWqGXargnC
z5w;ikd3JjU-rJY4f>BfH3K%eOH{mpKJuZj**?^Rw##H_tXq98t>;Gc!f6t+xyDy#`
z3ngPIa3}G4l?HcOQ{2z1(IcuhGM-Y#xJN8LuBP30Vh*Cq4HfPe6{4MG9nfV`+&mF<
z0owwF(J&q#mkp%jFIv3J?qdb(TQ)eW;2jf=06(|yK-p6ipYEocnCnKikVhe};%|;x
zI3Wg$?$#2Vf2BCI#JcDb)<x*px6jkF%M+wHJ3n*HN|0gk3$}^myvu|?J1aw)uLH%S
zHEUtLayhAJ6<eygGjA&uMJ?<^4oi`Hv2Oq0zyW-mFQd>q;6aHq;UtQVLiRhd=Vh@!
zccAP==>u-Zs0Xg5^bV9)TPtu?wE(|2*hM+(f!QmVir3wPwi)<$G*r3*1}cib0mBWE
AhyVZp

