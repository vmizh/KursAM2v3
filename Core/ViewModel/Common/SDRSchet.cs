using System.ComponentModel.DataAnnotations;
using Core.EntityViewModel;
using Core.Helper;
using Data;
using DevExpress.Mvvm.DataAnnotations;

namespace Core.ViewModel.Common
{
    /// <summary>
    ///     Счет доходов и расходов
    /// </summary>
    // ReSharper disable once InconsistentNaming
    [MetadataType(typeof(DataAnnotationsSDRSchet))]
    public class SDRSchet : SD_303ViewModel
    {
        public SDRSchet()
        {
        }

        public SDRSchet(SD_303 doc)
            : base(doc)
        {
        }

        public new string Name
        {
            get => Entity.SHPZ_NAME;
            set
            {
                if (Entity.SHPZ_NAME == value) return;
                Entity.SHPZ_NAME = value;
                RaisePropertyChanged();
            }
        }
        public new decimal DocCode
        {
            get => Entity.DOC_CODE;
            set
            {
                if (Entity.DOC_CODE == value) return;
                Entity.DOC_CODE = value;
                RaisePropertyChanged();
            }
        }

        public override string ToString()
        {
            return Name;
        }
    }

    public class DataAnnotationsSDRSchet : DataAnnotationForFluentApiBase, IMetadataProvider<SDRSchet>
    {
        void IMetadataProvider<SDRSchet>.BuildMetadata(MetadataBuilder<SDRSchet> builder)
        {
            SetNotAutoGenerated(builder);

            //builder.Property(_ => _.Entity).NotAutoGenerated();
            builder.Property(_ => _.Name).AutoGenerated().DisplayName("Наименование").Required();
            builder.Property(_ => _.SHPZ_SHIRF).AutoGenerated().DisplayName("Шифр").Required();
        }
    }
}