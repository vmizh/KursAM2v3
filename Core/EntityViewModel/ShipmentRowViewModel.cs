using System.ComponentModel.DataAnnotations;
using Core.Helper;
using Data;
using DevExpress.Mvvm.DataAnnotations;

namespace Core.EntityViewModel
{
    [MetadataType(typeof(DataAnnotationsShipmentRowViewModel))]
    public class ShipmentRowViewModel : TD_24ViewModel
    {
        public ShipmentRowViewModel()
        {
            Entity = DefaultValue();
        }

        public ShipmentRowViewModel(TD_24 entity)
        {
            Entity = entity ?? DefaultValue();
        }

        public new Nomenkl Nomenkl
        {
            get => MainReferences.GetNomenkl(Entity.DDT_NOMENKL_DC);
            set
            {
                if (Entity.DDT_NOMENKL_DC == value.DOC_CODE) return;
                Entity.DDT_NOMENKL_DC = value.DOC_CODE;
                RaisePropertyChanged();
            }
        }
        public string NomenklNom => Nomenkl?.NomenklNumber;
        public override Unit Unit => Nomenkl?.Unit;
    }

    public class DataAnnotationsShipmentRowViewModel : DataAnnotationForFluentApiBase,
        IMetadataProvider<ShipmentRowViewModel>
    {
        void IMetadataProvider<ShipmentRowViewModel>.BuildMetadata(MetadataBuilder<ShipmentRowViewModel> builder)
        {
            SetNotAutoGenerated(builder);
            builder.Property(_ => _.InvoiceProvider).NotAutoGenerated();
            builder.Property(_ => _.InvoiceProviderRow).NotAutoGenerated();
            builder.Property(_ => _.Currency).NotAutoGenerated();
            builder.Property(_ => _.Diler).NotAutoGenerated();
            builder.Property(_ => _.SDRSchet).NotAutoGenerated();
            builder.Property(_ => _.Nomenkl).AutoGenerated().DisplayName("Наименование");
            builder.Property(_ => _.NomenklNom).AutoGenerated().DisplayName("№");
            builder.Property(_ => _.DDT_KOL_RASHOD).AutoGenerated().DisplayName("Кол-во");
            builder.Property(_ => _.Unit).AutoGenerated().DisplayName("Ед.изм.");
        }
    }
}