using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Core.Helper;
using Core.ViewModel.Base;
using Data;
using DevExpress.Mvvm.DataAnnotations;

namespace Core.EntityViewModel.Periods
{
    [MetadataType(typeof(DataAnnotationsPERIOD_GROUPS_USERSViewModel))]
    public class PERIOD_GROUPS_USERSViewModel : RSViewModelBase, IEntity<PERIOD_GROUPS_USERS>
    {
        private PERIOD_GROUPS_USERS myEntity;

        public PERIOD_GROUPS_USERSViewModel()
        {
            Entity = new PERIOD_GROUPS_USERS();
        }

        public PERIOD_GROUPS_USERSViewModel(PERIOD_GROUPS_USERS entity)
        {
            Entity = entity ?? new PERIOD_GROUPS_USERS();
        }

        public override string Name
        {
            set
            {
                if (Entity.EXT_USERS.USR_NICKNAME == value) return;
                Entity.EXT_USERS.USR_NICKNAME = value;
                RaisePropertyChanged();
            }
            get => Entity.EXT_USERS.USR_NICKNAME;
        }

        public override Guid Id
        {
            get => Entity.ID;
            set
            {
                if (Entity.ID == value) return;
                Entity.ID = value;
                RaisePropertyChanged();
            }
        }

        public int USER_ID
        {
            get => Entity.USER_ID;
            set
            {
                if (Entity.USER_ID == value) return;
                Entity.USER_ID = value;
                RaisePropertyChanged();
            }
        }

        public Guid GROUP_ID
        {
            get => Entity.GROUP_ID;
            set
            {
                if (Entity.GROUP_ID == value) return;
                Entity.GROUP_ID = value;
                RaisePropertyChanged();
            }
        }

        public EXT_USERS EXT_USERS
        {
            get => Entity.EXT_USERS;
            set
            {
                if (Entity.EXT_USERS == value) return;
                Entity.EXT_USERS = value;
                RaisePropertyChanged();
            }
        }

        public PERIOD_GROUPS PERIOD_GROUPS
        {
            get => Entity.PERIOD_GROUPS;
            set
            {
                if (Entity.PERIOD_GROUPS == value) return;
                Entity.PERIOD_GROUPS = value;
                RaisePropertyChanged();
            }
        }

        public PERIOD_GROUPS_USERS Entity
        {
            get => myEntity;
            set
            {
                if (myEntity == value) return;
                myEntity = value;
                RaisePropertyChanged();
            }
        }

        public EntityLoadCodition LoadCondition { get; set; }

        public List<PERIOD_GROUPS_USERS> LoadList()
        {
            throw new NotImplementedException();
        }

        public bool IsAccessRight { get; set; }

        public virtual PERIOD_GROUPS_USERS Load(decimal dc)
        {
            throw new NotImplementedException();
        }

        public virtual PERIOD_GROUPS_USERS Load(Guid id)
        {
            throw new NotImplementedException();
        }

        public virtual void Save(PERIOD_GROUPS_USERS doc)
        {
            throw new NotImplementedException();
        }

        public void Save()
        {
            throw new NotImplementedException();
        }

        public void Delete()
        {
            throw new NotImplementedException();
        }

        public void Delete(Guid id)
        {
            throw new NotImplementedException();
        }

        public void Delete(decimal dc)
        {
            throw new NotImplementedException();
        }

        public void UpdateFrom(PERIOD_GROUPS_USERS ent)
        {
            Id = ent.ID;
            USER_ID = ent.USER_ID;
            GROUP_ID = ent.GROUP_ID;
            EXT_USERS = ent.EXT_USERS;
            PERIOD_GROUPS = ent.PERIOD_GROUPS;
        }

        public void UpdateTo(PERIOD_GROUPS_USERS ent)
        {
            ent.ID = Id;
            ent.USER_ID = USER_ID;
            ent.GROUP_ID = GROUP_ID;
            ent.EXT_USERS = EXT_USERS;
            ent.PERIOD_GROUPS = PERIOD_GROUPS;
        }

        public PERIOD_GROUPS_USERS DefaultValue()
        {
            throw new NotImplementedException();
        }
    }

    public class DataAnnotationsPERIOD_GROUPS_USERSViewModel : DataAnnotationForFluentApiBase,
        IMetadataProvider<PERIOD_GROUPS_USERSViewModel>
    {
        void IMetadataProvider<PERIOD_GROUPS_USERSViewModel>.BuildMetadata(
            MetadataBuilder<PERIOD_GROUPS_USERSViewModel> builder)
        {
            SetNotAutoGenerated(builder);
            builder.Property(_ => _.Name).AutoGenerated().DisplayName("Пользователь");
        }
    }
}