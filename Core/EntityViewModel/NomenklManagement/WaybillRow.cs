using System.ComponentModel.DataAnnotations;
using Core.EntityViewModel.Invoices;
using Core.Helper;
using Data;
using DevExpress.Mvvm.DataAnnotations;

namespace Core.EntityViewModel.NomenklManagement
{
    /// <summary>
    ///     строки товарных накладных
    /// </summary>
    [MetadataType(typeof(WaybillRow_FluentAPI))]
    public class WaybillRow : TD_24ViewModel
    {
        private InvoiceClientRow mySchetLinkedRow;

        public WaybillRow()
        {
            Entity = new TD_24 {DOC_CODE = -1, CODE = 0};
        }

        public WaybillRow(TD_24 entity) : base(entity)
        {
            if (entity == null)
            {
                Entity = new TD_24 {DOC_CODE = -1, CODE = 0};
                return;
            }

            SchetLinkedRow = new InvoiceClientRow(entity.TD_84);
        }

        public InvoiceClientRow SchetLinkedRow
        {
            get => mySchetLinkedRow;
            set
            {
                if (mySchetLinkedRow == value) return;
                mySchetLinkedRow = value;
                RaisePropertyChanged();
            }
        }

        //public decimal? Price => SchetLinkedRow?.Price;
        //public decimal? Summa => SchetLinkedRow?.Summa;
        public string NomenklNumber => Nomenkl?.NomenklNumber;
        public bool IsUsluga => Nomenkl?.IsUsluga ?? false;
    }

    public class WaybillRow_FluentAPI : DataAnnotationForFluentApiBase, IMetadataProvider<WaybillRow>
    {
        void IMetadataProvider<WaybillRow>.BuildMetadata(
            MetadataBuilder<WaybillRow> builder)
        {
            SetNotAutoGenerated(builder);
            builder.Property(_ => _.SchetLinkedRow).NotAutoGenerated();
            builder.Property(_ => _.InvoiceProvider).NotAutoGenerated();
            builder.Property(_ => _.InvoiceProviderRow).NotAutoGenerated();
            builder.Property(_ => _.SDRSchet).NotAutoGenerated();
            builder.Property(_ => _.Diler).NotAutoGenerated();
            builder.Property(x => x.IsUsluga).NotAutoGenerated();
            builder.Property(_ => _.Currency).AutoGenerated().DisplayName("Валюта").ReadOnly();
            builder.Property(x => x.Nomenkl).AutoGenerated()
                .DisplayName("Наименование").ReadOnly();
            builder.Property(x => x.NomenklNumber).AutoGenerated()
                .DisplayName("Ном.№").ReadOnly();
            builder.Property(x => x.DDT_KOL_RASHOD).AutoGenerated()
                .DisplayName("Кол-во").DisplayFormatString("n2");
            //builder.Property(x => x.Price).AutoGenerated()
            //    .DisplayName("Цена").ReadOnly();
            //builder.Property(x => x.Summa).AutoGenerated()
            //    .DisplayName("Сумма").ReadOnly();
            builder.Property(x => x.Unit).AutoGenerated()
                .DisplayName("Ед.изм.").ReadOnly();
        }
    }
}