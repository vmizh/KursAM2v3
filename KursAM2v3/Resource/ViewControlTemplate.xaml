<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys">
    <DataTemplate x:Key="summaryTemplate" DataType="dxg:GridSummaryItem">
        <ContentControl>
            <dxg:GridSummaryItem
                FieldName="{Binding Path=(dxi:DependencyObjectExtensions.DataContext).FieldName, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                SummaryType="{Binding Path=(dxi:DependencyObjectExtensions.DataContext).Type, Mode=OneWay,RelativeSource={RelativeSource Self}}"
                DisplayFormat="{Binding Path=(dxi:DependencyObjectExtensions.DataContext).DisplayFormat, Mode=OneWay,RelativeSource={RelativeSource Self}}"
                Tag="{Binding Path=(dxi:DependencyObjectExtensions.DataContext).Key, Mode=OneWay,RelativeSource={RelativeSource Self}}" />
        </ContentControl>
    </DataTemplate>
    <ControlTemplate TargetType="{x:Type ButtonBase}"
                     x:Key="{themes:ButtonsThemeKey ResourceKey=ButtonTemplate, ThemeName=MetropolisLight}">
        <Grid>
            <Grid.Resources>
                <Style x:Key="PressedElementStyle" TargetType="{x:Type ContentControl}">
                    <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <Border Background="#FFB9B9B9" BorderBrush="#FFB9B9B9" BorderThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="pressed1"
                                             Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Glyph"
                                             Storyboard.TargetProperty="Opacity" To="0.25" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pressed2"
                                                           Storyboard.TargetProperty="Visibility">
                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                        <DiscreteObjectKeyFrame.Value>
                                            <Visibility>Visible</Visibility>
                                        </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto">
                    <!--BEGIN WPF-->
                    <ColumnDefinition.SharedSizeGroup>
                        <system:String>ComboBoxButton</system:String>
                    </ColumnDefinition.SharedSizeGroup>
                    <!--END WPF-->
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Border x:Name="DefaultState" Background="Transparent" BorderBrush="Transparent" BorderThickness="0,0,0,0"
                    Grid.ColumnSpan="1" />
            <Border x:Name="HoverState" Background="#FFB9B9B9" Grid.Column="0" Opacity="0" />
            <ContentControl Grid.Column="0" x:Name="pressed1" Style="{StaticResource PressedElementStyle}" Opacity="0" />
            <ContentControl Grid.Column="0" x:Name="pressed2" Style="{StaticResource PressedElementStyle}"
                            Visibility="Collapsed" />
            <Grid x:Name="Arrow" VerticalAlignment="Center" HorizontalAlignment="Center"
                  Grid.Column="0"
                  SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.7*" />
                    <ColumnDefinition Width="0.3*" MinWidth="18" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Glyph" Grid.ColumnSpan="2"
                                  Style="{DynamicResource {themes:ButtonsThemeKey ResourceKey=ButtonInfoContentStyle}}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=GlyphKind}" Value="User">
                <Setter TargetName="Glyph" Property="Style"
                        Value="{DynamicResource {themes:ButtonsThemeKey ResourceKey=UserButtonInfoContentStyle}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=GlyphKind}" Value="None">
                <Setter TargetName="Glyph" Property="Style"
                        Value="{DynamicResource {themes:ButtonsThemeKey ResourceKey=NoneButtonInfoContentStyle}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=DataPresenterTemplate, IsThemeIndependent=True}"
                     TargetType="{x:Type dxg:DataPresenter}">
        <Border Background="#FFFFFFFF">
            <Grid>
                <ContentPresenter />
                <TextBlock Text="Ничего не найдено" 
                           x:Name="PART_NoData" Visibility="Collapsed" 
                           VerticalAlignment="Center" 
                           HorizontalAlignment="Center" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Path=(dxg:DataControlBase.ActiveView).Grid.ItemsSource, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter TargetName="PART_NoData" Property="Visibility" Value="Visible" />
                </DataTrigger>-->
            <DataTrigger Binding="{Binding Path=(dxg:DataControlBase.ActiveView).Grid.ItemsSource.Count, RelativeSource={RelativeSource Self}}" Value="0">
                <Setter TargetName="PART_NoData" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="dxg:TableView">
        <Setter Property = "EnableImmediatePosting" Value="True"/>
        <Setter Property = "ShowAutoFilterRow" Value="True"/>
    </Style>
    <Style TargetType="dxg:TreeListView">
        <Setter Property = "EnableImmediatePosting" Value="True"/>
    </Style>
    <Style x:Key="FocusedColumnStyle" TargetType="dxg:LightweightCellEditor" 
               BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=LightweightCellStyle}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Column.Tag}" Value="True">
                <Setter Property="Background" Value="Gainsboro" />
            </DataTrigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="LightBlue" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="dxg:LightweightCellEditor" BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=LightweightCellStyle}}">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="LightBlue" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--<Style TargetType="dxg:RowControl">
            <Style.Triggers>
                <Trigger Property="dxg:DataViewBase.IsFocusedRow" Value="True">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
    </Style>-->
    <!--<Style TargetType="dxg:RowControl">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gainsboro"/>
            </Trigger>
            <Trigger Property="IsFocused" Value ="True">
                <Setter Property="Background" Value="Gray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>-->
</ResourceDictionary>