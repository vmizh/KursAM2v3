using System;
using System.Linq;
using System.Windows;
using DevExpress.Xpf.Grid;
using Helper;
using KursAM2.ViewModel.Management;
using KursDomain;
using LayoutManager;

namespace KursAM2.View.Management.ProfitAndLossesControls
{
    /// <summary>
    ///     Interaction logic for CurrencyConvertView.xaml
    /// </summary>
    public partial class CurrencyConvertView : ILayout
    {
        public CurrencyConvertView()
        {
            InitializeComponent();
            LayoutManager = new LayoutManager.LayoutManager(GlobalOptions.KursSystem(),
                "KursAM2.View.Management.ProfitAndLossesControls.CurrencyConvertView",
                GridControlCurrencyConvert);
        }

        public LayoutManager.LayoutManager LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }

        public void SaveLayout()
        {
            if (DataContext is ProfitAndLossesWindowViewModel2 dtx && dtx.Extend.Count > 0 &&
                dtx.Extend.Any(_ => _.ParentId == Guid.Parse("{A938446C-AB19-45C3-8DFD-0F24AB08DF49}")))
                LayoutManager.Save();
        }

        private void GridControlCurrencyConvert_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
        }

        private void GridControlCurrencyConvert_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            var i = 0;
            foreach (var b in GridControlCurrencyConvert.Bands)
            {
                b.Name = "Band_" + i;
                i++;
            }

            if (DataContext is not ProfitAndLossesWindowViewModel2 dtx) return;
            if (dtx.ExtendActual.Count > 0) 
                LayoutManager.Load(true);
            var sums = GridControlCurrencyConvert.TotalSummary.GetForName("Rate");
            if (sums.Any() )
                GridControlCurrencyConvert.TotalSummary.Remove(sums.First());
        }
    }
}
