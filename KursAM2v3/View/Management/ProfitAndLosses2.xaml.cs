using System;
using System.ComponentModel;
using System.Windows;
using System.Windows.Media;
using DevExpress.Xpf.Core;
using DevExpress.Xpf.Grid;
using DevExpress.Xpf.WindowsUI.Navigation;
using KursAM2.View.Behaviors;
using KursAM2.ViewModel.Management;
using LayoutManager;

namespace KursAM2.View.Management
{
    /// <summary>
    ///     Interaction logic for ProfitAndLosses2.xaml
    /// </summary>
    public partial class ProfitAndLosses2 : ILayout
    {
        public ProfitAndLosses2()
        {
            InitializeComponent();
            LayoutManager = new LayoutManager.LayoutManager(GetType().Name, this, mainLayoutControl);
            Closing += OnClosing;
            Loaded += ProfitAndLosses_Loaded;
        }

        private void ProfitAndLosses_Loaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Load();
        }

        private void OnClosing(object sender, CancelEventArgs cancelEventArgs)
        {
            LayoutManager.Save();
        }

        public object CurrentDetailView { set; get; }

        private void GridRate_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            //throw new NotImplementedException();
        }
        public void NavigateTo(Type view)
        {
            INavigator navigator = new FrameProfitNavigator();
            navigator.Navigate(view);
        }

        public void ResetCurrencyFields()
        {
        }

        private void Profit_NavigationFrame_OnNavigated(object sender, NavigationEventArgs e)
        {
            CurrentDetailView = e.Content;
        }
        private void LayoutTabs_OnSelectedTabChildChanged(object sender, ValueChangedEventArgs<FrameworkElement> e)
        {
            if (!(DataContext is ProfitAndLossesWindowViewModel2 ctx)) return;
            if (e.NewValue.Name == "LayoutGroupBalans")
            {
                ctx.UpdateExtend();
                dateStartBorder.BorderThickness = new Thickness(1, 1, 1, 1);
                dateEndBorder.BorderThickness = new Thickness(1, 1, 1, 1);
                dateStartBorder.BorderBrush = Brushes.Black;
                dateEndBorder.BorderBrush = Brushes.Black;
            }
            if (e.NewValue.Name == "LayoutGroupFact")
            {
                ctx.UpdateExtend2();
                dateStartBorder.BorderThickness = new Thickness(2, 2, 2, 2);
                dateEndBorder.BorderThickness = new Thickness(2, 2, 2, 2);
                dateStartBorder.BorderBrush = Brushes.Red;
                dateEndBorder.BorderBrush = Brushes.Red;
            }
        }

        private void GridControlMain_OnSelectedItemChanged(object sender, SelectedItemChangedEventArgs e)
        {
            //if (!(DataContext is ProfitAndLossesWindowViewModel2 ctx)) return;
            //if (e.NewItem is ProfitAndLossesMainRowViewModel v) ctx.UpdateExtend(v.Id);
            //if (!(e.NewItem is ProfitAndLossesMainRowViewModel item))
            //{
            //    col124.Visible = false;
            //    return;
            //}
            //col124.Visible = item.Name == "Финансовые операции";

        }

        private void GridControlMain_OnSelectedItemChanged2(object sender, SelectedItemChangedEventArgs e)
        {
            //if (!(DataContext is ProfitAndLossesWindowViewModel2 ctx)) return;
            //if (e.NewItem is ProfitAndLossesMainRowViewModel v) ctx.UpdateExtend2(v.Id);
            //if (!(e.NewItem is ProfitAndLossesMainRowViewModel item))
            //{
            //    col124.Visible = false;
            //    return;
            //}
            //col124.Visible = item.Name == "Финансовые операции";
        }

        public LayoutManagerBase LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }
    }
}