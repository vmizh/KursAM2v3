using System;
using System.Windows;
using System.Windows.Media;
using DevExpress.Xpf.Core;
using DevExpress.Xpf.Grid;
using KursAM2.ViewModel.Management;
using KursDomain;

namespace KursAM2.View.Management
{
    /// <summary>
    ///     Interaction logic for ProfitAndLosses2.xaml
    /// </summary>
    public partial class ProfitAndLosses2
    {
        public ProfitAndLosses2()
        {
            InitializeComponent();
            LayoutManager = new LayoutManager.LayoutManager(GlobalOptions.KursSystem(), "ProfitAndLosses.Main", this,
                mainLayoutControl);
            //Closing += OnClosing;
            //Loaded += ProfitAndLosses_Loaded;
        }

        public Guid FormId { set; get; } = Guid.Empty;

        public LayoutManager.LayoutManager LayoutManager { get; set; }

        private void GridRate_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
        }

        private void LayoutTabs_OnSelectedTabChildChanged(object sender, ValueChangedEventArgs<FrameworkElement> e)
        {
            if (!(DataContext is ProfitAndLossesWindowViewModel2 ctx)) return;
            switch (e.NewValue.Name)
            {
                case "LayoutGroupBalans":
                    ctx.UpdateExtend();
                    dateStartBorder.BorderThickness = new Thickness(1, 1, 1, 1);
                    dateEndBorder.BorderThickness = new Thickness(1, 1, 1, 1);
                    dateStartBorder.BorderBrush = Brushes.Black;
                    dateEndBorder.BorderBrush = Brushes.Black;
                    break;
                case "LayoutGroupFact":
                    ctx.UpdateExtend2();
                    dateStartBorder.BorderThickness = new Thickness(2, 2, 2, 2);
                    dateEndBorder.BorderThickness = new Thickness(2, 2, 2, 2);
                    dateStartBorder.BorderBrush = Brushes.Red;
                    dateEndBorder.BorderBrush = Brushes.Red;
                    break;
            }
        }

        private void TreeList_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
        }

        private void TreeList_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            var i = 0;
            foreach (var b in treeListMain.Bands)
            {
                b.Name = "Band_" + i;
                i++;
            }

            var j = 0;
            foreach (var b in treeListMainNach1.Bands)
            {
                b.Name = "Band_" + j;
                j++;
            }
        }
    }
}
