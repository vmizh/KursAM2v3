using System;
using System.ComponentModel;
using System.Linq;
using System.Windows;
using Core;
using Core.EntityViewModel.CommonReferences;
using Core.Helper;
using Core.WindowsManager;
using DevExpress.Data;
using DevExpress.Xpf.Core;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using KursAM2.ViewModel.Management.Projects;
using KursDomain;
using KursDomain.Documents.CommonReferences;
using KursDomain.Documents.Currency;
using LayoutManager;

namespace KursAM2.View.Management
{
    public partial class ProjectsView : ILayout
    {
        public ProjectsView()
        {
            InitializeComponent(); 
            LayoutManager = new LayoutManager.LayoutManager(GlobalOptions.KursSystem(), GetType().Name, this, mainLayoutControl);
            Loaded += ProjectsView_Loaded;
            Closing += ProjectsView_Closing;
        }

        public LayoutManager.LayoutManager LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }
        public void SaveLayout()
        {
            LayoutManager.Save();
        }

        private void ProjectsView_Closing(object sender, CancelEventArgs e)
        {
            LayoutManager.Save();
        }

        private void ProjectsView_Loaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Load();
        }

        private void GridProjects_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
        }

        private void GridProjects_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            var k = 0;
            foreach (var column in gridProjects.Bands)
                column.Name = "band" + k++;
            gridProjects.TotalSummary.Clear();
            foreach (var col in gridProjects.Columns)
            {
                col.ReadOnly = true;
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?))
                {
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = false,
                        DisplayFormat = "n2"
                    };
                    var summary = new TreeListSummaryItem
                    {
                        SummaryType = SummaryItemType.Sum,
                        ShowInColumn = col.FieldName,
                        DisplayFormat = "{0:n2}",
                        FieldName = col.FieldName
                    };
                    gridProjects.TotalSummary.Add(summary);
                }
            }
        }

        private void TreePeriods_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            e.Column.ReadOnly = true;
        }

        private void TreePeriods_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            foreach (var col in treePeriods.Columns)
            {
                col.ReadOnly = true;
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?))
                {
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = false,
                        DisplayFormat = "n2",
                        MaskUseAsDisplayFormat = true
                    };
                }
            }
        }

        private void GridDocuments_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            if (e.Column.Name == "IsSelected")
                e.Column.Visible = false;
        }

        private void GridDocuments_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            gridDocuments.TotalSummary.Clear();
            foreach (var col in gridDocuments.Columns)
            {
                if (col.Name != "ConfirmedSum") col.ReadOnly = true;
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?))
                {
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = false,
                        DisplayFormat = "n2"
                    };
                    if (col.Name != "ConfirmedSum" && col.Name != "Sum")
                    {
                        var summary = new GridSummaryItem
                        {
                            SummaryType = SummaryItemType.Sum,
                            ShowInColumn = col.FieldName,
                            DisplayFormat = "{0:n2}",
                            FieldName = col.FieldName
                        };
                        gridDocuments.TotalSummary.Add(summary);
                    }
                }
            }
            gridExtend.TotalSummary.Clear();
            foreach (var col in gridExtend.Columns)
            {
                col.ReadOnly = true;
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?))
                {
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = false,
                        DisplayFormat = "n2"
                    };
                    var summary = new GridSummaryItem
                    {
                        SummaryType = SummaryItemType.Sum,
                        ShowInColumn = col.FieldName,
                        DisplayFormat = "{0:n2}",
                        FieldName = col.FieldName
                    };
                    gridExtend.TotalSummary.Add(summary);
                }
            }
        }

        private void TableViewDocuments_OnCellValueChanged(object sender, CellValueChangedEventArgs e)
        {
            var dtx = DataContext as ProjectWindowViewModel;
            if (dtx == null || dtx.CurrentDocument == null) return;
            MultyCurrencyHelper.SetCurrencyValue(dtx.CurrentDocument.ConfirmedSum,
                dtx.CurrentDocument.Currency, dtx.CurrentDocument, dtx.CurrentDocument.ProfitOrLossType);
            using (var ctx = GlobalOptions.GetEntities())
            {
                try
                {
                    var d = ctx.ProjectsDocs.FirstOrDefault(_ => _.Id == dtx.CurrentDocument.Id);
                    if (d == null) return;
                    d.FactCRSSumma = dtx.CurrentDocument.ConfirmedSum;
                    ctx.SaveChanges();
                }
                catch (Exception ex)
                {
                    WindowManager.ShowError(ex, "Ошибка в методе RefreshData");
                }
            }
        }

        private void GridDocuments_OnCurrentItemChanged(object sender, CurrentItemChangedEventArgs e)
        {
            if (!(e.NewItem is ProjectDocumentViewModel item)) return;
            if (item.DocType == DocumentType.Bank || item.DocType == DocumentType.CashIn ||
                item.DocType == DocumentType.CashOut)
            {
                var col = gridDocuments.Columns.FirstOrDefault(_ => _.FieldName == "ConfirmedSum");
                if (col == null) return;
                col.ReadOnly = false;
            }
            else
            {
                var col = gridDocuments.Columns.FirstOrDefault(_ => _.FieldName == "ConfirmedSum");
                if (col == null) return;
                col.ReadOnly = true;
            }
        }
    }
}
