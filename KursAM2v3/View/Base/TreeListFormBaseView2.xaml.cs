using System.ComponentModel;
using System.Windows;
using DevExpress.Data;
using DevExpress.Xpf.Core;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using KursAM2.ViewModel.Reference;
using KursDomain;

namespace KursAM2.View.Base
{
    /// <summary>
    ///     Interaction logic for GridFormBaseView.xaml
    /// </summary>
    public partial class TreeListFormBaseView2
    {
        public TreeListFormBaseView2()
        {
            InitializeComponent(); 
            ApplicationThemeHelper.ApplicationThemeName = Theme.MetropolisLightName;
            //Loaded += TreeListFormBaseView_Loaded;
            //Closing += TreeListFormBaseView_Closing;
        }

        public LayoutManager.LayoutManager LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }

        public void SaveLayout()
        {
            LayoutManager.Save();
        }

        private void TreeListFormBaseView_Closing(object sender, CancelEventArgs e)
        {
            LayoutManager.Save();
        }

        private void TreeListFormBaseView_Loaded(object sender, RoutedEventArgs e)
        {
            if (LayoutManager == null)
                LayoutManager = new LayoutManager.LayoutManager(GlobalOptions.KursSystem(),GetType().Name + "." + (LayoutManagerName ?? "base"),
                    this, gridDocuments);
            LayoutManager.Load();
        }

        private void GridDocuments_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            var seteditor = DataContext as ILayoutFluentSetEditors;
            seteditor?.SetTreeListColumn((TreeListColumn)e.Column);
        }

        private void GridDocuments_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            foreach (var c in gridDocuments.Columns)
                if (c.EditSettings == null)
                    c.EditSettings = new TextEditSettings
                    {
                        SelectAllOnMouseUp = true
                    };
            gridDocuments.TotalSummary.Clear();
            foreach (var col in gridDocuments.Columns)
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?))
                {
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = false,
                        DisplayFormat = "n2"
                    };
                    var summary = new TreeListSummaryItem
                    {
                        SummaryType = SummaryItemType.Sum,
                        ShowInColumn = col.FieldName,
                        DisplayFormat = "{0:n2}",
                        FieldName = col.FieldName
                    };
                    gridDocuments.TotalSummary.Add(summary);
                }
        }

        private void GridControlUsers_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
        }
    }
}
