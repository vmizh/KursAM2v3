using System.ComponentModel;
using System.Windows;
using DevExpress.Data;
using DevExpress.Xpf.Core;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using KursDomain;
using LayoutManager;

namespace KursAM2.View.Base
{
    /// <summary>
    ///     Interaction logic for GridFormBaseView.xaml
    /// </summary>
    public partial class GridFormBaseView : ILayout
    {
        public GridFormBaseView()
        {
            InitializeComponent(); 
            
            Loaded += GridFormBaseView_Loaded;
            Closing += GridFormBaseView_Closing;
        }

        private void GridFormBaseView_Closing(object sender, CancelEventArgs e)
        {
            LayoutManager.Save();
        }

        private void GridFormBaseView_Loaded(object sender, RoutedEventArgs e)
        {
            if(LayoutManager == null)
                LayoutManager = new LayoutManager.LayoutManager(GlobalOptions.KursSystem(),GetType().Name + "." + (LayoutManagerName ?? "base"), this, gridDocuments);
            LayoutManager.Load();
        }

        private void GridDocuments_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            foreach (var c in gridDocuments.Columns)
            {
                if(c.EditSettings == null) c.EditSettings = new TextEditSettings
                {
                    SelectAllOnMouseUp = true
                };
            }
            e.Column.Name = e.Column.FieldName;
            var dtx = DataContext as IOnAutoGeneratingColumn;
            dtx?.OnAutoGeneratingColumn(this,e);
        }

        private void GridDocuments_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            gridDocuments.TotalSummary.Clear();
            foreach (var col in gridDocuments.Columns)
            {
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?))
                {
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = false,
                        DisplayFormat = "n2"
                    };
                    var summary = new GridSummaryItem
                    {
                        SummaryType = SummaryItemType.Sum,
                        ShowInColumn = col.FieldName,
                        DisplayFormat = "{0:n2}",
                        FieldName = col.FieldName
                    };
                    gridDocuments.TotalSummary.Add(summary);
                }
            }
            var dtx = DataContext as IOnAutoGeneratingColumn;
            dtx?.OnAutoGeneratedColumns(this);

        }

        public LayoutManager.LayoutManager LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }
        public void SaveLayout()
        {
            LayoutManager.Save();
        }
    }
}
