using System;
using System.Collections.Generic;
using System.Windows;
using Core.ViewModel.Base;
using DevExpress.Xpf.Core;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using KursDomain.Documents.Cash;
using LayoutManager;

namespace KursAM2.View.DialogUserControl
{
    /// <summary>
    ///     Выбор кассовых ордеров
    /// </summary>
    public partial class CashOrdersForBankSelectDialogUC : IDataUserControl, ILayout
    {
        public CashOrdersForBankSelectDialogUC()
        {
            InitializeComponent();
            ApplicationThemeHelper.ApplicationThemeName = Theme.MetropolisLightName;
            LayoutManager = new LayoutManager.LayoutManager(GetType().Name, gridDocument);
            LayoutControl = gridDocument;
            Loaded += CashOrdersSelectDialogUC_Loaded;
            Unloaded += CashOrdersSelectDialogUC_Unloaded;
        }

        public string LayoutName { set; get; }
        public DependencyObject LayoutControl { get; }
        public LayoutManager.LayoutManager LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }

        public void SaveLayout()
        {
            LayoutManager.Save();
        }

        public void ResetLayot()
        {
            throw new NotImplementedException();
        }

        private void CashOrdersSelectDialogUC_Unloaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Save();
        }

        private void CashOrdersSelectDialogUC_Loaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Load();
        }

        private void GridDocument_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            e.Column.ReadOnly = true;
        }

        private void GridDocument_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            foreach (var c in gridDocument.Columns)
                if (c.EditSettings == null)
                    c.EditSettings = new TextEditSettings
                    {
                        SelectAllOnMouseUp = true
                    };
            foreach (var col in gridDocument.Columns)
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?))
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = false,
                        DisplayFormat = "n2"
                    };
        }

        private void gridViewDocument_RowDoubleClick(object sender, RowDoubleClickEventArgs e)
        {
            var dtx = DataContext as CashOrdersForBankSelectDialog;
            if (dtx == null) return;
            dtx.Ok(null);
        }
    }

    public delegate IEnumerable<CashOrder>
        SelectCashOrdersDelegate(decimal bankAccountdc, DateTime start, DateTime end);
}
