using System;
using System.Windows;
using Core.ViewModel.Base;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using KursDomain;
using LayoutManager;

namespace KursAM2.View.DialogUserControl
{
    /// <summary>
    ///     Interaction logic for StandartDialogSelectUC.xaml
    /// </summary>
    public partial class StandartDialogSelectUC : IDataUserControl, ILayout
    {
        public StandartDialogSelectUC(string layoutName)
        {
            LayoutName = layoutName;
            InitializeComponent();

            LayoutManager = new LayoutManager.LayoutManager(GlobalOptions.KursSystem(),
                LayoutName + "." + GetType().Name, gridControlSearch);
            LayoutControl = gridControlSearch;
            Loaded += CashSelectDialogUC_Loaded;
            Unloaded += CashSelectDialogUC_Unloaded;
        }

        public string LayoutName { set; get; }
        public DependencyObject LayoutControl { get; }
        public LayoutManager.LayoutManager LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }

        public void SaveLayout()
        {
            LayoutManager.Save();
        }

        

        private void CashSelectDialogUC_Unloaded(object sender, RoutedEventArgs e)
        {
            if (string.IsNullOrEmpty(LayoutName))
                throw new NullReferenceException("LayoutName не может быть пустым");
            LayoutManager.Save();
        }

        private void CashSelectDialogUC_Loaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Load();
        }

        private void GridControlSearch_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            e.Column.ReadOnly = e.Column.FieldName != "IsSelected";
        }

        private void GridControlSearch_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            foreach (var c in gridControlSearch.Columns)
                if (c.EditSettings == null)
                    c.EditSettings = new TextEditSettings
                    {
                        SelectAllOnMouseUp = true
                    };
            foreach (var col in gridControlSearch.Columns)
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?))
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = false,
                        DisplayFormat = "n2"
                    };
        }

        private void GridViewDocument_OnRowDoubleClick(object sender, RowDoubleClickEventArgs e)
        {
            if (!(DataContext is RSWindowViewModelBase ctx)) return;
            ctx.DialogResult = true;
            ctx.Form?.Close();
        }
    }
}
