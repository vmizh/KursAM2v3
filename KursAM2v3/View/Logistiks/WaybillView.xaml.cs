using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Windows;
using DevExpress.Data;
using DevExpress.Xpf.Editors;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using KursAM2.ViewModel.Logistiks;
using LayoutManager;

namespace KursAM2.View.Logistiks
{
    /// <summary>
    ///     Расходная накладная для клиентов
    /// </summary>
    public partial class WaybillView : ILayout
    {
        public WaybillView()
        {
            InitializeComponent();
            LayoutManager = new LayoutManager.LayoutManager(GetType().Name, this, mainLayoutControl);
            Loaded += WaybillClientView_Loaded;
            Closing += WaybillClientView_Closing;
        }

        public LayoutManagerBase LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }

        private void WaybillClientView_Closing(object sender, CancelEventArgs e)
        {
            LayoutManager.Save();
        }

        private void WaybillClientView_Loaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Load();
        }

        private void PART_GridControlKontragent_Loaded(object sender, RoutedEventArgs e)
        {
            var grid = sender as GridControl;
            var spath = (string) Application.Current.Properties["DataPath"];
            grid?.SaveLayoutToXml($"{spath}\\{GetType().Name}.{@"KontragentLookUpEdit"}.xml");
        }

        private void PART_GridControlKontragent_Unloaded(object sender, RoutedEventArgs e)
        {
            if (!(sender is GridControl grid)) return;
            var spath = (string) Application.Current.Properties["DataPath"];
            if (!File.Exists($"{spath}\\{GetType().Name}.{@"KontragentLookUpEdit"}.xml")) return;
            grid.RestoreLayoutFromXml($"{spath}\\{GetType().Name}.{@"KontragentLookUpEdit"}.xml");
        }

        private void otvetsCombobox_ProcessNewValue(DependencyObject sender, ProcessNewValueEventArgs e)
        {
            if (e.DisplayText != string.Empty)
            {
                ((List<string>) otvetsCombobox.ItemsSource).Add(e.DisplayText);
                e.Handled = true;
            }
        }

        private void gridRows_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
        }

        private void gridRows_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            gridRows.TotalSummary.Clear();
            foreach (var col in gridRows.Columns)
            {
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?))
                {
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = true,
                        DisplayFormat = "n2"
                    };
                    var summary = new GridSummaryItem
                    {
                        SummaryType = SummaryItemType.Sum,
                        ShowInColumn = col.FieldName,
                        DisplayFormat = "{0:n2}",
                        FieldName = col.FieldName
                    };
                    gridRows.TotalSummary.Add(summary);
                }
            }
        }
    }
}