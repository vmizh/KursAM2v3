using System.ComponentModel;
using System.IO;
using System.Windows;
using System.Windows.Input;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using KursAM2.ViewModel.Finance.Invoices;
using LayoutManager;

namespace KursAM2.View.Finance.Invoices
{
    /// <summary>
    ///     Interaction logic for SearchDogovorForClientView.xaml
    /// </summary>
    public partial class SearchInvoiceClientView : ILayout
    {
        private readonly LayoutManagerGridAutoGenerationColumns resultGridControlLayout;
        public SearchInvoiceClientView()
        {
            InitializeComponent();
            LayoutManager = new LayoutManager.LayoutManager(GetType().Name, this,null);
            resultGridControlLayout = new LayoutManagerGridAutoGenerationColumns(GetType().Name, resultGridControl);
            Loaded += SearchBaseView_Loaded;
            Closing += SearchBaseView_Closing;
        }

        public LayoutManagerBase LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }

        private void SearchBaseView_Closing(object sender, CancelEventArgs e)
        {
            LayoutManager.Save();
            resultGridControlLayout.Save();
        }

        private void SearchBaseView_Loaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Load();
        }

        private void BankGridControl_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            var columnsInfo = resultGridControlLayout.Load();
            resultGridControl.TotalSummary.Clear();
            foreach (var col in resultGridControl.Columns)
            {
                resultGridControlLayout.AutoGeneratedColumnSetProperties(columnsInfo.ColumnsInfo, col);
                col.ReadOnly = true;
            }
        }

        private void BankGridControl_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            e.Column.ReadOnly = true;
        }

        private void UIElement_OnKeyDown(object sender, KeyEventArgs e)
        {
            var dtx = DataContext as InvoiceClientSearchViewModel;
            if (e.Key == Key.Enter)
                // ReSharper disable once PossibleNullReferenceException
                dtx.GetSearchDocument(null);
        }
    }
}