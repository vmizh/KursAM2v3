
using System.Linq;
using System.Windows;
using Core;
using DevExpress.Data;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;

namespace KursAM2.View.Finance.AccruedAmount
{
    /// <summary>
    ///     Interaction logic for AccruedAmountOfSupplierView.xaml
    /// </summary>
    public partial class AccruedAmountOfSupplierView
    {
        public AccruedAmountOfSupplierView()
        {
            InitializeComponent();
        }

        private void GridRows_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            switch (e.Column.FieldName)
            {
                case "Summa":
                    e.Column.EditSettings = new CalcEditSettings
                    {
                        DisplayFormat = "n2",
                        MaskUseAsDisplayFormat = true
                    };
                    break;
                case "AccruedAmountType":
                    var typeEdit = new ComboBoxEditSettings
                    {
                        Name = "PART_Editor",
                        TextWrapping = TextWrapping.Wrap,
                        IsTextEditable = false,
                        AutoComplete = true,
                        ItemsSource = MainReferences.AccruedAmountTypes.Values.Where(_ => _.IsSupplier).ToList()
                    };
                    e.Column.EditSettings = typeEdit;
                    break;
            }
        }

        private void GridRows_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            gridRows.TotalSummary.Add(new GridSummaryItem
            {
                FieldName = "Summa",
                SummaryType = SummaryItemType.Sum,
                DisplayFormat = "n2"
            });
        }

        private void TableViewRows_OnCellValueChanging(object sender, CellValueChangedEventArgs e)
        {
            //gridRows.UpdateTotalSummary();
        }

        private void TableViewRows_OnCellValueChanged(object sender, CellValueChangedEventArgs e)
        {
            gridRows.UpdateTotalSummary();
        }
    }
}