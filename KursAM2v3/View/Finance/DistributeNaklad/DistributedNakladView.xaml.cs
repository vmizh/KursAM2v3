using System;
using System.Windows;
using DevExpress.Xpf.Editors;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using DevExpress.Xpf.LayoutControl;
using Helper;
using KursAM2.ViewModel.Finance.DistributeNaklad;
using LayoutManager;

namespace KursAM2.View.Finance.DistributeNaklad
{
    /// <summary>
    ///     Interaction logic for DistributedNakladView.xaml
    /// </summary>
    public partial class DistributedNakladView : ILayout
    {
        public DistributedNakladView()
        {
            InitializeComponent();
            Loaded += DistributedNakladView_Loaded;
            Unloaded += DistributedNakladView_Unloaded;
        }

        public LayoutManager.LayoutManager LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }

        private void DistributedNakladView_Unloaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Save();
        }

        private void DistributedNakladView_Loaded(object sender, RoutedEventArgs e)
        {
            LayoutManager = new LayoutManager.LayoutManager(GetType().Name, mainLayoutControl);
            LayoutManager.Load();
        }

        private void DataLayoutControlHeader_OnAutoGeneratingItem(object sender,
            DataLayoutControlAutoGeneratingItemEventArgs e)
        {
            var doc = DataContext as DistributeNakladViewModel;
            if (doc == null) return;
            var oldContent = e.Item.Content as BaseEdit;
            if (e.PropertyName.Contains("Command"))
            {
                e.Item.Visibility = Visibility.Hidden;
                return;
            }

            switch (e.PropertyName)
            {
                //case nameof(DistributeNakladViewModel.AvatarSource):
                //    var newContent = new ImageEdit();
                //    newContent.Height = 250;
                //    newContent.Width = 250;
                //    newContent.EditValuePostMode = PostMode.Immediate;
                //    newContent.EditValueChanged += NewContent_EditValueChanged;
                //    BindingHelper.CopyBinding(oldContent, newContent, BaseEdit.EditValueProperty);
                //    e.Item.Content = newContent;
                //    break;
            }

            ViewFluentHelper.SetModeUpdateProperties(doc, e.Item, e.PropertyName);
        }

        private void DataLayoutControlHeader_OnAutoGeneratedUI(object sender, EventArgs e)
        {
        }

        private void gridTovar_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            KursGridControlHelper.DefaultAutoGeneratingColumn(e.Column);
        }

        private void gridTovar_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            
        }

        private void gridNaklad_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            KursGridControlHelper.DefaultAutoGeneratingColumn(e.Column);
            e.Column.ReadOnly = true;
        }

        private void gridNaklad_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            
        }

        private void gridDistributeSumma_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            KursGridControlHelper.DefaultAutoGeneratingColumn(e.Column);
        }

        private void gridDistributeSumma_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            
        }
    }
}