using System.ComponentModel;
using System.Windows;
using DevExpress.Data;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using KursAM2.ViewModel.Finance;
using LayoutManager;

namespace KursAM2.View.Finance
{
    /// <summary>
    ///     Interaction logic for MutualAccountingInfo.xaml
    /// </summary>
    public partial class MutualAccountingInfo
    {
        public MutualAccountingInfo()
        {
            InitializeComponent();
            LayoutManager = new LayoutManager.LayoutManager(GetType().Name, this, mainLayoutControl);
            Closing += Form_Closing;
            Loaded += Form_Loaded;
        }

        
        public LayoutManagerBase LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }

        private void Form_Closing(object sender, CancelEventArgs e)
        {
            LayoutManager.Save();
        }

        private void Form_Loaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Load();
        }

        private void GridRows_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            // ReSharper disable once RedundantAssignment
            // ReSharper disable once LocalNameCapturedOnly
            var d = new MutualAcountingInfoCurrenciesViewModel();
            switch (e.Column.Name)
            {
                case nameof(d.Rate):
                    e.Column.EditSettings = new CalcEditSettings
                    {
                        DisplayFormat = "n4",
                        Name = e.Column.FieldName + "Calc",
                        MaskUseAsDisplayFormat = true,
                        AllowDefaultButton = false
                    };
                    break;
                case nameof(d.CreditSumma):
                    e.Column.EditSettings = new CalcEditSettings
                    {
                        DisplayFormat = "n2",
                        Name = e.Column.FieldName + "Calc",
                        MaskUseAsDisplayFormat = true,
                        AllowDefaultButton = false
                    };
                    break;
                case nameof(d.DebetSumma):
                    e.Column.EditSettings = new CalcEditSettings
                    {
                        DisplayFormat = "n2",
                        Name = e.Column.FieldName + "Calc",
                        MaskUseAsDisplayFormat = true,
                        AllowDefaultButton = false
                    };
                    break;
            }
        }

        private void GridRows_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
        }

        private void GridDocs_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            e.Column.ReadOnly = true;
            // ReSharper disable once LocalNameCapturedOnly
            // ReSharper disable once RedundantAssignment
            var d = new MutualAcountingInfoDocumentViewModel();
            switch (e.Column.Name)
            {
                case nameof(d.Note):
                    e.Column.EditSettings = new MemoEditSettings
                    {
                        ShowIcon = false
                    };
                    break;
                case nameof(d.Rate):
                    e.Column.EditSettings = new CalcEditSettings
                    {
                        DisplayFormat = "n4",
                        Name = e.Column.FieldName + "Calc",
                        MaskUseAsDisplayFormat = true,
                        AllowDefaultButton = false
                    };
                    break;
                case nameof(d.CreditSumma):
                    e.Column.EditSettings = new CalcEditSettings
                    {
                        DisplayFormat = "n2",
                        Name = e.Column.FieldName + "Calc",
                        MaskUseAsDisplayFormat = true,
                        AllowDefaultButton = false
                    };
                    break;
                case nameof(d.DebetSumma):
                    e.Column.EditSettings = new CalcEditSettings
                    {
                        DisplayFormat = "n2",
                        Name = e.Column.FieldName + "Calc",
                        MaskUseAsDisplayFormat = true,
                        AllowDefaultButton = false
                    };
                    break;
            }
        }

        private void GridDocs_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            gridDocs.TotalSummary.Clear();
            foreach (var col in gridDocs.Columns)
                if (LayoutManagerBase.ColumnFieldTypeCheckDecimal(col.FieldType))
                {
                    col.EditSettings = new CalcEditSettings
                    {
                        DisplayFormat = "n2",
                        Name = col.FieldName + "Calc",
                        AllowDefaultButton = false
                    };
                    var summary = new GridSummaryItem
                    {
                        SummaryType = SummaryItemType.Sum,
                        ShowInColumn = col.FieldName,
                        DisplayFormat = "{0:n2}",
                        FieldName = col.FieldName
                    };
                    gridDocs.TotalSummary.Add(summary);

                }
        }
    }
}