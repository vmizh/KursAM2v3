using System.ComponentModel;
using System.Windows;
using DevExpress.Data;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using LayoutManager;

namespace KursAM2.View.Finance
{
    /// <summary>
    ///     Interaction logic for BankOperationsView.xaml
    /// </summary>
    // ReSharper disable once InheritdocConsiderUsage
    public partial class BankOperationsView : ILayout
    {
        public BankOperationsView()
        {
            InitializeComponent();
            LayoutManager = new LayoutManager.LayoutManager(GetType().Name, this, MainLayoutControl);
            Loaded += Bank_Loaded;
            Closing += Bank_Closing;
        }

       
        public LayoutManager.LayoutManager LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }
        public void ResetLayot()
        {
            throw new System.NotImplementedException();
        }

        private void Bank_Closing(object sender, CancelEventArgs e)
        {
            LayoutManager.Save();
        }

        private void Bank_Loaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Load();
        }

        private void Base_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
        }
        private void Periods_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            var bandid = 1;
            foreach (var b in TreePeriods.Bands)
            {
                b.Name = "band" + bandid;
                bandid++;
            }

            //TreePeriods.TotalSummary.Clear();
            foreach (var col in TreePeriods.Columns)
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?) ||
                    col.FieldType == typeof(int?) || col.FieldType == typeof(int) ||
                    col.FieldType == typeof(float?) || col.FieldType == typeof(float) ||
                    col.FieldType == typeof(double?) || col.FieldType == typeof(double))
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = false,
                        DisplayFormat = "n2",
                        MaskUseAsDisplayFormat = true
                    };
        }

        private void Operations_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
            GridDocuments.TotalSummary.Clear();
            foreach (var col in GridDocuments.Columns)
                if (col.FieldType == typeof(decimal) || col.FieldType == typeof(decimal?) ||
                    col.FieldType == typeof(int?) || col.FieldType == typeof(int) ||
                    col.FieldType == typeof(float?) || col.FieldType == typeof(float) ||
                    col.FieldType == typeof(double?) || col.FieldType == typeof(double))
                {
                    col.EditSettings = new CalcEditSettings
                    {
                        AllowDefaultButton = false,
                        DisplayFormat = "n2",
                        MaskUseAsDisplayFormat = true
                    };
                    var summary = new GridSummaryItem
                    {
                        SummaryType = SummaryItemType.Sum,
                        ShowInColumn = col.FieldName,
                        DisplayFormat = "{0:n2}",
                        FieldName = col.FieldName
                    };
                    GridDocuments.TotalSummary.Add(summary);
                }

        }
    }
}