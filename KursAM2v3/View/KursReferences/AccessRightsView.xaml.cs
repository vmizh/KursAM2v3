using System.Windows;
using DevExpress.Xpf.Editors.Settings;
using DevExpress.Xpf.Grid;
using LayoutManager;

namespace KursAM2.View.KursReferences
{
    /// <summary>
    ///     Interaction logic for MUtualAccountingTypeRefView.xaml
    /// </summary>
    public partial class AccessRightsView : ILayout
    {
        private readonly CheckEditSettings ch = new CheckEditSettings();

        public AccessRightsView()
        {
            InitializeComponent();
            LayoutManager = new LayoutManager.LayoutManager(GetType().Name, this, MainLayoutControl);
            Loaded += ContryView_Loaded;
            Unloaded += ContryView_Unloaded;
        }

        public LayoutManager.LayoutManager LayoutManager { get; set; }
        public string LayoutManagerName { get; set; }
        public void SaveLayout()
        {
            LayoutManager.Save();
        }

        private void ContryView_Unloaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Save();
        }

        private void ContryView_Loaded(object sender, RoutedEventArgs e)
        {
            LayoutManager.Load();
        }

        private void GridControl_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            if (e.Column.FieldName != "UserBlock")
                e.Column.ReadOnly = true;
        }

        private void GridControl_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
        }

        private void TreeListPermissionStruct_OnAutoGeneratingColumn(object sender, AutoGeneratingColumnEventArgs e)
        {
            e.Column.Name = e.Column.FieldName;
            switch (e.Column.FieldName)
            {
                case "IsCheked":
                    e.Column.EditSettings = ch;
                    break;
            }
        }

        private void TreeListPermissionStruct_OnAutoGeneratedColumns(object sender, RoutedEventArgs e)
        {
        }
    }
}