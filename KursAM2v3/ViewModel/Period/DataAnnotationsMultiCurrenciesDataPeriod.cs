using Core.Helper;
using DevExpress.Mvvm.DataAnnotations;

namespace KursAM2.ViewModel.Period
{
    public class DataAnnotationsMultiCurrenciesDataPeriod : DataAnnotationForFluentApiBase,
        IMetadataProvider<MultyCurrenciesDatePeriod>
    {
        void IMetadataProvider<MultyCurrenciesDatePeriod>.BuildMetadata(
            MetadataBuilder<MultyCurrenciesDatePeriod> builder)
        {
            SetNotAutoGenerated(builder);
            builder.Property(_ => _.Id).NotAutoGenerated();
            builder.Property(_ => _.ParentId).NotAutoGenerated();
            builder.Property(_ => _.PeriodType).NotAutoGenerated();
            builder.Property(_ => _.Name).AutoGenerated().DisplayName("Период");
            builder.Property(_ => _.DateStart).AutoGenerated().DisplayName("Начало");
            builder.Property(_ => _.DateEnd).AutoGenerated().DisplayName("Конец");
            builder.Property(_ => _.ProfitRUB).AutoGenerated().DisplayName("Доход");
            builder.Property(_ => _.LossRUB).AutoGenerated().DisplayName("Расход");
            builder.Property(_ => _.ResultRUB).AutoGenerated().DisplayName("Результат");
            builder.Property(_ => _.ProfitUSD).AutoGenerated().DisplayName("Доход");
            builder.Property(_ => _.LossUSD).AutoGenerated().DisplayName("Расход");
            builder.Property(_ => _.ResultUSD).AutoGenerated().DisplayName("Результат");
            builder.Property(_ => _.ProfitEUR).AutoGenerated().DisplayName("Доход");
            builder.Property(_ => _.LossEUR).AutoGenerated().DisplayName("Расход");
            builder.Property(_ => _.ResultEUR).AutoGenerated().DisplayName("Результат");
            builder.Property(_ => _.ProfitGBP).AutoGenerated().DisplayName("Доход");
            builder.Property(_ => _.LossGBP).AutoGenerated().DisplayName("Расход");
            builder.Property(_ => _.ResultGBP).AutoGenerated().DisplayName("Результат");
            builder.Property(_ => _.ProfitCHF).AutoGenerated().DisplayName("Доход");
            builder.Property(_ => _.LossCHF).AutoGenerated().DisplayName("Расход");
            builder.Property(_ => _.ResultCHF).AutoGenerated().DisplayName("Результат");
            builder.Property(_ => _.ProfitSEK).AutoGenerated().DisplayName("Доход");
            builder.Property(_ => _.LossSEK).AutoGenerated().DisplayName("Расход");
            builder.Property(_ => _.ResultSEK).AutoGenerated().DisplayName("Результат");
            builder.Property(_ => _.DilerRUB).AutoGenerated().DisplayName("Дилер");
            builder.Property(_ => _.DilerUSD).AutoGenerated().DisplayName("Дилер");
            builder.Property(_ => _.DilerEUR).AutoGenerated().DisplayName("Дилер");
            builder.Property(_ => _.DilerCHF).AutoGenerated().DisplayName("Дилер");
            builder.Property(_ => _.DilerSEK).AutoGenerated().DisplayName("Дилер");
            builder.Property(_ => _.DilerGBP).AutoGenerated().DisplayName("Дилер");
            builder.Group("Период")
                .ContainsProperty(_ => _.Name)
                .ContainsProperty(_ => _.DateStart)
                .ContainsProperty(_ => _.DateEnd);
            builder.Group("RUB")
                .ContainsProperty(_ => _.ProfitRUB)
                .ContainsProperty(_ => _.LossRUB)
                .ContainsProperty(_ => _.DilerRUB)
                .ContainsProperty(_ => _.ResultRUB);
            builder.Group("USD")
                .ContainsProperty(_ => _.ProfitUSD)
                .ContainsProperty(_ => _.LossUSD)
                .ContainsProperty(_ => _.DilerUSD)
                .ContainsProperty(_ => _.ResultUSD);
            builder.Group("EUR")
                .ContainsProperty(_ => _.ProfitEUR)
                .ContainsProperty(_ => _.LossEUR)
                .ContainsProperty(_ => _.DilerEUR)
                .ContainsProperty(_ => _.ResultEUR);
            builder.Group("GBP")
                .ContainsProperty(_ => _.ProfitGBP)
                .ContainsProperty(_ => _.LossGBP)
                .ContainsProperty(_ => _.DilerGBP)
                .ContainsProperty(_ => _.ResultGBP);
            builder.Group("CHF")
                .ContainsProperty(_ => _.ProfitCHF)
                .ContainsProperty(_ => _.LossCHF)
                .ContainsProperty(_ => _.DilerCHF)
                .ContainsProperty(_ => _.ResultCHF);
            builder.Group("SEK")
                .ContainsProperty(_ => _.ProfitSEK)
                .ContainsProperty(_ => _.LossSEK)
                .ContainsProperty(_ => _.DilerSEK)
                .ContainsProperty(_ => _.ResultSEK);
        }
    }
}