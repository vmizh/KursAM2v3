using Core.Helper;
using DevExpress.Mvvm.DataAnnotations;
using System.ComponentModel.DataAnnotations;

namespace KursAM2.ViewModel.Management.BreakEven
{
    [MetadataType(typeof(DataAnnotationsCommonRowWithoutCurrency2))]
    public class BreakEvenManagerGroupViewModel : CommonRow
    {
        public decimal NomenklProfit => Summa > 0 && Result > 0 && Cost > 0 ? (Summa - DilerSumma)/Cost -1  : 0;
    }
    public class DataAnnotationsCommonRowWithoutCurrency2 : DataAnnotationForFluentApiBase,
        IMetadataProvider<BreakEvenManagerGroupViewModel>
    {
        void IMetadataProvider<BreakEvenManagerGroupViewModel>.BuildMetadata(
            MetadataBuilder<BreakEvenManagerGroupViewModel> builder)
        {
            SetNotAutoGenerated(builder);
            builder.Property(_ => _.Name).AutoGenerated().DisplayName("Наименование").LocatedAt(1).ReadOnly();
            builder.Property(_ => _.CurrencyName).NotAutoGenerated().DisplayName("Валюта").LocatedAt(2).ReadOnly();
            builder.Property(_ => _.Quantity).NotAutoGenerated().DisplayName("Кол-во").LocatedAt(3)
                .DisplayFormatString("n2")
                .ReadOnly();
            builder.Property(_ => _.Summa).AutoGenerated().DisplayName("Сумма").LocatedAt(5).DisplayFormatString("n2")
                .ReadOnly();
            builder.Property(_ => _.Price).NotAutoGenerated().DisplayName("Цена").LocatedAt(4).DisplayFormatString("n2")
                .ReadOnly();
            builder.Property(_ => _.Cost).AutoGenerated().DisplayName("Себестоимость").LocatedAt(8)
                .DisplayFormatString("n2")
                .ReadOnly();
            builder.Property(_ => _.Naklad).AutoGenerated().DisplayName("Себе-сть накл.").LocatedAt(7)
                .DisplayFormatString("n2")
                .ReadOnly();
            builder.Property(_ => _.CostOne).AutoGenerated().DisplayName("Себе-сть ед.").LocatedAt(14)
                .DisplayFormatString("n2")
                .ReadOnly();
            builder.Property(_ => _.NakladOne).AutoGenerated().DisplayName("Себе-сть ед. накл.").LocatedAt(13)
                .DisplayFormatString("n2").ReadOnly();
            builder.Property(_ => _.DilerSumma).AutoGenerated().DisplayName("Дилерские").LocatedAt(10)
                .DisplayFormatString("n2")
                .ReadOnly();
            builder.Property(_ => _.Result).AutoGenerated().LocatedAt(11).DisplayName("Результат")
                .DisplayFormatString("n2")
                .ReadOnly();
            builder.Property(_ => _.CostWOReval).AutoGenerated().DisplayName("Себе-сть (факт)")
                .DisplayFormatString("n2").ReadOnly();
            builder.Property(_ => _.CostWORevalOne).AutoGenerated().DisplayName("Себе-сть (факт) ед.").LocatedAt(12)
                .DisplayFormatString("n2").ReadOnly();
            builder.Property(_ => _.ResultWOReval).AutoGenerated().DisplayName("Результат (факт)").LocatedAt(9)
                .DisplayFormatString("n2").ReadOnly();
            builder.Property(_ => _.NomenklProfit).AutoGenerated().DisplayName("Рентабельность").LocatedAt(15)
                .DisplayFormatString("P").ReadOnly();
        }
    }
}
